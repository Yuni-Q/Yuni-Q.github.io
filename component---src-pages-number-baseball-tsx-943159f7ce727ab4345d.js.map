{"version":3,"file":"component---src-pages-number-baseball-tsx-943159f7ce727ab4345d.js","mappings":"8IAwHA,UAtHkCA,KAChC,MAAM,EAACC,EAAO,EAAEC,IAAcC,EAAAA,EAAAA,UAAmB,KAC3C,EAACC,EAAK,EAAEC,IAAYF,EAAAA,EAAAA,UAAmB,KACvC,EAACG,EAAS,EAAEC,IAAgBJ,EAAAA,EAAAA,UAAmB,KAC/C,EAACK,EAAQ,EAAEC,IAAeN,EAAAA,EAAAA,UAAS,IACnC,EAACO,EAAK,EAAEC,IAAYR,EAAAA,EAAAA,UAAS,IAC7BS,EAAeR,EAAMS,OAAS,GAAKL,EAAW,EAC9CM,GAAaC,EAAAA,EAAAA,cAAY,IACR,IAAjBL,EAAMG,OACDG,MAAM,mBAEa,IAAxB,IAAIC,IAAIP,GAAOQ,KACVF,MAAM,qBAEXZ,EAAMe,SAAST,IACVM,MAAM,iBAGd,CAACN,EAAON,IAuBX,OAtBAgB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAOC,MAAM,GAChBC,KAAK,GACLC,KAAI,CAACC,EAAGC,IAAUA,EAAQ,IACvBC,EAAa,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWV,EAAKR,QAC9Cc,EAAWK,KAAKX,EAAKK,IACrBL,EAAKY,OAAOP,EAAO,EACrB,CACAQ,QAAQC,IAAIR,GACZzB,EAAWyB,EAAW,GACrB,KACHP,EAAAA,EAAAA,YAAU,KACR,GAAIR,EAAc,CAChB,MAAMwB,EAASnC,EAAQoC,KAAK,IAC5B9B,GAAcD,GAAS,GAAAgC,QAAAC,EAAAA,EAAAA,GAClBjC,GAAS,iBACI8B,EAAM,UAE1B,IACC,CAAChC,EAAOI,IAETgC,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,UAGVN,EAAAA,cAAA,QACEO,SAAWC,IAET,GADAA,EAAEC,iBACErC,EACF,OAEF,IAAKE,IACH,OAEFH,EAAS,IAETN,GAAUD,GAAK,GAAAkC,QAAAC,EAAAA,EAAAA,GAASnC,GAAK,CAAEM,MAC/B,MAAM0B,EAASnC,EAAQoC,KAAK,IAC5B,GAAI3B,IAAU0B,EAEZ,YADA7B,GAAcD,GAAS,GAAAgC,QAAAC,EAAAA,EAAAA,GAASjC,GAAS,UAI3C,IAAI4C,EAAS,EACTC,EAAO,EASX,GARAlD,EAAQmD,SAAQ,CAACC,EAASC,KACxB,MAAM5B,EAAQhB,EAAM6C,QAAQF,EAAQG,YAChC9B,IAAU4B,EACZJ,GAAU,EACDxB,GAAS,IAClByB,GAAQ,EACV,KAEGD,IAAWC,EAGd,OAFA5C,GAAcD,GAAS,GAAAgC,QAAAC,EAAAA,EAAAA,GAASjC,GAAS,CAAKI,EAAK,iBACnDD,GAAaD,GAAaA,EAAW,IAGvCD,GAAcD,GAAS,GAAAgC,QAAAC,EAAAA,EAAAA,GAClBjC,GAAS,CACTI,EAAK,MAAMwC,EAAM,YAAYC,KAChC,GAGJX,EAAAA,cAAA,SACEiB,KAAK,OACL/C,MAAOA,EACPgD,UAAW,EACXC,UAAW,EACXC,SAAUhD,EACViD,QAAQ,yBACRC,SAAWd,GAAMrC,EAASqC,EAAEe,OAAOrD,OACnC+B,MAAO,CAAEuB,YAAa,KAExBxB,EAAAA,cAAA,UAAQiB,KAAK,UAAS,OAExBjB,EAAAA,cAAA,WACEA,EAAAA,cAAA,WAAK,YACOhC,EACTF,EAAUkB,KAAKyC,GAEZzB,EAAAA,cAAA,OAAK0B,IAAKD,EAAMxB,MAAO,CAAE0B,UAAW,WACjCF,OAMP,C","sources":["webpack://yuni-q-blog/./src/pages/number-baseball.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nconst NumberBaseball: React.VFC = () => {\n  const [numbers, setNumbers] = useState<number[]>([]);\n  const [tries, setTries] = useState<string[]>([]);\n  const [triesText, setTriesText] = useState<string[]>([]);\n  const [outCount, setOutCount] = useState(0);\n  const [value, setValue] = useState('');\n  const endCondition = tries.length > 9 || outCount > 2;\n  const checkInput = useCallback(() => {\n    if (value.length !== 4) {\n      return alert('4자리 숫자를 입력해 주세요');\n    }\n    if (new Set(value).size !== 4) {\n      return alert('중복되지 않게 입력해 주세요.');\n    }\n    if (tries.includes(value)) {\n      return alert('이미 시도한 값입니다.');\n    }\n    return true;\n  }, [value, tries]);\n  useEffect(() => {\n    const nums = Array(9)\n      .fill(0)\n      .map((_, index) => index + 1);\n    const newNumbers = [];\n    for (let i = 0; i < 4; i++) {\n      const index = Math.floor(Math.random() * nums.length);\n      newNumbers.push(nums[index]);\n      nums.splice(index, 1);\n    }\n    console.log(newNumbers);\n    setNumbers(newNumbers);\n  }, []);\n  useEffect(() => {\n    if (endCondition) {\n      const answer = numbers.join('');\n      setTriesText((triesText) => [\n        ...triesText,\n        `패배하였습니다. 정답은 ${answer}입니다.`,\n      ]);\n    }\n  }, [tries, outCount]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        height: '100vh',\n      }}\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (endCondition) {\n            return;\n          }\n          if (!checkInput()) {\n            return;\n          }\n          setValue('');\n\n          setTries((tries) => [...tries, value]);\n          const answer = numbers.join('');\n          if (value === answer) {\n            setTriesText((triesText) => [...triesText, `홈런`]);\n            return;\n          }\n\n          let strike = 0;\n          let ball = 0;\n          numbers.forEach((element, idx) => {\n            const index = value.indexOf(element.toString());\n            if (index === idx) {\n              strike += 1;\n            } else if (index > -1) {\n              ball += 1;\n            }\n          });\n          if (!strike && !ball) {\n            setTriesText((triesText) => [...triesText, `${value} : 아웃`]);\n            setOutCount((outCount) => outCount + 1);\n            return;\n          }\n          setTriesText((triesText) => [\n            ...triesText,\n            `${value} : ${strike}스트라이크, 볼 ${ball}`,\n          ]);\n        }}\n      >\n        <input\n          type=\"text\"\n          value={value}\n          minLength={4}\n          maxLength={4}\n          readOnly={endCondition}\n          pattern=\"^(?!.*(.).*\\1)\\d{4}$\"\n          onChange={(e) => setValue(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button type=\"submit\">확인</button>\n      </form>\n      <div>\n        <div>\n          아웃 카운트 : {outCount}\n          {triesText.map((text) => {\n            return (\n              <div key={text} style={{ textAlign: 'center' }}>\n                {text}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NumberBaseball;\n"],"names":["NumberBaseball","numbers","setNumbers","useState","tries","setTries","triesText","setTriesText","outCount","setOutCount","value","setValue","endCondition","length","checkInput","useCallback","alert","Set","size","includes","useEffect","nums","Array","fill","map","_","index","newNumbers","i","Math","floor","random","push","splice","console","log","answer","join","concat","_toConsumableArray","React","style","display","justifyContent","alignItems","flexDirection","height","onSubmit","e","preventDefault","strike","ball","forEach","element","idx","indexOf","toString","type","minLength","maxLength","readOnly","pattern","onChange","target","marginRight","text","key","textAlign"],"sourceRoot":""}