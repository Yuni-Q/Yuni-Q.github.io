{"version":3,"sources":["webpack:///./src/pages/scroll.tsx"],"names":["GlobalWidth","styled","div","BoxContainer","ImageBox","image","ScrollText","Step","MoveBox","StepWrapper","Scroll","useEffect","setTimeout","scrollTo","actions","move","isTrue","document","querySelector","style","transform","steps","querySelectorAll","graphicItems","currentItem","ioIndex","io","IntersectionObserver","entries","observer","parseInt","target","dataset","index","activate","action","classList","add","window","addEventListener","i","step","observe","boundingRect","getBoundingClientRect","top","innerHeight","remove","Array","fill","map","_","idx","key","className","data-index","data-action"],"mappings":"8FACA,4CAGMA,EAAcC,IAAOC,IAAV,sEAAGD,CAAH,mDAMXE,EAAeF,IAAOC,IAAV,uEAAGD,CAAH,iFAQZG,EAAWH,IAAOC,IAAV,mEAAGD,CAAH,sPAWM,qBAAGI,SAQjBC,EAAaL,IAAOC,IAAV,qEAAGD,CAAH,wBAIVM,EAAON,IAAOC,IAAV,+DAAGD,CAAH,0JASJO,EAAUP,IAAOC,IAAV,kEAAGD,CAAH,uLAWPQ,EAAcR,IAAOC,IAAV,sEAAGD,CAAH,2CA4FFS,UAvFA,WAmDb,OAlDAC,qBAAU,WACRC,YAAW,kBAAMC,SAAS,EAAG,KAAI,KACjC,IAAMC,EAAU,CACdC,KADc,SACTC,GAEAC,SAASC,cAAc,0BAA0CC,MAAMC,UADtEJ,EACF,oBAEA,sBAIAK,EAAQJ,SAASK,iBAAiB,SAClCC,EAAeN,SAASK,iBAAiB,iBAC3CE,EAAcD,EAAa,GAC3BE,EAAU,EAERC,EAAK,IAAIC,sBAAqB,SAACC,EAASC,GAC5CJ,EAAUK,SAAUF,EAAQ,GAAGG,OAAuBC,QAAQC,MAAO,OAGjEC,EAAW,SAACC,GAChBX,EAAYY,UAAUC,IAAI,WACtBF,GACFrB,EAAQqB,IAAQ,IAUpBG,OAAOC,iBAAiB,UAAU,WAChC,IAAK,IAAIC,EAAIf,EAAU,EAAGe,EAAIf,EAAU,EAAGe,IAAK,CAC9C,IAAMC,EAAOpB,EAAMmB,GACnB,GAAKC,EAAL,CAGAf,EAAGgB,QAAQD,GACX,IAAME,EAAeF,EAAKG,wBACtBD,EAAaE,IAA2B,GAArBP,OAAOQ,aAAqBH,EAAaE,IAA2B,GAArBP,OAAOQ,cAf7DX,EAgBFX,EAA4BQ,QAAQG,OAfpDX,EAAYY,UAAUW,OAAO,WACzBZ,GACFrB,EAAQqB,IAAQ,GAcdX,EAAeD,EAAakB,EAAKT,QAAQC,OACzCC,EAAUV,EAA4BQ,QAAQG,UAlBjC,IAACA,KAsBpBD,EAAUV,EAA4BQ,QAAQG,UAC7C,IAED,kBAACnC,EAAD,KACE,iCACGgD,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACzB,OAAO,0CAGX,iCACE,kBAACjD,EAAD,KACG6C,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACxB,IAAM/C,EAAQ+C,EAAM,EAAI,qBAAuB,oBAC/C,OAAY,IAARA,EACK,kBAAChD,EAAD,CAAUiD,IAAG,gBAAkBD,EAAOE,UAAU,eAAeC,aAAYH,EAAKI,cAAY,OAAOnD,MAAOA,GAC/G,kBAACG,EAAD,CAAS8C,UAAU,UAGhB,kBAAClD,EAAD,CAAUiD,IAAG,gBAAkBD,EAAOE,UAAU,eAAeC,aAAYH,EAAK/C,MAAOA,QAGlG,kBAACI,EAAD,KACGuC,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACxB,OAAO,kBAAC7C,EAAD,CAAM8C,IAAG,QAAUD,EAAOE,UAAU,OAAOC,aAAYH,GAC5D,kBAAC9C,EAAD,cAAmB8C,SAK3B,iCACGJ,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACzB,OAAO","file":"component---src-pages-scroll-tsx-c30e00f1fcf6d45bfa3a.js","sourcesContent":["import { entries } from 'lodash';\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GlobalWidth = styled.div`\n  max-width: 620px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nconst BoxContainer = styled.div`\n  box-sizing: border-box;\n  overflow-x: hidden;\n  position: sticky; \n  top: 0;\n  height: 100vh;\n`;\n\nconst ImageBox = styled.div<{ image: string }>`\n  will-change: opacity;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-height: 100vh;\n  background: url(${({ image }) => image}) no-repeat center / contain;\n  opacity: 0;\n  transition: 0.5s;\n  &.visible {\n    opacity: 1;\n  }\n`;\n\nconst ScrollText = styled.div`\n  position: relative;\n`\n\nconst Step = styled.div`\n  margin: 0 16px 80vh;\n  box-sizing: border-box;\n  padding: 0.5rem 1rem;\n  border-radius: 10px;\n  background: rgba(255,255,255,0.8);\n  box-shadow: rgba(0,0,0,0.3) 0 0 3px;\n`;\n\nconst MoveBox = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100px;\n  height: 100px;\n  background: url('/favicon_black.ico') no-repeat center / contain;\n  transform: translateX(100vw);\n  transition: 1s 0.5s linear;\n`;\n\nconst StepWrapper = styled.div`\n  position: relative;\n  padding-bottom: 1px;\n`;\n\nconst Scroll = () => {\n  useEffect(() => {\n    setTimeout(() => scrollTo(0, 0), 100)\n    const actions = {\n      move(isTrue: boolean) {\n        if (isTrue) {\n          (document.querySelector('[data-index=\"4\"] .move') as HTMLElement).style.transform = `translateX(-100%)`;\n        } else {\n          (document.querySelector('[data-index=\"4\"] .move') as HTMLElement).style.transform = `translateX(100vw)`;\n        }\n      }\n    }\n    const steps = document.querySelectorAll('.step');\n    const graphicItems = document.querySelectorAll('.graphic-item');\n    let currentItem = graphicItems[0];\n    let ioIndex = 0\n\n    const io = new IntersectionObserver((entries, observer) => {\n      ioIndex = parseInt((entries[0].target as HTMLElement).dataset.index, 10);\n    });\n\n    const activate = (action) => {\n      currentItem.classList.add('visible');\n      if (action) {\n        actions[action](true);\n      }\n    }\n    const inactivate = (action) => {\n      currentItem.classList.remove('visible')\n      if (action) {\n        actions[action](false);\n      }\n\n    }\n    window.addEventListener('scroll', () => {\n      for (let i = ioIndex - 1; i < ioIndex + 2; i++) {\n        const step = steps[i] as HTMLElement;\n        if (!step) {\n          continue;\n        }\n        io.observe(step)\n        const boundingRect = step.getBoundingClientRect();\n        if (boundingRect.top > window.innerHeight * 0.1 && boundingRect.top < window.innerHeight * 0.8) {\n          inactivate((currentItem as HTMLElement).dataset.action);\n          currentItem = (graphicItems[step.dataset.index]);\n          activate((currentItem as HTMLElement).dataset.action);\n        }\n      }\n    })\n    activate((currentItem as HTMLElement).dataset.action);\n  }, [])\n  return (\n    <GlobalWidth>\n      <section>\n        {Array(30).fill(1).map((_, idx) => {\n          return <div>상단 내용</div>\n        })}\n      </section>\n      <section >\n        <BoxContainer>\n          {Array(6).fill(1).map((_, idx) => {\n            const image = idx % 2 ? '/favicon_black.ico' : '/favicon_blue.ico'\n            if (idx === 4) {\n              return <ImageBox key={`graphic-item-${idx}`} className=\"graphic-item\" data-index={idx} data-action=\"move\" image={image}>\n                <MoveBox className=\"move\" />\n              </ImageBox>\n            }\n            return <ImageBox key={`graphic-item-${idx}`} className=\"graphic-item\" data-index={idx} image={image} />\n          })}\n        </BoxContainer>\n        <StepWrapper>\n          {Array(6).fill(1).map((_, idx) => {\n            return <Step key={`step-${idx}`} className=\"step\" data-index={idx}>\n              <ScrollText>중간 내용 {idx}</ScrollText>\n            </Step>\n          })}\n        </StepWrapper>\n      </section>\n      <section>\n        {Array(30).fill(1).map((_, idx) => {\n          return <div>하단 내용</div>\n        })}\n      </section>\n    </GlobalWidth>\n  )\n}\n\nexport default Scroll;\n"],"sourceRoot":""}