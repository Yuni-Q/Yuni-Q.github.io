{"componentChunkName":"component---src-templates-blog-post-js","path":"/실용주의 프론트 엔드 개발/코루틴을-사용한-지연-평가/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"1b60fa3a-ce2b-5217-9b92-b035a8614099","excerpt":"…","html":"<h2 id=\"코루틴이란\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%A3%A8%ED%8B%B4%EC%9D%B4%EB%9E%80\" aria-label=\"코루틴이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코루틴이란</h2>\n<ul>\n<li>코루틴은 실행 지점을 코드 블럭으로 저장하여, 해당 지점을 실행/중단/재시작을 하는 것을 말합니다.</li>\n<li>자발적/주기적으로 유휴상태를 만들 수 있기 때문에 비선점 멀티태스킹이 가능합니다.</li>\n<li>동시성과 병렬 처리가 가능합니다.</li>\n<li>코루틴 사이의 전환은 컨텍스트 전환이 발생하지 않습니다.</li>\n</ul>\n<h3 id=\"컨텍스트-전환\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%A0%84%ED%99%98\" aria-label=\"컨텍스트 전환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨텍스트 전환</h3>\n<ul>\n<li>기존의 프로세스의 상태 또는 레지스터값을 저장 후 다음 프로세스를 수행하도록 새로운 프로세스의 상태 또는 레지스터값을 교체하는 작업입니다.</li>\n</ul>\n<h3 id=\"서브-루틴과-코루틴\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C-%EB%A3%A8%ED%8B%B4%EA%B3%BC-%EC%BD%94%EB%A3%A8%ED%8B%B4\" aria-label=\"서브 루틴과 코루틴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브 루틴과 코루틴</h3>\n<ul>\n<li>서브루틴은 호출자가 호출되면 호출자에게 항상 return을 합니다. 반면에 코루틴은 특정 지점에서 실행/중단/재시작을 할 수 있습니다.</li>\n</ul>\n<h3 id=\"스레드와-코루틴\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C%EC%99%80-%EC%BD%94%EB%A3%A8%ED%8B%B4\" aria-label=\"스레드와 코루틴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드와 코루틴</h3>\n<ul>\n<li>스레드는 선점식 멀티태스킹을 합니다. 즉 동시성을 제공하면 병렬 처리는 제공하지 않습니다. 반면에 코루틴은 컨텍스트 전환없이 동시성, 병렬처리가 가능합니다.</li>\n</ul>\n<h3 id=\"재귀와-코루틴\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80%EC%99%80-%EC%BD%94%EB%A3%A8%ED%8B%B4\" aria-label=\"재귀와 코루틴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀와 코루틴</h3>\n<ul>\n<li>재귀는 반복적인 호출을 위해 새로운 스택 프레임이 필요하여 최악의 경우에는 스택 오버플로우가 발생합니다. 반면에 코루틴은 특정 지점 코드 블럭이 저장되므로 데이터가 쌓이지 않습니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/10/undefined\">코루틴을 사용한 지연 평가</a></li>\n</ul>","frontmatter":{"title":"코루틴을 사용한 지연 평가","date":"May 03, 2020"}}},"pageContext":{"slug":"/실용주의 프론트 엔드 개발/코루틴을-사용한-지연-평가/","previous":{"fields":{"slug":"/실용주의 프론트 엔드 개발/영속-자료-구조(persistent-data-structures)/"},"frontmatter":{"title":"영속 자료 구조(Persistent Data Structures)","category":"실용주의 프론트 엔드 개발","draft":false}},"next":{"fields":{"slug":"/실용주의 프론트 엔드 개발/async-await-정리/"},"frontmatter":{"title":"async await 정리","category":"실용주의 프론트 엔드 개발","draft":false}}}}}