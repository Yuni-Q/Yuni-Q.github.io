{"componentChunkName":"component---src-templates-blog-post-js","path":"/실용주의 프론트 엔드 개발/재사용-가능한-코드-개발/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"f3179d00-8933-5363-ab3b-ca1ee306b81d","excerpt":"재사용 가능한 모듈 또는 컴포넌트를 만드는 작업은 비용을 절약하는 데 큰 역할을 합니다. 재사용성 관련해서는 난이도 3배의 법칙이 있습니다. 재사용 가능한 모듈을 만드는 작업은 단일 소프트웨어에서 사용할 모듈을 개발할 때보다…","html":"<ul>\n<li>재사용 가능한 모듈 또는 컴포넌트를 만드는 작업은 비용을 절약하는 데 큰 역할을 합니다. 재사용성 관련해서는 난이도 3배의 법칙이 있습니다. 재사용 가능한 모듈을 만드는 작업은 단일 소프트웨어에서 사용할 모듈을 개발할 때보다 3배 어렵다는 법칙입니다.</li>\n<li>프런트의 역할이 많아지면서 소프트웨어의 볼륨이 커졌습니다. 재사용 가능한 모듈과 컴포넌트를 만들지 않으면 유연한 요구사항 대응과 개발 비용이 많이 소비될 수 밖에 없습니다.</li>\n</ul>\n<h2 id=\"재사용성\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1\" aria-label=\"재사용성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재사용성</h2>\n<ul>\n<li>재사용을 위한 소프트웨어 개발은 장래의 프로젝트에서 재사용할 수 있는 모듈을 현재 소프트웨어 개발 과정에서 창출하는 것을 의미합니다.</li>\n<li>다른 소프트웨어에서 재사용하기 위한 소프트웨어를 개발합니다.</li>\n<li>재사용하는 소프트웨어를 개발하기 위해서는 요구사항 분석과정을 통해 일반화를 해야 합니다. 그리고 기존 구조나 모듈에 조립을 할 수 있도록하면 종료됩니다.</li>\n</ul>\n<h3 id=\"요구사항-분석\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%B6%84%EC%84%9D\" aria-label=\"요구사항 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구사항 분석</h3>\n<ul>\n<li>요구사항 분석 단계에서는 해당 기능이 사용되는 모든 페이지의 요구사항을 모두 분석하는 것입니다. 모든 페이지의 사용되는 요구사항을 파악하면 일반화하기 용이하기 때문에 되도록 꼼꼼히 살펴볼 필요가 있습니다.</li>\n<li>간혹 특정 페이지의 요구사항만 분석하는 경우가 있습니다. 특정 페이지의 기능만 맞춰서 구현하게 되는 경우 다시 수정하는 작업과 리펙토링 하는 비용이 발생합니다. 초기 요구사항 비용이 많이 들어도 재작업 비용보다는 적기 때문에 모든 경우의 요구사항을 담아야 합니다.</li>\n</ul>\n<h2 id=\"일반화\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98%ED%99%94\" aria-label=\"일반화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반화</h2>\n<ul>\n<li>일반화는 구체적인 대상으로부터 공통 성질을 추출해서 더욱 범용적인 개념으로 정식화하는 것입니다.</li>\n<li>다른 여러 개의 대상에 집중할 때 공통된 성질을 찾아내고 공통점을 조합시켜 범용화 합니다.</li>\n<li>개념을 구상합니다.</li>\n</ul>\n<h2 id=\"재사용-코드는-언제-개발해야-할까\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EC%82%AC%EC%9A%A9-%EC%BD%94%EB%93%9C%EB%8A%94-%EC%96%B8%EC%A0%9C-%EA%B0%9C%EB%B0%9C%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"재사용 코드는 언제 개발해야 할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재사용 코드는 언제 개발해야 할까</h2>\n<ul>\n<li>재사용 코드 필요는 요구사항을 분석할 때 인지하게 됩니다. 기획서를 리뷰하면서 요구사항을 도출하게 되는데, 이때 일반화된 요구사항을 만들어야 합니다. 그리고 기능 개발 시작에 앞서 공통 컴포넌트 또는 모듈을 개발해야 되며, 동료가 중복되서 개발하지 않게 해야 합니다.</li>\n<li>재사용 코드는 인지가 되는 시점에 개발되지 않으면 중복 코드를 발생하게 됩니다. 그 상황은 이른바 부채를 떠안는 샘이 되는데, 이를 기술적 부채라고 부릅니다. 기술적 부채를 만들게 되면 재설계와 리펙토링 비용이 발생되므로 되도록 재사용 코드가 필요하다고 인지되는 시점에 바로 개발하는 것이 좋습니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/9/9_3\">재사용 가능한 코드 개발</a></li>\n</ul>","frontmatter":{"title":"재사용 가능한 코드 개발","date":"May 02, 2020"}}},"pageContext":{"slug":"/실용주의 프론트 엔드 개발/재사용-가능한-코드-개발/","previous":{"fields":{"slug":"/실용주의 프론트 엔드 개발/객체지향은-객체와-객체간의-관계로-시작한다/"},"frontmatter":{"title":"객체지향은 객체와 객체간의 관계로 시작한다","category":"실용주의 프론트 엔드 개발","draft":false}},"next":{"fields":{"slug":"/실용주의 프론트 엔드 개발/에러-처리-정리/"},"frontmatter":{"title":"에러 처리 정리","category":"실용주의 프론트 엔드 개발","draft":false}}}}}