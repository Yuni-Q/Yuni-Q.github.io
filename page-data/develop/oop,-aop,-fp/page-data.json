{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/develop/oop,-aop,-fp/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"","utterances":"Yuni-Q/blog"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"f6756d52-a6fa-54bf-bd6a-c3b5fd27391d","excerpt":"OOP (객체지향 프로그래밍) 자세히보기 AOP (관점지향 프로그래밍) 스프링 프레임워크의 핵심 요소 중 하나 입니다. 비즈니스 로직과 공통 모듈로 분리하고, 핵심 로직 사이사이에 공통 모듈을 잘 끼워 넣는 것입니다. 이때 공통 모듈을 코드 밖에서 설정된다는 것이 핵심입니다. 인증, 로깅, 트랜잭션 처리에 용이합니다. FP (함수형 프로그래밍) 함수형 프로그래밍은 선언형 프로그래밍으로, 어떻게(How)가 아닌 을 정의한다. C, Java…","html":"<h2 id=\"oop-객체지향-프로그래밍\" style=\"position:relative;\"><a href=\"#oop-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"oop 객체지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OOP (객체지향 프로그래밍)</h2>\n<p><a href='/develop/객체지향-프로그래밍(oop)/' target='_blank' rel=\"noopener noreferrer\">자세히보기</a></p>\n<h2 id=\"aop-관점지향-프로그래밍\" style=\"position:relative;\"><a href=\"#aop-%EA%B4%80%EC%A0%90%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"aop 관점지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AOP (관점지향 프로그래밍)</h2>\n<ul>\n<li>스프링 프레임워크의 핵심 요소 중 하나 입니다.</li>\n<li>비즈니스 로직과 공통 모듈로 분리하고, 핵심 로직 사이사이에 공통 모듈을 잘 끼워 넣는 것입니다. 이때 공통 모듈을 코드 밖에서 설정된다는 것이 핵심입니다.</li>\n<li>인증, 로깅, 트랜잭션 처리에 용이합니다.</li>\n</ul>\n<h2 id=\"fp-함수형-프로그래밍\" style=\"position:relative;\"><a href=\"#fp-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"fp 함수형 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FP (함수형 프로그래밍)</h2>\n<ul>\n<li>함수형 프로그래밍은 선언형 프로그래밍으로, 어떻게(How)가 아닌 <code class=\"language-text\">무엇(What)</code>을 정의한다.</li>\n<li>C, Java등의 언어는 명령형 프로그래밍이며, 알고리즘을 기술하고 목적은 기술하지 않습니다.</li>\n<li>선언형은 반대로 알고리즘은 기술하지 않고 목적 위주로 기술하며, 데이터의 입력이 주어지고 데이터의 흐름을 추상적을 정의하는 방식입니다.</li>\n<li>함수형 프로그래밍은 변수 할당에 부과되는 규율입니다.</li>\n</ul>\n<h2 id=\"구조적-프로그래\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98\" aria-label=\"구조적 프로그래 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조적 프로그래</h2>\n<ul>\n<li>구조적 프로그래밍은 제어흐름의 직접적인 전환에 부과되는 규율입니다.</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/develop/oop,-aop,-fp/#oop-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">OOP (객체지향 프로그래밍)</a></li>\n<li><a href=\"/develop/oop,-aop,-fp/#aop-%EA%B4%80%EC%A0%90%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">AOP (관점지향 프로그래밍)</a></li>\n<li><a href=\"/develop/oop,-aop,-fp/#fp-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">FP (함수형 프로그래밍)</a></li>\n<li><a href=\"/develop/oop,-aop,-fp/#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98\">구조적 프로그래</a></li>\n</ul>","frontmatter":{"title":"OOP, AOP, FP","date":"April 16, 2020"}}},"pageContext":{"slug":"/develop/oop,-aop,-fp/","previous":{"fields":{"slug":"/javascript/async-await/"},"frontmatter":{"title":"Async Await","category":"javascript","tags":null,"draft":false}},"next":{"fields":{"slug":"/object/object-chapter-08-의존성-관리하기/"},"frontmatter":{"title":"object chapter 08 의존성 관리하기","category":"object","tags":null,"draft":false}},"tag":[]}},"staticQueryHashes":["3128451518","96099027"]}