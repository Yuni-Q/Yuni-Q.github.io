{"componentChunkName":"component---src-templates-blog-post-js","path":"/develop/웹과-통신/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni-q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"1e64ec45-e5fa-5d16-87ea-1c11b9abbd5a","excerpt":"HTTP 요청 흐름 (웹브라우저에서의 요청) 브라우저에서 먼저 URL에 적힌 값을 파싱하여, HTTP 요청 메세지를 만듭니다. 만든 메세지를 웹 서버로 전송하는데, 이때 웹 브라우저 직접 전송을 하는것이 아니라 OS에 ‘보내주세요’ 하고 의뢰를 하게 됩니다. OS는 DNS서버를 조회해서 Host이름을 보내야 할 IP 주소로 변환하게 됩니다. 프로토콜 스택(운영체제에 내장된 네트워크 제어용 소프트웨어, TCP/IP 계층)과 LAN…","html":"<h2 id=\"http-요청-흐름-웹브라우저에서의-요청\" style=\"position:relative;\"><a href=\"#http-%EC%9A%94%EC%B2%AD-%ED%9D%90%EB%A6%84-%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C%EC%9D%98-%EC%9A%94%EC%B2%AD\" aria-label=\"http 요청 흐름 웹브라우저에서의 요청 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 요청 흐름 (웹브라우저에서의 요청)</h2>\n<ol>\n<li>브라우저에서 먼저 URL에 적힌 값을 파싱하여, HTTP 요청 메세지를 만듭니다.</li>\n<li>만든 메세지를 웹 서버로 전송하는데, 이때 웹 브라우저 직접 전송을 하는것이 아니라 OS에 ‘보내주세요’ 하고 의뢰를 하게 됩니다.</li>\n<li>OS는 DNS서버를 조회해서 Host이름을 보내야 할 IP 주소로 변환하게 됩니다.</li>\n</ol>\n<hr>\n<ol start=\"4\">\n<li>프로토콜 스택(운영체제에 내장된 네트워크 제어용 소프트웨어, TCP/IP 계층)과 LAN 어댑터에서 브라우저로부터 메시지를 받습니다.</li>\n<li>브라우저로부터 받은 메시지를 패킷 속에 저장합니다. 그리고 수신 주소를 제어정보에 덧붙입니다.</li>\n<li>그 다음, 패킷은 LAN 어댑터에 넘깁니다.</li>\n<li>LAN 어댑터는 패킷을 전기 신호로 변환시켜 LAN 케이블에 송출하게 됩니다.</li>\n</ol>\n<hr>\n<ol start=\"8\">\n<li>허브, 스위치, 라우터 에서 LAN 어댑터로부터 송신한 패킷을 수신합니다.</li>\n<li>라우터는 패킷을 ISP에 전달, 인터넷으로 들어가게 됩니다.</li>\n</ol>\n<hr>\n<ol start=\"10\">\n<li>\n<p>액세스 회선에 의해 통신사용 라우터(POP, Point Of Presence)까지 운반됩니다.</p>\n<ul>\n<li>액세스 회선, ISP : 액세스 회선이라는 것은 인터넷의 입구에 있는 통신 회선입니다.</li>\n</ul>\n</li>\n<li>POP를 거쳐 인터넷의 핵심부로 들어가게 된다. 고속 라우터들 사이로 목적지까지 패킷이 흘러가게 된다.</li>\n</ol>\n<hr>\n<ol start=\"12\">\n<li>인터넷 핵심부를 통과한 패킷은 목적지의 LAN에 도착하게 됩니다.</li>\n<li>방화벽이 먼저 패킷을 검사한 후, 캐시서버로 보내서 웹 서버까지 갈 필요가 있는지 검사합니다.</li>\n</ol>\n<hr>\n<ol start=\"14\">\n<li>패킷이 물리적 웹 서버에 도착하면, 웹 서버의 프로토콜 스택이 패킷을 추출하여 메시지를 복원하고, 웹 서버 애플리케이션에 넘깁니다.</li>\n<li>애플리케이션은 요청에 대한 응답 데이터를 넣어 클라이언트로 회송합니다.</li>\n<li>온 방식 그대로 전송되게 됩니다.</li>\n</ol>\n<h2 id=\"httphttps-차이\" style=\"position:relative;\"><a href=\"#httphttps-%EC%B0%A8%EC%9D%B4\" aria-label=\"httphttps 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP/HTTPS 차이</h2>\n<ul>\n<li>HTTP + SSL = HTTPS</li>\n<li>HTTP는 평문 통신입니다.</li>\n<li>TCP/IP 특성상 도청이 가능하며, 통신 상대를 확인하지 않기 때문에 위장이 가능합니다. 가령 나는 IP가 A인 사람한테 보내고 싶은데, 악의적인 해커가 내가 IP A요 하고 말해도 검증할 방법이 없다는 것입니다.</li>\n<li>또한 완전성을 증명할 수 없기 때문에 변조가 가능합니다.</li>\n<li>보안 방법은 통신 자체를 암호화(SSL, TLS)하거나, 콘텐츠를 자체를(HTTP 메시지 컨텐츠를) 암호화 하는 것입니다.</li>\n<li>도청이 가능한 문제, 사용자를 확인할 수 없다는 문제, 정확성을 보장할 수 없다는 문제를 모두 해결할 방안으로 나온 것이 HTTPS 입니다.</li>\n</ul>\n<hr>\n<ul>\n<li>HTTPS는 새로운 프로토콜이 아닌, HTTP에서 SSL 개념을 더한 프로토콜입니다.</li>\n<li>기존 HTTP는 TCP와 직접 통신했지만, HTTPS는 HTTP와 TCP 사이에 SSL, TLS가 끼워져 있는 것입니다. HTTP는 SSL과 통신하고, SSL은 TCP와 통신하게 됩니다.</li>\n</ul>\n<h3 id=\"ssl\" style=\"position:relative;\"><a href=\"#ssl\" aria-label=\"ssl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL</h3>\n<ul>\n<li>SSL의 원리를 간략하게 설명하면, 대칭키와 공개키 방식 두 암호화 방식을 사용합니다.</li>\n<li>먼저 클라이언트가 서버에게 HELLO 메세지를 보내면, 서버가 클라이언트에게 HELLO 메세지를 보내면서, 서버 암호화 된 인증서와 랜덤 데이터를 넘겨주게 됩니다.</li>\n<li>HELLO 과정에서 어떤 암호화 프로토콜을 사용할 것인지 협상합니다.</li>\n<li>클라이언트는 받은 인증서를 CA리스트에서 조회 후 CA 공개키를 사용하여 인증서를 복호화합니다.</li>\n<li>복호화에 성공 했다면 이 서버는 신뢰할 수 있는 서버입니다.</li>\n<li>서버가 보낸 랜덤 데이터와 클라이언트의 랜덤 데이터를 조합해서 대칭키를 생성하니다.</li>\n<li>서버로부터 받은 공개키(인증서)를 사용하여 대칭키를 암호화 후에, 서버에게 보내게 됩니다.</li>\n<li>서버는 암호화된 대칭키를 받고, 비밀키로 복호화 함으로써, 서버와 클라이언트가 서로 대칭키를 가지게 된다.</li>\n<li>이 대칭키로 통신을 암호화합니다.</li>\n</ul>\n<h2 id=\"tcpudp-등-로우레벨-통신-지식\" style=\"position:relative;\"><a href=\"#tcpudp-%EB%93%B1-%EB%A1%9C%EC%9A%B0%EB%A0%88%EB%B2%A8-%ED%86%B5%EC%8B%A0-%EC%A7%80%EC%8B%9D\" aria-label=\"tcpudp 등 로우레벨 통신 지식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCP/UDP 등 로우레벨 통신 지식</h2>\n<h3 id=\"tcp\" style=\"position:relative;\"><a href=\"#tcp\" aria-label=\"tcp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCP</h3>\n<ul>\n<li>TCP 3-way hand shake, 4-way hand shake</li>\n<li>TCP는 흐름제어, 오류제어를 통한 연결 지향성, 순서 중요함, 오류시 재전송. 전이중과 점대점(각 연결이 정확히 2개의 종단점을 가지고 있습니다.) 방식.</li>\n</ul>\n<h3 id=\"udp\" style=\"position:relative;\"><a href=\"#udp\" aria-label=\"udp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UDP</h3>\n<ul>\n<li>UDP는 비연결형 프로토콜, 상대방이 받든지 말든지 그냥 보냅니다.</li>\n<li>손상된 세그먼트에 대해 재전송하지 않습니다. 만약 클라이언트 timeout이 발생하면 다시 보내면 그만입니다.</li>\n</ul>\n<h2 id=\"corscross-origin-resource-sharing란\" style=\"position:relative;\"><a href=\"#corscross-origin-resource-sharing%EB%9E%80\" aria-label=\"corscross origin resource sharing란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CORS(Cross Origin Resource Sharing)란?</h2>\n<ul>\n<li>말 그대로 다른 도메인간의 자원 공유를 의미합니다.</li>\n<li>본래 대부분의 브라우저는 타 도메인 간 요청을 Same-Origin-Policy에 의해 차단합니다.</li>\n<li>이런 설정을 우회하기 위해 여러 방법이 있었지만, HTML5가 등장하면서 CORS가 등장했습니다.</li>\n<li>CORS는 헤더를 통하여 Cross-Domain간 사용가능한 자원을 헤더를 통하여 알려줍니다.</li>\n</ul>\n<h3 id=\"preflight-request\" style=\"position:relative;\"><a href=\"#preflight-request\" aria-label=\"preflight request permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preflight Request</h3>\n<ul>\n<li>실제 요청을 보내도 안전한지 판단하기 위해 브라우저에서 먼저 보내보는 Request 입니다.</li>\n<li>Option 메서드로 전송하여 CORS를 허용하는 지 확인합니다.</li>\n<li>CORS를 지원하는 웹서버라면 사용가능한 리소스를 헤더에 담아 응답합니다.</li>\n</ul>\n<h2 id=\"http-header-description\" style=\"position:relative;\"><a href=\"#http-header-description\" aria-label=\"http header description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP Header Description</h2>\n<table>\n<thead>\n<tr>\n<th>HTTP Header</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Access-Control-Allow-Origin</td>\n<td>접근 가능한 URL 설정</td>\n</tr>\n<tr>\n<td>Access-Control-Allow-Credentials</td>\n<td>접근 가능한 쿠키 설정 (true, false)</td>\n</tr>\n<tr>\n<td>Access-Control-Allow-Headers</td>\n<td>접근 가능한 헤더 설정</td>\n</tr>\n<tr>\n<td>Access-Control-Allow-Methods</td>\n<td>접근 가능한 메서드 설정</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"osi-7-계층-및-tcpip-계층\" style=\"position:relative;\"><a href=\"#osi-7-%EA%B3%84%EC%B8%B5-%EB%B0%8F-tcpip-%EA%B3%84%EC%B8%B5\" aria-label=\"osi 7 계층 및 tcpip 계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSI 7 계층 및 TCP/IP 계층</h2>\n<ul>\n<li>통신이 일어나는 과정을 단계별로 파악하여, 문제 발생시 트러블슈팅이 용이합니다. 즉 분할 정복이 가능합니다.</li>\n</ul>\n<h3 id=\"osi7\" style=\"position:relative;\"><a href=\"#osi7\" aria-label=\"osi7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSI7</h3>\n<ul>\n<li>통신 접속에서 완료까지 과정을 7단계로 정의한 국제 통신 표준 규약입니다.</li>\n</ul>\n<h3 id=\"tcpip-4계층\" style=\"position:relative;\"><a href=\"#tcpip-4%EA%B3%84%EC%B8%B5\" aria-label=\"tcpip 4계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCP/IP 4계층</h3>\n<ul>\n<li>통신에 실제 사용되는 계층입니다.(프로토콜 스택)</li>\n<li>\n<p>링크,네트워크,트랜스포트,어플리케이션으로 이루어집니다.</p>\n<ul>\n<li>링크 = 물리+데이터링크</li>\n<li>어플리케이션 = 세프어</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"멀티파트-업로드\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0%ED%8C%8C%ED%8A%B8-%EC%97%85%EB%A1%9C%EB%93%9C\" aria-label=\"멀티파트 업로드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티파트 업로드</h2>\n<ul>\n<li>멀티파트란 각 여러 파일을 바디 하나에 메타 정보와 데이터를 boundary를 기준으로 나눠 놓은 것입니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://velog.io/@hygoogi/%EA%B8%B0%EC%88%A0%EB%A9%B4%EC%A0%91-%EC%A4%80%EB%B9%84%ED%95%98%EA%B8%B0\">기술면접 준비하기</a></li>\n</ul>","frontmatter":{"title":"웹과 통신","date":"April 16, 2020"}}},"pageContext":{"slug":"/develop/웹과-통신/","previous":{"fields":{"slug":"/develop/메모리/"},"frontmatter":{"title":"메모리","category":"develop","draft":false}},"next":{"fields":{"slug":"/object/object-chapter-08-의존성-관리하기/"},"frontmatter":{"title":"object chapter 08 의존성 관리하기","category":"object","draft":false}}}}}