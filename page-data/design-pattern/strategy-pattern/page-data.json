{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/design-pattern/strategy-pattern/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"","utterances":"Yuni-Q/blog"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"f1babf43-b425-5ec6-aff8-f62686ea03b1","excerpt":"전략 패턴(strategy pattern) 또는 정책 패턴(policy pattern…","html":"<h2 id=\"전략-패턴strategy-pattern-또는-정책-패턴policy-pattern에-대해-알아-보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4strategy-pattern-%EB%98%90%EB%8A%94-%EC%A0%95%EC%B1%85-%ED%8C%A8%ED%84%B4policy-pattern%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84-%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"전략 패턴strategy pattern 또는 정책 패턴policy pattern에 대해 알아 보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전략 패턴(strategy pattern) 또는 정책 패턴(policy pattern)에 대해 알아 보겠습니다.</h2>\n<h2 id=\"행위-소프트웨어-디자인-패턴\" style=\"position:relative;\"><a href=\"#%ED%96%89%EC%9C%84-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4\" aria-label=\"행위 소프트웨어 디자인 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>행위 소프트웨어 디자인 패턴</h2>\n<ul>\n<li>실행 중에 알고리즘을 선택할 수 있게 하는 <code class=\"language-text\">행위</code> 소프트웨어 디자인 패턴입니다.</li>\n</ul>\n<h2 id=\"동일-계열의-알고리즘을-정의하고-상호교환이-가능하게-합니다\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9D%BC-%EA%B3%84%EC%97%B4%EC%9D%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%84-%EC%A0%95%EC%9D%98%ED%95%98%EA%B3%A0-%EC%83%81%ED%98%B8%EA%B5%90%ED%99%98%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%98%EA%B2%8C-%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"동일 계열의 알고리즘을 정의하고 상호교환이 가능하게 합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동일 계열의 알고리즘을 정의하고 상호교환이 가능하게 합니다.</h2>\n<ul>\n<li>객체들이 할 수 있는 행위 각각에 대해 전략 클래스를 생성하고, 유사한 행위들을 <code class=\"language-text\">캡슐화</code> 하는 인터페이스를 정의하여, 객체의 행위를 동적으로 바꾸고 싶은 경우 직접 행위를 수정하지 않고 전략을 바꿔주기만 함으로써 행위를 유연하게 확장하는 방법을 말합니다.\n<ul>\n<li>클라이언트는 다향한 전략 중에 현재 상황에 적합한 전략을 생성해 컨텍스트에게 전략 객체를 <code class=\"language-text\">주입</code>합니다.</li>\n<li>프로젝트 전체에서 변경이 일어나지 않는 부분에서 변경이 일어나는 부분을 찾아서 따로 <code class=\"language-text\">캡슐화</code> 합니다.</li>\n</ul>\n</li>\n<li>간단히 말해서 객체가 할 수 있는 행위들 각각을 전략으로 만들어 놓고, 동적으로 행위의 수정이 필요한 경우 전략을 바꾸는 것만으로 행위의 수정이 가능하도록 만든 패턴입니다.</li>\n<li>특정한 계열의 알고리즘들을 정의하고 각 알고리즘을 캡슐화하며 이 알고리즘들을 해당 계열 안에서 상호 교체가 가능하게 만듭니다. 전략은 알고리즘을 사용하는 클라이언트와는 독립적으로 다양하게 만듭니다.\n<ul>\n<li>특정 컨텍스트에서 알고리즘을 별도로 분리하는 설계 방법을 의미합니다.</li>\n<li>위임이라는 느슨한 연결을 사용하고 있으므로 알고리즘을 용이하게 교환할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h2>\n<ul>\n<li>코드 중복을 방지할 수 있습니다.</li>\n<li>런타임시에 타겟 메소드 변경이 가능합니다.</li>\n<li>확장성(신규 클래스) 및 알고리즘 변경 용이합니다.</li>\n<li>컨텍스트 코드의 변경 없이 새로운 전략을 추가할 수 있습니다.\n<ul>\n<li>요구사항이 변경되었을 때 기존의 코드를 변경하지 않아도 됩니다. 새로운 전략에 대해서는 새로운 클래스를 통해 관리하기 때문에 <code class=\"language-text\">OCP의 원칙</code>을 준수할 수 있는 패턴입니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h2>\n<ul>\n<li>추가 인터페이스로 의존성 분산됩니다.</li>\n</ul>\n<h2 id=\"전략-패턴strategy-pattern을-구성하는-3가지-요소\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4strategy-pattern%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%EC%9A%94%EC%86%8C\" aria-label=\"전략 패턴strategy pattern을 구성하는 3가지 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전략 패턴(Strategy Pattern)을 구성하는 3가지 요소</h2>\n<ul>\n<li>전략 패턴을 적용하는 데 가장 중요한 것은 전략과 동작 환경에 대한 인터페이스를 충분히 일반화해야 한다는 것입니다. 이로써 이들 일반화된 인터페이스가 어느 정도 범위의 알고리즘을 지원할 수 있어야 합니다. 새로운 알고리즘을 지원하기 위해서 전략이나 배경 인터페이스를 변경할 필요는 없습니다.</li>\n</ul>\n<h3 id=\"strategy전략\" style=\"position:relative;\"><a href=\"#strategy%EC%A0%84%EB%9E%B5\" aria-label=\"strategy전략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Strategy(전략)</h3>\n<ul>\n<li>전략을 이용하기 위한 인터페이스(API)를 결정합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlyStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">fly</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"concretestrategy구체적인-전략\" style=\"position:relative;\"><a href=\"#concretestrategy%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%A0%84%EB%9E%B5\" aria-label=\"concretestrategy구체적인 전략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConcreteStrategy(구체적인 전략)</h3>\n<ul>\n<li>Strategy를 실제로 구현하는 역할</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FlyWithWingStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FlyStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오리가 날아가고 있습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FlyNoWayStrategy</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FlyStrategy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이 오리는 날 수 없습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"context문맥\" style=\"position:relative;\"><a href=\"#context%EB%AC%B8%EB%A7%A5\" aria-label=\"context문맥 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Context(문맥)</h3>\n<ul>\n<li>Strategy의 인터페이스(API)를 호출해서 이용하는 역할</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Duck</span> <span class=\"token punctuation\">{</span>\n  flyStrategy<span class=\"token operator\">:</span> FlyStrategy<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flyStrategy<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오리가 수영을 합니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">abstract</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setFlyStrategy</span><span class=\"token punctuation\">(</span>flyStrategy<span class=\"token operator\">:</span> FlyStrategy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flyStrategy <span class=\"token operator\">=</span> flyStrategy<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MalarDuck</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Duck</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'청동오리입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RedHeadDuck</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Duck</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'붉은 머리 오리입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"client\" style=\"position:relative;\"><a href=\"#client\" aria-label=\"client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> mallarDuck <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MalarDuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmallarDuck<span class=\"token punctuation\">.</span><span class=\"token function\">setFlyStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FlyWithWingStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmallarDuck<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmallarDuck<span class=\"token punctuation\">.</span><span class=\"token function\">setFlyStrategy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FlyNoWayStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmallarDuck<span class=\"token punctuation\">.</span><span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"관련-패턴\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8-%ED%8C%A8%ED%84%B4\" aria-label=\"관련 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련 패턴</h2>\n<ul>\n<li>Flyweight 패턴 : ConcreteStrategy 역할은 해당 패턴을 사용해서 복수의 장소에서 공유가 가능합니다.</li>\n<li>Abstract Factory 패턴 : 알고리즘뿐만 아니라 공장, 부품, 제품을 모두 교체 가능합니다.</li>\n<li>State 패턴 : 비슷한 방식이지만, 알고리즘이 아닌 <code class=\"language-text\">상태</code> 를 변화하는 방식을 위임합니다.</li>\n</ul>\n<h3 id=\"템플릿-메소드-패턴과의-비교\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%8C%A8%ED%84%B4%EA%B3%BC%EC%9D%98-%EB%B9%84%EA%B5%90\" aria-label=\"템플릿 메소드 패턴과의 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 메소드 패턴과의 비교</h3>\n<ul>\n<li>같은 문제의 해결책으로 <code class=\"language-text\">상속을 이용하는 템플릿 메서드 패턴</code>과 <code class=\"language-text\">객체주입을 통한 전략패턴</code> 중에서 선택하여 적용하시면 됩니다.</li>\n<li><code class=\"language-text\">단일 상속</code>만이 가능한 경우 상속이라는 제한이 있는 템플릿 메서드 패턴보다는 다양하게 많은 전략을 implements할 수 있는 전략패턴이 많이 사용됩니다.</li>\n</ul>\n<h4 id=\"템플릿\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿</h4>\n<ul>\n<li>Template Method : 알고리즘을 서브클래스에서 일부 지정할 수 있으면서 재사용이 가능합니다. 하지만 의존성이 크다는 문제가 있습니다. <code class=\"language-text\">재사용</code>이 핵심입니다.</li>\n<li>런타임에 타입선택(세트)</li>\n<li>추상메소드로 의존성 역전</li>\n<li><code class=\"language-text\">조합 폭발이 일어나서 제어 불가능</code></li>\n</ul>\n<h4 id=\"전략\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EB%9E%B5\" aria-label=\"전략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전략</h4>\n<ul>\n<li>Strategy : 알고리즘을 구성으로 사용합니다. <code class=\"language-text\">유연성</code>이 핵심입니다.</li>\n<li>런타임에 합성(조립)</li>\n<li>추가 인터페이스로 의존성 분산</li>\n<li><code class=\"language-text\">의존성 폭발이 일어나지만 제어 가능</code></li>\n</ul>\n<hr>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://victorydntmd.tistory.com/292\">🙈[디자인패턴] 전략 패턴 ( Strategy Pattern )🐵</a></li>\n<li><a href=\"https://niceman.tistory.com/133\">Java 디자인패턴 - 전략(Strategy) 패턴</a></li>\n<li><a href=\"https://lee1535.tistory.com/93\">[디자인패턴/Design Pattern] Strategy 패턴 / 전략 패턴</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4strategy-pattern-%EB%98%90%EB%8A%94-%EC%A0%95%EC%B1%85-%ED%8C%A8%ED%84%B4policy-pattern%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84-%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">전략 패턴(strategy pattern) 또는 정책 패턴(policy pattern)에 대해 알아 보겠습니다.</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%96%89%EC%9C%84-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4\">행위 소프트웨어 디자인 패턴</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%9D%BC-%EA%B3%84%EC%97%B4%EC%9D%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%84-%EC%A0%95%EC%9D%98%ED%95%98%EA%B3%A0-%EC%83%81%ED%98%B8%EA%B5%90%ED%99%98%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%98%EA%B2%8C-%ED%95%A9%EB%8B%88%EB%8B%A4\">동일 계열의 알고리즘을 정의하고 상호교환이 가능하게 합니다.</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4strategy-pattern%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%EC%9A%94%EC%86%8C\">전략 패턴(Strategy Pattern)을 구성하는 3가지 요소</a></p>\n<ul>\n<li><a href=\"#strategy%EC%A0%84%EB%9E%B5\">Strategy(전략)</a></li>\n<li><a href=\"#concretestrategy%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EC%A0%84%EB%9E%B5\">ConcreteStrategy(구체적인 전략)</a></li>\n<li><a href=\"#context%EB%AC%B8%EB%A7%A5\">Context(문맥)</a></li>\n<li><a href=\"#client\">Client</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B4%80%EB%A0%A8-%ED%8C%A8%ED%84%B4\">관련 패턴</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%8C%A8%ED%84%B4%EA%B3%BC%EC%9D%98-%EB%B9%84%EA%B5%90\">템플릿 메소드 패턴과의 비교</a></p>\n<ul>\n<li><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF\">템플릿</a></li>\n<li><a href=\"#%EC%A0%84%EB%9E%B5\">전략</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>","frontmatter":{"title":"strategy pattern","date":"March 21, 2021"}}},"pageContext":{"slug":"/design-pattern/strategy-pattern/","previous":{"fields":{"slug":"/design-pattern/visitor-pattern/"},"frontmatter":{"title":"visitor pattern","category":"design pattern","tags":[],"draft":false}},"next":{"fields":{"slug":"/design-pattern/state-pattern/"},"frontmatter":{"title":"state pattern","category":"design pattern","tags":["design pattern"],"draft":false}},"tag":["design pattern"]}},"staticQueryHashes":["3128451518","96099027"],"slicesMap":{}}