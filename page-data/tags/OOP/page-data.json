{"componentChunkName":"component---src-templates-tags-tsx","path":"/tags/OOP/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"totalCount":5,"edges":[{"node":{"excerpt":"TL;DR 2장에서는 책임을 중심으로 설계된 객체지향 코드의 대력적인 모양을 살펴봅니다. 객체지향 프로그래밍에서 사용되는 다양한 요소와 개념을 이해하게 됩니다. 01. 영화 예매 시스템 요구사항 살펴보기 02 객체지향 프로그래밍을 향해 협력, 객체, 클래스 입니다. C++, 자바, 루비, C…","fields":{"slug":"/오브젝트/02-객체지향-프로그래밍/02-객체지향-프로그래밍/"},"frontmatter":{"date":"17 <span> April </span>","title":"02 객체지향 프로그래밍","category":"오브젝트","tags":["OOP","객체지향"],"draft":false}}},{"node":{"excerpt":"TL;DR 절차적 프로그래밍 방식으로 구현해보고 이렇게 구현된 코드의 품질이 나쁜 이유를 설명합니다. 품질을 평가하기 위해 사용할 수있는 척도인 캡슐화, 응집도, 결합도의 개념도 함께 소개합니다.…","fields":{"slug":"/오브젝트/04-설계-품질과-트레이드오프/"},"frontmatter":{"date":"11 <span> April </span>","title":"04 설계 품질과 트레이드오프","category":"오브젝트","tags":["OOP","객체지향"],"draft":false}}},{"node":{"excerpt":"TL;DR…","fields":{"slug":"/오브젝트/03-역할,-책임,-협력/"},"frontmatter":{"date":"11 <span> April </span>","title":"03 역할, 책임, 협력","category":"오브젝트","tags":["OOP","객체지향"],"draft":false}}},{"node":{"excerpt":"TL;DR 티켓 판매 시스템이라는 간단한 도메인을 예로 들어 채그이 전체적인 주제를 함축해서 전달합니다. intro 소프트웨어 개발에서 실무가 이론보다 앞서 있는 대표적인 분야로 ‘소프트웨어 설계’와 ‘소프트웨어 유지보수’를 들 수 있습니다. 대부분 사람들은 이론이 먼저 정립된 후에 실무가 그 뒤를 따라 발전한다고 생각합니다. 로버트 L…","fields":{"slug":"/오브젝트/01-객체,-설계/01-객체,-설계/"},"frontmatter":{"date":"11 <span> April </span>","title":"01 객체, 설계","category":"오브젝트","tags":["OOP","객체지향"],"draft":false}}},{"node":{"excerpt":"…","fields":{"slug":"/오브젝트/00-intro/"},"frontmatter":{"date":"10 <span> April </span>","title":"00 intro","category":"오브젝트","tags":["OOP","객체지향"],"draft":false}}}]}},"pageContext":{"tag":"OOP"}},"staticQueryHashes":["3128451518"]}