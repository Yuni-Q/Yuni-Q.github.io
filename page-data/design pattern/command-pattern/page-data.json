{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/design pattern/command-pattern/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"","utterances":"Yuni-Q/blog"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"8acaf563-28e7-515b-a7ae-b3d07895d85a","excerpt":"…","html":"<h2 id=\"객체의-행위를-클래스로-만들어-캡슐화-하는-패턴\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%96%89%EC%9C%84%EB%A5%BC-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4-%EC%BA%A1%EC%8A%90%ED%99%94-%ED%95%98%EB%8A%94-%ED%8C%A8%ED%84%B4\" aria-label=\"객체의 행위를 클래스로 만들어 캡슐화 하는 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체의 행위를 클래스로 만들어 캡슐화 하는 패턴</h2>\n<hr>\n<h2 id=\"커맨드-패턴은-행위에-대한-패턴입니다\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%80-%ED%96%89%EC%9C%84%EC%97%90-%EB%8C%80%ED%95%9C-%ED%8C%A8%ED%84%B4%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"커맨드 패턴은 행위에 대한 패턴입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴은 행위에 대한 패턴입니다.</h2>\n<ul>\n<li>클래스와 객체들이 상호작용하는 방법 및 역할을 분담하는 방법과 관련된 패턴입니다.</li>\n<li>한 객체가 혼자 수행할 수 없는 작업을 여러 개의 객체로 어떻게 <code class=\"language-text\">분배</code>하는지, 또 그렇게 하면서도 객체 사이의 <code class=\"language-text\">결합도를 최소화</code>하는 것에 중점을 둡니다.</li>\n<li>템플릿 메소드, 인터프리터, 역할 변경, 비지터, <code class=\"language-text\">커맨드</code>, 스트래티지, 미디에이터, 이터레이터, 메멘토, 옵저버, 스테이트 등이 있습니다.</li>\n</ul>\n<hr>\n<h2 id=\"커맨드-패턴을-부르는-다양한-명칭\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%84-%EB%B6%80%EB%A5%B4%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%AA%85%EC%B9%AD\" aria-label=\"커맨드 패턴을 부르는 다양한 명칭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴을 부르는 다양한 명칭</h2>\n<ul>\n<li>커맨드 패턴</li>\n<li>명령 패턴</li>\n<li>작동(Action) 패턴</li>\n<li>트랜잭션(Transaction) 패턴</li>\n</ul>\n<hr>\n<h2 id=\"커맨드-패턴이란\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\" aria-label=\"커맨드 패턴이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴이란?</h2>\n<ul>\n<li>\n<p>커맨드 패턴(Command pattern)이란 <code class=\"language-text\">요청을 객체의 형태로 캡슐화</code>하여 사용자가 보낸 요청을 나중에 이용할 수 있도록 매서드 이름, <code class=\"language-text\">매개변수</code> 등 요청에 필요한 정보를 저장 또는 로깅, 취소할 수 있게 하는 패턴입니다.</p>\n<ul>\n<li>가장 주의 깊게 볼 사항은 커맨드 자체를 <code class=\"language-text\">객체화</code>한다는 점입니다.</li>\n<li><code class=\"language-text\">재사용성</code>이 높은 클래스를 설계하는 패턴을 말합니다.</li>\n<li>요청 자체를 <code class=\"language-text\">캡슐화</code>합니다.</li>\n<li>절차지향 프로그램에서는 이를 <code class=\"language-text\">콜백 함수</code>, 즉 어딘가 등록되었다가 나중에 호출되는 함수를 사용해서 이러한 <code class=\"language-text\">매개변수화</code>를 표현할 수 있습니다. 명령 패턴은 <code class=\"language-text\">콜백을 객체지향 방식</code>으로 나타낸 것입니다.</li>\n</ul>\n</li>\n<li>이 패턴의 핵심은 <code class=\"language-text\">Command 인터페이스</code>입니다.</li>\n</ul>\n<hr>\n<h2 id=\"커맨드-패턴-들여다-보기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4-%EB%93%A4%EC%97%AC%EB%8B%A4-%EB%B3%B4%EA%B8%B0\" aria-label=\"커맨드 패턴 들여다 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴 들여다 보기</h2>\n<ul>\n<li>\n<p>실행될 기능을 캡슐화함으로써 <code class=\"language-text\">기능의 실행을 요구하는 호출자(Invoker)</code> 클래스와 <code class=\"language-text\">실제 기능을 실행하는 수신자(Receiver)</code> 클래스 사이의 <code class=\"language-text\">의존성을 제거</code>합니다. 따라서 실행될 기능의 변경에도 <code class=\"language-text\">호출자 클래스를 수정 없이</code> 그대로 사용 할 수 있습니다.</p>\n<ul>\n<li>이렇게 하기 위해 행동과 리시버를 한 객체에 집어넣고 메소드 하나만 외부에 공개하는 방법을 사용한다.</li>\n<li>보통 OOP에서는 주체 객체와 대상 객체가 존재하고, 대상 객체에 대한 액션은 주체 객체에서의 메쏘드로 처리하는데, 이 <code class=\"language-text\">액션까지 객체</code>로 만든 뒤에 처리하는 것입니다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"개방-폐쇄-원칙ocp-open-closed-principle\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%A9-%ED%8F%90%EC%87%84-%EC%9B%90%EC%B9%99ocp-open-closed-principle\" aria-label=\"개방 폐쇄 원칙ocp open closed principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개방-폐쇄 원칙(OCP, Open-Closed Principle)</h2>\n<ul>\n<li>명령어를 인보커에 언제든지 등록할 수 있고, 원하는 언제든지 인보커로 간단하게 실행시킬 수 있습니다. 추후 명령이나 리시버가 더 추가될 경우 기존 코드에 수정 없이, 두 객체를 만들고 setCommand() 로 추가해주면 됩니다. 즉, <code class=\"language-text\">OCP 원칙</code>을 잘 지켜냅니다.</li>\n</ul>\n<hr>\n<h2 id=\"커맨드-패턴의-확장\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%98-%ED%99%95%EC%9E%A5\" aria-label=\"커맨드 패턴의 확장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴의 확장</h2>\n<ul>\n<li><code class=\"language-text\">메타 커맨드</code> 패턴을 이용하게되면 명령으로 이루어진 메크로를 만들어서 여러 명령을 실행 가능합니다.</li>\n<li><code class=\"language-text\">메크로 커맨드</code>는 커맨드를 확장해서 여러 개의 커맨드를 한꺼번에 호출할 수 있게 해 주는 간단한 방법입니다. 매크로 커맨드에서도 어렵지 않게 작업취소 기능을 지원할 수 있습니다.</li>\n<li>프로그래밍을 하다 보면 요청 자체를 리시버한테 넘기지 않고 자기가 처리하는 <code class=\"language-text\">스마트 커맨드</code> 객체를 사용하는 경우도 종종 있습니다.</li>\n</ul>\n<hr>\n<h2 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h2>\n<ul>\n<li>작업을 수행하는 객체(리시버)와 작업을 요청하는 객체를 분리하기 때문에 <code class=\"language-text\">SRP 원칙(단일 책임 원칙)</code>을 잘 지킵니다.</li>\n<li><code class=\"language-text\">이벤트</code>가 발생했을 때 실행될 기능이 다양하면서도 <code class=\"language-text\">변경</code>이 필요한 경우에 이벤트를 발생시키는 클래스를 변경하지 않고 <code class=\"language-text\">재사용</code>하고자 할 때 유용합니다.</li>\n<li>기존 코드 수정 없이 새로운 리시버, 명령어 추가가 가능하기 때문에 <code class=\"language-text\">OCP 원칙(개방 폐쇄 원칙)</code>을 잘 지킵니다.</li>\n<li>커맨드 단위의 별도의 액션(undo, redo) 등이 가능하고, 커맨드 상속 및 조합을 통해 더 정교한 커맨드를 구현할 수 있습니다.</li>\n</ul>\n<hr>\n<h2 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h2>\n<ul>\n<li>전체적으로 이해가 필요하고 복잡한 설계구조를 가집니다.</li>\n</ul>\n<hr>\n<h2 id=\"활용-상황\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%83%81%ED%99%A9\" aria-label=\"활용 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 상황</h2>\n<ul>\n<li>\n<p>커맨드 발생 시점을 사용자가 커스터마이징 해야 하는 경우</p>\n<ul>\n<li>서로 다른 시간에 요청을 명시하고, 저장하며, 실행하고 싶을 때 사용합니다.</li>\n</ul>\n</li>\n<li>여러 커맨드를 조합하여 하나의 커맨드처럼 사용할 필요가 있는 경우</li>\n<li>\n<p>커맨드 실행 취소, 재 실행 등의 기능을 구현해야 하는 경우</p>\n<ul>\n<li>연산의 반복 사용을 통해 수행과 취소를 무한 반복할 수 있습니다.</li>\n</ul>\n</li>\n<li>수행할 동작을 객체로 매개변수화하고자 하는 경우</li>\n<li>기본적인 연산의 조합으로 만든 상위 수준 연산을 써서 시스템을 구조화하고 싶을 때 사용합니다.</li>\n</ul>\n<hr>\n<h2 id=\"command-패턴-사용-방법\" style=\"position:relative;\"><a href=\"#command-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"command 패턴 사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command 패턴 사용 방법</h2>\n<ul>\n<li>커맨드 패턴에는 <code class=\"language-text\">명령(command)</code>, <code class=\"language-text\">수신자(receiver)</code>, <code class=\"language-text\">발동자(invoker)</code>, <code class=\"language-text\">클라이언트(client)</code>의 네개의 용어가 있습니다.</li>\n<li>Command 인터페이스와 ConcreteCommand 구현체만 있어도 커맨드 패턴을 사용했다고 볼 수 있습니다. 다만 Receiver를 이용해 실제 명령의 실행 코드와 개념적인 명령을 분리하고, Invoker를 이용해 명령의 실제 실행을 Client와 분리하는 것이 좋습니다.</li>\n<li>코드를 실행시키면, 장군이(client)이 전략(invoker)을 통하여 명령(command)를 내려 명령을 수행(Receiver)하게 됩니다.</li>\n</ul>\n<hr>\n<h2 id=\"식당-주문-시스템에-비유해서-알아보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%8B%9D%EB%8B%B9-%EC%A3%BC%EB%AC%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90-%EB%B9%84%EC%9C%A0%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"식당 주문 시스템에 비유해서 알아보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>식당 주문 시스템에 비유해서 알아보겠습니다.</h2>\n<ul>\n<li>어떤 식당에는 주방장과 웨이터가 있습니다. 이 식당에 어떤 손님이 들어와, 주문서에 스파게티를 작성하고 이를 웨이터에게 전달했습니다. 웨이터는 이 주문서를 읽고 주방장에게 스파게티 요리를 요청합니다.</li>\n<li>손님 : Client</li>\n<li>웨이터 : Invoker 객체</li>\n<li>주문을 받는 것 : setCommand()</li>\n<li>주문서 : Command 객체</li>\n<li>주문을 주방장에게 전달하여 요리를 요청 하는 것 : execute()</li>\n<li>주방장: Receiver 객체</li>\n</ul>\n<hr>\n<h3 id=\"client\" style=\"position:relative;\"><a href=\"#client\" aria-label=\"client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client</h3>\n<ul>\n<li>말 그대로 명령을 내릴 <code class=\"language-text\">사용자</code>입니다.</li>\n<li>클라이언트는 ConcreteCommand를 생성하고 Receiver를 설정합니다.</li>\n<li>누가(Receiver) 무엇(Command)을 할지에 대해서만 알고 있습니다.</li>\n<li>\n<p>클라이언트 객체는 <code class=\"language-text\">발동자 객체</code>와 <code class=\"language-text\">하나 이상의 커맨드 객체</code>를 보유합니다.</p>\n<ul>\n<li>명령을 수행하려면, 클라이언트 객체는 발동자 객체로 커맨드 객체를 전달합니다.</li>\n</ul>\n</li>\n<li>클라이언트 객체는 어느 시점에서 어떤 명령을 수행할지를 결정합니다.</li>\n</ul>\n<hr>\n<h2 id=\"receiver\" style=\"position:relative;\"><a href=\"#receiver\" aria-label=\"receiver permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Receiver</h2>\n<ul>\n<li>리시버는 요구 사항을 수행하기 위해 어떤 일을 처리해야 하는지 알고 있는 객체입니다.</li>\n<li>실제로 Client의 원하는 요청을 수행하는 객체입니다.</li>\n<li>누가 언제 요청해왔는지 모릅니다. 액션에 대해서만 관심(구현)을 가집니다.</li>\n</ul>\n<hr>\n<h2 id=\"invoker\" style=\"position:relative;\"><a href=\"#invoker\" aria-label=\"invoker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Invoker</h2>\n<ul>\n<li>인보커에는 명령이 들어 있으며, execute() 메소드를 호출함으로써 커맨드 객체에서 특정 작업을 수행해 달라는 요구를 하게 됩니다.</li>\n<li>\n<p>Client의 요청을 받아 실제로 Receiver의 액션을 호출하는 객체입니다.</p>\n<ul>\n<li>Client는 Invoker를 거쳐 Receiver에게 요청하기 때문에, Invoker에서 Receiver에 도달하기 전, 요청에 대한 이런저런 설정들을 할 수가 있습니다.</li>\n<li>발동자 객체는 필요에 따라 명령 발동에 대한 <code class=\"language-text\">기록</code>을 남길 수 있습니다.</li>\n</ul>\n</li>\n<li>한 발동자 객체에 다수의 커맨드 객체가 전달될 수 있습니다.</li>\n</ul>\n<hr>\n<h2 id=\"command\" style=\"position:relative;\"><a href=\"#command\" aria-label=\"command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command</h2>\n<ul>\n<li>ConcreteCommand의 추상 클래스입니다.</li>\n<li>\n<p>공통 인터페이스로 가집니다. 이 메소드에서는 리시버에 특정 작업을 처리하라는 지시를 전달합니다.</p>\n<ul>\n<li>execute()</li>\n<li>undo()</li>\n<li>redo()</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"concretecommand\" style=\"position:relative;\"><a href=\"#concretecommand\" aria-label=\"concretecommand permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConcreteCommand</h2>\n<ul>\n<li>커맨드 객체는 수신자 객체를 가지고 있으며, 수신자의 메서드를 호출하고, 이에 수신자는 자신에게 정의된 메서드를 수행합니다.</li>\n<li>커맨드 객체는 별도로 발동자 객체에 전달되어 명령을 발동하게 합니다.</li>\n<li>\n<p>특정 행동과 리시버 사이를 연결해 줍니다.</p>\n<ul>\n<li>인보커에서 execute() 호출을 통해 요청을 하면 ConcreteCommand 객체에서 리시버에 있는 메소드를 호출함으로써 그 작업을 처리합니다.</li>\n</ul>\n</li>\n<li>실제 구체적인 <code class=\"language-text\">요청 내용</code>을 담는 클래스입니다.</li>\n<li>\n<p>누가(Receiver)가 무엇을 해야하는지를 구현합니다.</p>\n<ul>\n<li>execute 메소드 안의 로직</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"nocommand-객체\" style=\"position:relative;\"><a href=\"#nocommand-%EA%B0%9D%EC%B2%B4\" aria-label=\"nocommand 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoCommand 객체</h2>\n<ul>\n<li>NoCommand 객체는 일종의 널 객체(null object)입니다. 딱히 리턴할 객체는 없지만 클라이언트 쪽에서 null을 처리하지 않아도 되도록 하고 싶을 때 널 객체를 활용하면 좋습니다.</li>\n<li>널 객체는 여러 디자인 패턴에서 유용하게 쓰입니다. 널 객체를 일종의 디자인 패턴으로 분류하기도 합니다.</li>\n</ul>\n<hr>\n<h2 id=\"스트레티지-패턴\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%8A%B8%EB%A0%88%ED%8B%B0%EC%A7%80-%ED%8C%A8%ED%84%B4\" aria-label=\"스트레티지 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스트레티지 패턴</h2>\n<ul>\n<li>추상화 수준이 더 많아진 스트레티지 패턴처럼 느껴질 수 있습니다.</li>\n<li>차이가 있다면, 스트레티지 패턴은 전략을 실행하는 객체와 전략 객체의 관계가 중요하다면, 커맨드 패턴은 명령이 객체화되어 다루어지는 것이 중요합니다.</li>\n</ul>\n<hr>\n<h2 id=\"uml\" style=\"position:relative;\"><a href=\"#uml\" aria-label=\"uml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UML</h2>\n<p><img src=\"/14b50beabe274ff17dc9ca1dc76d5b77/command.svg\"></p>\n<hr>\n<h2 id=\"command-interface\" style=\"position:relative;\"><a href=\"#command-interface\" aria-label=\"command interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command interface</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">execute</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"invoker-class\" style=\"position:relative;\"><a href=\"#invoker-class\" aria-label=\"invoker class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Invoker class</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Invoker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> theCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 생성자에서 버튼을 눌렀을 때 필요한 기능을 인지로 받습니다.</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>theCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>theCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>newCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theCommand <span class=\"token operator\">=</span> newCommand<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 버튼이 눌리면 주어진 Command의 execute 메서드를 호출한다.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">pressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"receiver-class\" style=\"position:relative;\"><a href=\"#receiver-class\" aria-label=\"receiver class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Receiver class</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Receiver class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Lamp</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lamp On'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Alarm</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Alarming'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"concretecommand-1\" style=\"position:relative;\"><a href=\"#concretecommand-1\" aria-label=\"concretecommand 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConcreteCommand</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LampOnCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Receiver</span>\n  <span class=\"token keyword\">private</span> theLamp<span class=\"token operator\">:</span> Lamp<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>theLamp<span class=\"token operator\">:</span> Lamp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theLamp <span class=\"token operator\">=</span> theLamp<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Command 인터페이스의 execute 메서드</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theLamp<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AlarmStartCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Receiver</span>\n  <span class=\"token keyword\">private</span> theAlarm<span class=\"token operator\">:</span> Alarm<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>theAlarm<span class=\"token operator\">:</span> Alarm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theAlarm <span class=\"token operator\">=</span> theAlarm<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Command 인터페이스의 execute 메서드</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theAlarm<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"client-1\" style=\"position:relative;\"><a href=\"#client-1\" aria-label=\"client 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Receiver</span>\n<span class=\"token keyword\">const</span> lamp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Lamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ConcreteCommand</span>\n<span class=\"token keyword\">const</span> lampOnCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LampOnCommand</span><span class=\"token punctuation\">(</span>lamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Receiver</span>\n<span class=\"token keyword\">const</span> alarm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Alarm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ConcreteCommand</span>\n<span class=\"token keyword\">const</span> alarmStartCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AlarmStartCommand</span><span class=\"token punctuation\">(</span>alarm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Invoker</span>\n<span class=\"token keyword\">const</span> invoker1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Invoker</span><span class=\"token punctuation\">(</span>lampOnCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 램프 켜는 Command 설정</span>\ninvoker1<span class=\"token punctuation\">.</span><span class=\"token function\">pressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 램프 켜는 기능 수행</span>\n<span class=\"token comment\">// Invoker</span>\n<span class=\"token keyword\">const</span> invoker2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Invoker</span><span class=\"token punctuation\">(</span>alarmStartCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 알람 울리는 Command 설정</span>\ninvoker2<span class=\"token punctuation\">.</span><span class=\"token function\">pressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 알람 울리는 기능 수행</span>\ninvoker2<span class=\"token punctuation\">.</span><span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>lampOnCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다시 램프 켜는 Command로 설정</span>\ninvoker2<span class=\"token punctuation\">.</span><span class=\"token function\">pressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 램프 켜는 기능 수행</span></code></pre></div>\n<hr>\n<h2 id=\"기능이-추가된-커맨드-패턴\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%B6%94%EA%B0%80%EB%90%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4\" aria-label=\"기능이 추가된 커맨드 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능이 추가된 커맨드 패턴</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sub</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mul</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">div</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">/</span> y<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">execute</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">undo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>execute<span class=\"token punctuation\">,</span> undo<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>execute <span class=\"token operator\">=</span> execute<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>undo <span class=\"token operator\">=</span> undo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AddCommand</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">,</span> sub<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">'Add'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SubCommand</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">,</span> add<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">'Sub'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MulCommand</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>mul<span class=\"token punctuation\">,</span> div<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">'Mul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DivCommand</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Command</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> mul<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">'Div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n  current<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  commands<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>command<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Undo </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>command<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">getCurrentValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> calculator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AddCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SubCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MulCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DivCommand</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncalculator<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>calculator<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add: 100</span>\n<span class=\"token comment\">// Sub: 24</span>\n<span class=\"token comment\">// Mul: 6</span>\n<span class=\"token comment\">// Div: 2</span>\n<span class=\"token comment\">// Undo Div: 2</span>\n<span class=\"token comment\">// Undo Mul: 6</span>\n<span class=\"token comment\">// Value: 76</span></code></pre></div>\n<hr>\n<h2 id=\"클래스가-없는-커맨드-패턴\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EA%B0%80-%EC%97%86%EB%8A%94-%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4\" aria-label=\"클래스가 없는 커맨드 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스가 없는 커맨드 패턴</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> carManager <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">requestInfo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">model<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The information for </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> with ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is foobar</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">buyVehicle</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">model<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You have successfully purchased Item </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, a model</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">arrangeViewing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">model<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You have successfully booked a viewing of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>model<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ( </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> )</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ncarManager<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">execute</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    carManager<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span>\n    carManager<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'buyVehicle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ford Escort'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'453543'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arrangeViewing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ferrari'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'14523'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'requestInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ford Mondeo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'54323'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'requestInfo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ford Escort'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'34232'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carManager<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'buyVehicle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ford Escort'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'34232'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://gmlwjd9405.github.io/2018/07/07/command-pattern.html\">[Design Pattern] 커맨드 패턴이란</a></li>\n<li><a href=\"https://johngrib.github.io/wiki/command-pattern/\">커맨드 패턴 (Command Pattern)</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EC%BB%A4%EB%A7%A8%EB%93%9C_%ED%8C%A8%ED%84%B4\">커맨드 패턴</a></li>\n<li><a href=\"https://victorydntmd.tistory.com/295\">🙈[디자인패턴] 커맨드 패턴 ( Command Pattern )🐵</a></li>\n<li><a href=\"https://jusungpark.tistory.com/18\">정리정리정리</a></li>\n<li><a href=\"https://gdtbgl93.tistory.com/23\">[디자인 패턴] 커맨드 패턴 (Command Pattern)</a></li>\n<li><a href=\"https://dailyheumsi.tistory.com/217\">[디자인 패턴 16편] 행동 패턴, 커맨드 (Command)</a></li>\n<li><a href=\"https://jeongupark-study-house.tistory.com/65\">코더가 아닌 개발자!! Why를 가지자!</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/design%20pattern/command-pattern/#%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%96%89%EC%9C%84%EB%A5%BC-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4-%EC%BA%A1%EC%8A%90%ED%99%94-%ED%95%98%EB%8A%94-%ED%8C%A8%ED%84%B4\">객체의 행위를 클래스로 만들어 캡슐화 하는 패턴</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%80-%ED%96%89%EC%9C%84%EC%97%90-%EB%8C%80%ED%95%9C-%ED%8C%A8%ED%84%B4%EC%9E%85%EB%8B%88%EB%8B%A4\">커맨드 패턴은 행위에 대한 패턴입니다.</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%84-%EB%B6%80%EB%A5%B4%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%AA%85%EC%B9%AD\">커맨드 패턴을 부르는 다양한 명칭</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\">커맨드 패턴이란?</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4-%EB%93%A4%EC%97%AC%EB%8B%A4-%EB%B3%B4%EA%B8%B0\">커맨드 패턴 들여다 보기</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EA%B0%9C%EB%B0%A9-%ED%8F%90%EC%87%84-%EC%9B%90%EC%B9%99ocp-open-closed-principle\">개방-폐쇄 원칙(OCP, Open-Closed Principle)</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%98-%ED%99%95%EC%9E%A5\">커맨드 패턴의 확장</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EB%8B%A8%EC%A0%90\">단점</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%ED%99%9C%EC%9A%A9-%EC%83%81%ED%99%A9\">활용 상황</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#command-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\">Command 패턴 사용 방법</a></li>\n<li>\n<p><a href=\"/design%20pattern/command-pattern/#%EC%8B%9D%EB%8B%B9-%EC%A3%BC%EB%AC%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90-%EB%B9%84%EC%9C%A0%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">식당 주문 시스템에 비유해서 알아보겠습니다.</a></p>\n<ul>\n<li><a href=\"/design%20pattern/command-pattern/#client\">Client</a></li>\n</ul>\n</li>\n<li><a href=\"/design%20pattern/command-pattern/#receiver\">Receiver</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#invoker\">Invoker</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#command\">Command</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#concretecommand\">ConcreteCommand</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#nocommand-%EA%B0%9D%EC%B2%B4\">NoCommand 객체</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%8A%A4%ED%8A%B8%EB%A0%88%ED%8B%B0%EC%A7%80-%ED%8C%A8%ED%84%B4\">스트레티지 패턴</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#uml\">UML</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#command-interface\">Command interface</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#invoker-class\">Invoker class</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#receiver-class\">Receiver class</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#concretecommand-1\">ConcreteCommand</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#client-1\">Client</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%B6%94%EA%B0%80%EB%90%9C-%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4\">기능이 추가된 커맨드 패턴</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%ED%81%B4%EB%9E%98%EC%8A%A4%EA%B0%80-%EC%97%86%EB%8A%94-%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4\">클래스가 없는 커맨드 패턴</a></li>\n<li><a href=\"/design%20pattern/command-pattern/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","frontmatter":{"title":"command pattern","date":"January 26, 2021"}}},"pageContext":{"slug":"/design pattern/command-pattern/","previous":{"fields":{"slug":"/design pattern/mediator-pattern/"},"frontmatter":{"title":"mediator-pattern","category":"design pattern","tags":["design pattern"],"draft":false}},"next":{"fields":{"slug":"/design pattern/factory-pattern/"},"frontmatter":{"title":"factory pattern","category":"design pattern","tags":["design pattern"],"draft":false}},"tag":["design pattern"]}},"staticQueryHashes":["3128451518","96099027"]}