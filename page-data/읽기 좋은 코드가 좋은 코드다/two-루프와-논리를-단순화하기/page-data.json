{"componentChunkName":"component---src-templates-blog-post-js","path":"/읽기 좋은 코드가 좋은 코드다/two-루프와-논리를-단순화하기/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"d0544783-e3d6-5991-b631-21be5a4ae7ed","excerpt":"7 읽기 쉽게 흐름제어 만들기 조건, 루프, 흐름을 통제하는 선언문은 코드를 복잡하게 만드는 원인입니다. 코드를 읽을 때 다시 되돌아가서 코드를 읽지 않아도 되게끔 만들어야 합니다. 조건문에서 인수의 순서 왼쪽 : 질문을 받는 표현 오른쪽 : 비교대상 이러한 가이드 라인은 영어 어순과 일치합니다. if/else 순서 부정이 아닌 긍정을 사용합니다., 즉 if(!isTrue)가 아닌 if(isTrue…","html":"<h2 id=\"7-읽기-쉽게-흐름제어-만들기\" style=\"position:relative;\"><a href=\"#7-%EC%9D%BD%EA%B8%B0-%EC%89%BD%EA%B2%8C-%ED%9D%90%EB%A6%84%EC%A0%9C%EC%96%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"7 읽기 쉽게 흐름제어 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7 읽기 쉽게 흐름제어 만들기</h2>\n<ul>\n<li>조건, 루프, 흐름을 통제하는 선언문은 코드를 복잡하게 만드는 원인입니다. 코드를 읽을 때 다시 되돌아가서 코드를 읽지 않아도 되게끔 만들어야 합니다.</li>\n<li>\n<p>조건문에서 인수의 순서</p>\n<ul>\n<li>왼쪽 : 질문을 받는 표현</li>\n<li>오른쪽 : 비교대상</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 가독성 좋음</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 가독성 낮음</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">&lt;=</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>이러한 가이드 라인은 영어 어순과 일치합니다.</p>\n<ul>\n<li>if/else 순서</li>\n</ul>\n</li>\n<li>\n<p>부정이 아닌 긍정을 사용합니다., 즉 if(!isTrue)가 아닌 if(isTrue)</p>\n<ul>\n<li>중첩을 최소화합니다.</li>\n</ul>\n</li>\n<li>코드의 중첩이 심할 수록 코드를 읽는 사람의 마음속에 존재하는 정신적 스택에 추가적인 조건이 입력됩니다.</li>\n<li>함수 중간에서 반환하기로 중첩을 제거합니다.</li>\n<li>루프 내부에 있는 중첩 제거합니다.</li>\n</ul>\n<h2 id=\"8-거대한-표현을-잘게-쪼개기\" style=\"position:relative;\"><a href=\"#8-%EA%B1%B0%EB%8C%80%ED%95%9C-%ED%91%9C%ED%98%84%EC%9D%84-%EC%9E%98%EA%B2%8C-%EC%AA%BC%EA%B0%9C%EA%B8%B0\" aria-label=\"8 거대한 표현을 잘게 쪼개기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8 거대한 표현을 잘게 쪼개기</h2>\n<ul>\n<li>우리는 한번에 서너개 일만 생각할 수 있다고 합니다. 즉, 코드의 표현이 커지면 이해하기 더 어렵습니다.</li>\n</ul>\n<h3 id=\"설명-변수\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98\" aria-label=\"설명 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명 변수</h3>\n<ul>\n<li>커다란 표현을 쪼개는 가장 쉬운 방법은 작은 하위 표현을 담을 추가 변수를 만드는 것입니다. 하위표현의 의미를 설명하므로 <code class=\"language-text\">설명 변수</code>라고도 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Not Cool</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Cool</span>\n<span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username <span class=\"token operator\">===</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"드모르간의-법칙-사용하기\" style=\"position:relative;\"><a href=\"#%EB%93%9C%EB%AA%A8%EB%A5%B4%EA%B0%84%EC%9D%98-%EB%B2%95%EC%B9%99-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"드모르간의 법칙 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>드모르간의 법칙 사용하기</h3>\n<ul>\n<li>동일한 불리언 표현은 다음과 같이 두가지 방법으로 작성할 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">||</span> b <span class=\"token operator\">||</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">!</span>a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> b <span class=\"token operator\">&amp;&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">!</span>a <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>b <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Not Cool</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>fileExists <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isProtected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">throw</span> <span class=\"token string\">'아이고 파일을 읽을 수 없습니다.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Cool</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fileExists <span class=\"token operator\">||</span> isProtected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">throw</span> <span class=\"token string\">'아이고 파일을 읽을 수 없습니다.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"거대한-구문-나누기\" style=\"position:relative;\"><a href=\"#%EA%B1%B0%EB%8C%80%ED%95%9C-%EA%B5%AC%EB%AC%B8-%EB%82%98%EB%88%84%EA%B8%B0\" aria-label=\"거대한 구문 나누기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>거대한 구문 나누기</h3>\n<ul>\n<li>개별적인 표현은 그렇게 크지 않지만, 모두 한 곳에 있어서 코드를 읽는 사람의 머리를 강타하는 거대한 구문을 형성합니다.</li>\n<li>다행히도 표현하는 많은 부분이 동일합니다. 따라서 동일한 부분을 요약 변수로 추출해서 함수의 앞부분에 놓아둘 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Not Cool</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">updateHighlight</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">messageNum</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#vote_value</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'Up'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_up</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_down</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#vote_value</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'Down'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_up</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_down</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_up</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_down</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Cool</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">updateHighlight</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">messageNum</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> thumbsUp <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_up</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> thumbsDown <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#thumbs_down</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> voteValueHtml <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#vote_value</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>messageNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token constant\">ACTIVE_CLASS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'highlighted'</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voteValueHtml <span class=\"token operator\">===</span> <span class=\"token string\">'Up'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tthumbsUp<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ACTIVE_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tthumbsUp<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ACTIVE_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voteValueHtml <span class=\"token operator\">===</span> <span class=\"token string\">'Down'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tthumbsDown<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ACTIVE_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tthumbsDown<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ACTIVE_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"예-복잡한-논리와-씨름하기\" style=\"position:relative;\"><a href=\"#%EC%98%88-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%85%BC%EB%A6%AC%EC%99%80-%EC%94%A8%EB%A6%84%ED%95%98%EA%B8%B0\" aria-label=\"예 복잡한 논리와 씨름하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예: 복잡한 논리와 씨름하기</h3>\n<ul>\n<li>주어진 양쪽 경계값이 other의 범위에 속하는지 확인하는 함수입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> begin <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">overlapsWith</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">other</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token punctuation\">(</span>begin <span class=\"token operator\">>=</span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> begin <span class=\"token operator\">&lt;=</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token punctuation\">(</span>end <span class=\"token operator\">>=</span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> end <span class=\"token operator\">&lt;=</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>생각해야 하거나 조건이 너무나 많으므로 버그가 발생할 확률이 매우 높습니다. 사실은 버그가 있습니다. 앞선 코드는 범위 [0, 2)가 [2, 4)와 겹친다고 말합니다.</li>\n<li>문제는 &#x3C;= 혹은 &#x3C;로 begin/end 값을 비교할 때 매우 신중해야 한다는 점입니다. 이 버그를 수정하면 다음과 같습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">overlapsWith</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">other</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token punctuation\">(</span>begin <span class=\"token operator\">>=</span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> begin <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token punctuation\">(</span>end <span class=\"token operator\">></span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> end <span class=\"token operator\">&lt;=</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>사실은 또 다른 버그가 있습니다. 이 코드는 begin/end가 other를 완전히 포함하는 경우를 무시합니다. 이를 제대로 해결한 수정 코드는 다음과 같습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">overlapsWith</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">other</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token punctuation\">(</span>begin <span class=\"token operator\">>=</span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> begin <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token punctuation\">(</span>end <span class=\"token operator\">></span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> end <span class=\"token operator\">&lt;=</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token punctuation\">(</span>begin <span class=\"token operator\">&lt;=</span> other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">&amp;&amp;</span> end <span class=\"token operator\">>=</span> other<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>이 코드는 이제 걷잡을 수 없이 복잡해졌습니다. 다른 사람이 이 코드를 읽고 정확한지 판단할 수 있으리라고 기대할 수 는 없습니다.</li>\n</ul>\n<h3 id=\"더-우아한-접근방법-발견하기\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EC%9A%B0%EC%95%84%ED%95%9C-%EC%A0%91%EA%B7%BC%EB%B0%A9%EB%B2%95-%EB%B0%9C%EA%B2%AC%ED%95%98%EA%B8%B0\" aria-label=\"더 우아한 접근방법 발견하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 우아한 접근방법 발견하기</h3>\n<ul>\n<li>더 우아한 해결책을 찾으려면 창의력이 필요합니다. 한 가지 해결책은 똑같은 문제를 반대되는 방법으로 해결할 수 있는지 확인하는 것입니다.</li>\n<li>여기서 overlapsWith의 반대는 겹치지 않는 것입니다. 두 개의 범위가 서로 겹치지 않는 것을 확인하는 방법에는 두 가지 가능성만 존재하므로 훨씬 더 풀기 쉬운 문제로 다가옵니다.</li>\n<li>다른 범위가 이 범위 시작보다 전에 끝납니다.</li>\n<li>다른 범위가 이 범위가 끝난 후에 시작됩니다.</li>\n<li>이를 코드로 만드는 방법은 쉽다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">overlapsWith</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">other</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>end <span class=\"token operator\">&lt;=</span> begin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 시작보다 전에 끝난다.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>begin <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 끝난 후에 시작한다.</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>코드의 각 줄은 전보다 훨씬 더 간단합니다. 한 번의 비교만 표함할 뿐입니다. 이렇게 하면 코드를 읽는 사람이 &#x3C;= 연산자를 정확하게 사용했는 지 쉽게 확인할 수 있습니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/undefined-4#one\">읽기 좋은 코드가 좋은 코드다</a></li>\n</ul>","frontmatter":{"title":"TWO 루프와 논리를 단순화하기","date":"July 02, 2020"}}},"pageContext":{"slug":"/읽기 좋은 코드가 좋은 코드다/two-루프와-논리를-단순화하기/","previous":{"fields":{"slug":"/읽기 좋은 코드가 좋은 코드다/one-표면적-수준에서의-개선/"},"frontmatter":{"title":"ONE 표면적 수준에서의 개선","category":"읽기 좋은 코드가 좋은 코드다","draft":false}},"next":{"fields":{"slug":"/읽기 좋은 코드가 좋은 코드다/three-코드-재작성하기/"},"frontmatter":{"title":"THREE 코드 재작성하기","category":"읽기 좋은 코드가 좋은 코드다","draft":false}}}}}