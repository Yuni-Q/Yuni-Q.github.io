{"componentChunkName":"component---src-templates-blog-post-js","path":"/clean code/1장-깨끗한-코드/","result":{"data":{"site":{"siteMetadata":{"title":"yuniq 블로그","author":"yuniq","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuniq","utterances":"yuniq"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"b47d688c-e1dd-5319-a87c-7297be84576d","excerpt":"코드가 존재하리라 코드는 요구사항을 표현하는 언어라는 사실을 명심해야 합니다. 요구사항에 더욱 가까운 언어를 만들 수도 있고, 요구사항에서 정형 구조를 뽑아내는 도구를 만들 수도 있습니다. 하지만 어느 순간에는 정밀한 표현이 필요합니다. 그 필요성을 없앨 방법은 없습니다. 그러므로 코드도 항상 존재 합니다. 코드에 관한 책은 구시대적이고, 곧 명세를 기준으로 코드가 자동생성될 것이라는 생각은 틀렸습니다. 언어의 추상화 레벨(고급/저급언어의 관점에서)이 올라가고 domain specific…","html":"<h2 id=\"코드가-존재하리라\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EA%B0%80-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%A6%AC%EB%9D%BC\" aria-label=\"코드가 존재하리라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드가 존재하리라</h2>\n<ul>\n<li>코드는 요구사항을 표현하는 언어라는 사실을 명심해야 합니다. 요구사항에 더욱 가까운 언어를 만들 수도 있고, 요구사항에서 정형 구조를 뽑아내는 도구를 만들 수도 있습니다. 하지만 어느 순간에는 정밀한 표현이 필요합니다. 그 필요성을 없앨 방법은 없습니다. 그러므로 코드도 항상 존재 합니다.</li>\n<li>\n<p>코드에 관한 책은 구시대적이고, 곧 명세를 기준으로 코드가 자동생성될 것이라는 생각은 틀렸습니다.</p>\n<ul>\n<li>언어의 추상화 레벨(고급/저급언어의 관점에서)이 올라가고 domain specific한 언어는 증가할지라도 코드는 사라지지 않습니다.</li>\n<li>기계가 실행할 수 있을만큼 자세한 명세는 그 자체로 코드이기 때문입니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"나쁜-코드\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C\" aria-label=\"나쁜 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나쁜 코드</h2>\n<ul>\n<li>\n<p>우리 모두는 자신이 짠 쓰레기 코드를 쳐다보며 나중에 손보겠다고 생각한 경험이 있습니다. 우리 모두는 대충 짠 프로그램이 돌아간다는 사실에 안도감을 느끼며 그래도 안 돌아가는 프로그램보다 돌아가는 쓰레기가 좋다고 스스로를 위로한 경험이 있습니다. 다시 돌아와 나중에 정리하겠다고 다짐했었습니다. 물론 그때 그 시절 우리는 르블랑의 법칙(iebimc’sLaw)을 몰랐습니. 나중은 결코 오지 않습니다.</p>\n<blockquote>\n<p>Later equals never - LeBlanc’s law (나중은 절대 오지 않는다 - 르블랑의 법칙)</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"나쁜-코드로-치르는-대가\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%81%9C-%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%B9%98%EB%A5%B4%EB%8A%94-%EB%8C%80%EA%B0%80\" aria-label=\"나쁜 코드로 치르는 대가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나쁜 코드로 치르는 대가</h2>\n<ul>\n<li>일정에 쫓기더라도 대다수 관리자는 좋은 코드를 원합니다. 그들이 일정과 요구사항을 강력하게 밀어붙이는 이유는 그것이 그들의 책임이기 때문입니다. 좋은 코드를 사수하는 일은 바로 우리 프로그래머들의 책임입니다.</li>\n<li>기한을 맞추는 유일한 방법은, 그러니까 빨리 가는 유일한 방법은, 언제나 코드를 최대한 깨끗하게 유지하는 습관입니다.</li>\n<li>깨끗한 코드를 작성하는 프로그래머는 빈 캔퍼스를 우아한 작품으로 바꿔가는 화가와 같습니다.</li>\n<li>깨끗한 코드란 아마 프로그래머 수 만큼이나 정의도 다양합니다.</li>\n</ul>\n<h2 id=\"clean-code의-미학이란\" style=\"position:relative;\"><a href=\"#clean-code%EC%9D%98-%EB%AF%B8%ED%95%99%EC%9D%B4%EB%9E%80\" aria-label=\"clean code의 미학이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clean Code의 미학이란?</h2>\n<ul>\n<li>클린코드란 예술작품과 같습니다. 어떤 코드가 클린코드 인지 아닌지를 구분하는 것과 클린코드를 쓸 수 있는지는 다른 문제입니다.</li>\n<li>클린코드를 작성하려면 피를 토해가며 얻은 클린코드에 대한 감각을 사용해 무수하게 많은 작은 기술들을 적용해야 합니다.</li>\n</ul>\n<h2 id=\"clean-code란-무엇인가\" style=\"position:relative;\"><a href=\"#clean-code%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"clean code란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clean Code란 무엇인가?</h2>\n<h3 id=\"비야네-스트롭스트룹bjame-stroustrup---c-창시자이자-the-c-programming-language-저자\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%95%BC%EB%84%A4-%EC%8A%A4%ED%8A%B8%EB%A1%AD%EC%8A%A4%ED%8A%B8%EB%A3%B9bjame-stroustrup---c-%EC%B0%BD%EC%8B%9C%EC%9E%90%EC%9D%B4%EC%9E%90-the-c-programming-language-%EC%A0%80%EC%9E%90\" aria-label=\"비야네 스트롭스트룹bjame stroustrup   c 창시자이자 the c programming language 저자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비야네 스트롭스트룹(Bjame Stroustrup) - C++ 창시자이자 The C++ Programming Language 저자</h3>\n<ul>\n<li>코드는 즐겁게 읽혀야 합니다.</li>\n<li>우아하고 효율적인 코드를 좋아합니다.</li>\n<li>논리가 간단해야 버그가 숨어들지 못해야 합니다.</li>\n<li>의존성을 최대한 줄여야 유지보수가 쉬워집니다.</li>\n<li>오류는 명백한 전략에 의거해 철저히 처리합니다.</li>\n<li>성능을 최적으로 유지해야 사람들이 원칙 없는 최적화로 코드를 망치려는 유혹에 빠지지 않습니다.</li>\n<li>효율적인 코드라야 합니다. 이는 성능적 측면 뿐만 아니라 나쁜 코드는 난장판을 더 키우기 때문입니다다.(깨진 유리창 이론)</li>\n<li>나쁜 코드는 여러가지 일을 하려고 합니다. 나쁜 코드는 애매한 의도와 모호한 목적을 포함합니다. 클린코드는 한 가지에 집중합니다. 클린코드는 한 가지 일을 잘 합니다.</li>\n</ul>\n<h3 id=\"그래-디-부치grady-booch---object-oriented-analysis-and-design-with-application-저자\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98-%EB%94%94-%EB%B6%80%EC%B9%98grady-booch---object-oriented-analysis-and-design-with-application-%EC%A0%80%EC%9E%90\" aria-label=\"그래 디 부치grady booch   object oriented analysis and design with application 저자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래 디 부치(Grady Booch) - Object Oriented Analysis and Design with Application 저자</h3>\n<ul>\n<li>깨끗한 코드는 단순하고 직접적입니다.</li>\n<li>깨끗한 코드는 잘 쓴 문장처럼 읽힙니다.</li>\n<li>깨끗한 코드는 결코 설계자의 의도를 숨기지 않습니다. 오히려 명쾌한 추상화와 단순한 제어문으로 가득합니다.</li>\n<li>명백한 추상: 코드는 추측 대신 실제를 중시, 필요한 것만 포함하며 독자로 하여금 결단을 내렸다고 생각하게 해야 합니다.</li>\n</ul>\n<h3 id=\"큰big-데이브-토마스dave-thomas---oti-창립자이자-이클립스-전략의-대부\" style=\"position:relative;\"><a href=\"#%ED%81%B0big-%EB%8D%B0%EC%9D%B4%EB%B8%8C-%ED%86%A0%EB%A7%88%EC%8A%A4dave-thomas---oti-%EC%B0%BD%EB%A6%BD%EC%9E%90%EC%9D%B4%EC%9E%90-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%EC%A0%84%EB%9E%B5%EC%9D%98-%EB%8C%80%EB%B6%80\" aria-label=\"큰big 데이브 토마스dave thomas   oti 창립자이자 이클립스 전략의 대부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>큰(big) 데이브 토마스(Dave Thomas) - OTI 창립자이자 이클립스 전략의 대부</h3>\n<ul>\n<li>깨끗한 코드는 작성자가 아닌 사람도 읽기 쉽고 고치기 쉽습니다.</li>\n<li>단위 테스트 케이스와 인수 테스트 케이스가 존재합니다. 테스트를 해야 합니다.</li>\n<li>깨끗한 코드에는 의미 있는 이름이 붙습니다.</li>\n<li>특정 목적을 달성하는 방법은 (여러 가지가 아니라) 하나만 제공합니다. 의존성은 최소이며 각 의존성을 명확히 정의합니다.</li>\n<li>API는 명확하며 최소로 합니다.</li>\n<li>언어에 따라 필요한 모든 정보를 코드만으로 명확히 표현할 수 없기에 코드는 문학적으로 표현해야 합니다.</li>\n<li>코드는 간결할 수록 좋습니다.</li>\n<li>코드는 세련되어야 합니다.</li>\n</ul>\n<h3 id=\"마이클-페더스michael-feathers---working-effectively-with-legacy-code-저자\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%B4-%ED%8E%98%EB%8D%94%EC%8A%A4michael-feathers---working-effectively-with-legacy-code-%EC%A0%80%EC%9E%90\" aria-label=\"마이클 페더스michael feathers   working effectively with legacy code 저자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마이클 페더스(Michael Feathers) - Working Effectively with Legacy Code 저자</h3>\n<ul>\n<li>깨끗한 코드의 특징은 많지만 그 중에서도 모두를 아우르는 특징이 하나 있습니다.</li>\n<li>깨끗한 코드는 언제나 누군가 주의 깊게 짰다는 느낌을 줍니다. 고치려고 살펴봐도 딱히 손댈 곳이 없습니다. 작성자가 이미 모든 사항을 고려했으므로, 고칠 궁리를 하다보면 언제나 제자리로 돌아옵니다. 그리고는 누군가 남겨준 코드, 누군가 주의 깊게 짜놓은 작품에 감사를 느낍니다.</li>\n<li>코드를 care해야합니다. 주의, 관심을 가지고 작성해야 합니다.</li>\n</ul>\n<h3 id=\"론-제프리스-jeffries---extreme-programming-fnstaed9오t-extreme-programming-adventure-in-c-저자\" style=\"position:relative;\"><a href=\"#%EB%A1%A0-%EC%A0%9C%ED%94%84%EB%A6%AC%EC%8A%A4-jeffries---extreme-programming-fnstaed9%EC%98%A4t-extreme-programming-adventure-in-c-%EC%A0%80%EC%9E%90\" aria-label=\"론 제프리스 jeffries   extreme programming fnstaed9오t extreme programming adventure in c 저자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>론 제프리스 (Jeffries) - Extreme Programming fnsta//ed9오t Extreme Programming Adventure in C# 저자</h3>\n<ul>\n<li>중복을 피야합니다.</li>\n<li>클래스/메서드는 한 가지 일만 합니다.</li>\n<li>메서드의 이름 등으로 코드가 하는 일을 명시 합니다.</li>\n<li>작게 추상화해야 합니다. 메서드 등을 일찍 추상화해서 프로젝트를 빠르게 진행할 수 있게 합니다.</li>\n</ul>\n<h3 id=\"워드-커닝햄ward-cunningham---위키wiki-창시자-피트fit-창시자-익스트림-프로그래밍extreme-programming-공동-창시자-디자인-패턴을-뒤에서-움직이는-전문가-스몰토크smalltalk와-객체지향-의-정신적-지도자-코드를-사랑하는-프로그래머들의-대부\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%EB%93%9C-%EC%BB%A4%EB%8B%9D%ED%96%84ward-cunningham---%EC%9C%84%ED%82%A4wiki-%EC%B0%BD%EC%8B%9C%EC%9E%90-%ED%94%BC%ED%8A%B8fit-%EC%B0%BD%EC%8B%9C%EC%9E%90-%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%A6%BC-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8Dextreme-programming-%EA%B3%B5%EB%8F%99-%EC%B0%BD%EC%8B%9C%EC%9E%90-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4%EC%9D%84-%EB%92%A4%EC%97%90%EC%84%9C-%EC%9B%80%EC%A7%81%EC%9D%B4%EB%8A%94-%EC%A0%84%EB%AC%B8%EA%B0%80-%EC%8A%A4%EB%AA%B0%ED%86%A0%ED%81%ACsmalltalk%EC%99%80-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%EC%9D%98-%EC%A0%95%EC%8B%A0%EC%A0%81-%EC%A7%80%EB%8F%84%EC%9E%90-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%82%AC%EB%9E%91%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%93%A4%EC%9D%98-%EB%8C%80%EB%B6%80\" aria-label=\"워드 커닝햄ward cunningham   위키wiki 창시자 피트fit 창시자 익스트림 프로그래밍extreme programming 공동 창시자 디자인 패턴을 뒤에서 움직이는 전문가 스몰토크smalltalk와 객체지향 의 정신적 지도자 코드를 사랑하는 프로그래머들의 대부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워드 커닝햄(Ward Cunningham) - 위키(Wiki) 창시자, 피트(Fit) 창시자, 익스트림 프로그래밍(extreme Programming) 공동 창시자, 디자인 패턴을 뒤에서 움직이는 전문가, 스몰토크(Smalltalk)와 객체지향 의 정신적 지도자, 코드를 사랑하는 프로그래머들의 대부</h3>\n<ul>\n<li>읽고, 끄덕이고, 다음으로 넘어갈 수 있는 코드를 작성합니다.</li>\n<li>사용하는 언어를 탓하지 말고 코드를 아름답게 만드는 것은 프로그래머입니다.</li>\n<li>코드를 읽으면서 짐작했던 기능을 각 루틴이 그대로 수행한다면 깨끗한 코드라 불러도 됩니다. 코드가 그 문제를 풀기 위한 언어처럼 보인다면 아름다운 코드라 불러도 됩니다.</li>\n</ul>\n<h2 id=\"학파\" style=\"position:relative;\"><a href=\"#%ED%95%99%ED%8C%8C\" aria-label=\"학파 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>학파</h2>\n<ul>\n<li>이 책을 “클린코드에 대한 객체 멘토 학파”라고 생각해야 합니다. 이 책에서 설명하는 기술과 가르침은 그들이 예술을 실행하는 방법입니다. 우리가 이 가르침을 따른다면, 그들이 즐긴(enjoyed) 이점을 즐길 수 있을 것이며 깨끗하고 프로페셔널한 코드 작성법을 배울 것입니다. 하지만 절대적으로 “옳다”라고는 여겨서는 안 됩니다.이 외에도 다양한 학파와 마스터들이 있다. 그들에게서도 배움을 얻어야 합니다.</li>\n<li>이 책에 나오는 많은 내용들은 논란거리입니다. 모든 내용을 수긍하지도 않을 거니와 어떤 내용은 심하게 부정할 수도 있습니다. 하지만, 이 책에서 추천하는 내용은 그들이 긴 시간 힘들게 고민한 내용입니다. 이 내용은 그들이 수십년간의 경험과 시행착오의 반복으로 얻은 것입니다. 동의하던 아니던 그들의 관점을 이해하고 존중하면 읽어야 합니다.</li>\n</ul>\n<h3 id=\"우리는-작가들이다\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%A6%AC%EB%8A%94-%EC%9E%91%EA%B0%80%EB%93%A4%EC%9D%B4%EB%8B%A4\" aria-label=\"우리는 작가들이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우리는 작가들이다</h3>\n<ul>\n<li>실제로 읽기와 쓰기에 들이는 시간은 대략 10:1 정도입니다. 새 코드를 작성하기 위해서는 옛 코드들을 읽어야 하기 때문입니다.</li>\n<li>그러므로, 빨리 가고 싶다면, 쉽게 코드를 작성하고 싶다면, “읽기 쉽게 작성하라”.</li>\n</ul>\n<h2 id=\"보이스카우트-규칙\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%9D%B4%EC%8A%A4%EC%B9%B4%EC%9A%B0%ED%8A%B8-%EA%B7%9C%EC%B9%99\" aria-label=\"보이스카우트 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보이스카우트 규칙</h2>\n<ul>\n<li>“Leave the campground cleaner than you found it.”</li>\n<li>캠프장은 처음 왔을 때보다 더 깨끗하게 해놓고 떠나야 합니다.</li>\n<li>우리가 본 코드를 그 순간보다 조금만 더 개선한다면 코드는 더러워질 수가 없습니다. 거창하게 생각할 필요는 없습니다. 변수의 명명, 너무 긴 코드의 분할, 작은 중복의 제거, 복합 if문 하나의 개선 정도만 해 보아도 좋습니다.</li>\n</ul>\n<h2 id=\"프리퀄-그리고-원칙\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%ED%80%84-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9B%90%EC%B9%99\" aria-label=\"프리퀄 그리고 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리퀄, 그리고 원칙</h2>\n<ul>\n<li>여러모로 봐서 이 책은 저자가 지난 2002년에 쓴 책 Agile Software Development: Principles, Patterns, and Practices (PPP) 의 프리퀄입니다. SRP, OCP, DIP등 PPP에서 설명하는 객체지향 디자인의 원칙과 실제에 대한 설명이 종종 나오기 때문에 같이 읽어보면 좋을 것입니다.</li>\n</ul>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>이 책은 우리를 예술가로 만들어줄 수는 없습니다. 다만, 다른 아티스트가 사용했던 툴, 기술, 사고방식 등을 전달해줄 수 있을 뿐입니다.</li>\n<li>예술 교본과 마찬가지로 이 책은 우리에게 많은 (좋은/나쁜)코드를 보여줄 것입니다. 나쁜 코드들이 좋은 코드로 바뀌는 것도 볼 것입니다. 많은 휴리스틱, 규율, 태크닉을 볼 것입니다. 예제, 그리고 더 많은 예제들을 볼 것입니다. 그 다음은 우리의 몫입니다.</li>\n<li>공연에 지각한 콘서트 바이올리니스트에 대한 옛 농담이 있습니다. 그는 코너에 있던 한 노인을 불러 세우고는 카네기 홀 까지의 길을 물었습니다. 노인은 그와 그의 바이올린을 쳐다보고는 말했다. “연습해 젊은이. 연습!“.</li>\n<li>우리가 발전하려면 많은 코드를 보고 많은 코드를 작성해 보는 것이 가자 좋은 방법일 수 있습니다.</li>\n</ul>","frontmatter":{"title":"1장 깨끗한 코드","date":"March 03, 2020"}}},"pageContext":{"slug":"/clean code/1장-깨끗한-코드/","previous":{"fields":{"slug":"/develop/repository와-dao/"},"frontmatter":{"title":"repository와 DAO","category":"develop","draft":false}},"next":{"fields":{"slug":"/clean code/추천사-및-0장/"},"frontmatter":{"title":"추천사 및 0장 들어가면서","category":"clean code","draft":false}}}}}