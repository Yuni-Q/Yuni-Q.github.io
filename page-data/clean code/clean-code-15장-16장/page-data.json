{"componentChunkName":"component---src-templates-blog-post-js","path":"/clean code/clean-code-15장-16장/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni-q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"dfa56456-8515-5588-bb68-fdfbe56bd4cf","excerpt":"15장 JUnit 들여다보기 비록 저자들이 모듈을 아주 좋은 상태로 남겨두었지만 보이스카우트 규칙에 따르면 우리는 처음 왔을 때보다 더 깨끗하게 해놓고 떠나야 합니다. 가장 먼저 눈에 거슬리는 부분은 멤버 변수 앞에 붙인 접두어 f입니다. 오늘날 사용하는 개발 환경에서는 이처럼 변수 이름에 범위를 명시할 필요가 없습니다. 접두어 f는 중복되는 정보입니다. 그러므로 접두어 f…","html":"<h2 id=\"15장-junit-들여다보기\" style=\"position:relative;\"><a href=\"#15%EC%9E%A5-junit-%EB%93%A4%EC%97%AC%EB%8B%A4%EB%B3%B4%EA%B8%B0\" aria-label=\"15장 junit 들여다보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15장 JUnit 들여다보기</h2>\n<ul>\n<li>비록 저자들이 모듈을 아주 좋은 상태로 남겨두었지만 보이스카우트 규칙에 따르면 우리는 처음 왔을 때보다 더 깨끗하게 해놓고 떠나야 합니다.</li>\n<li>가장 먼저 눈에 거슬리는 부분은 멤버 변수 앞에 붙인 접두어 f입니다. 오늘날 사용하는 개발 환경에서는 이처럼 변수 이름에 범위를 명시할 필요가 없습니다. 접두어 f는 중복되는 정보입니다. 그러므로 접두어 f를 모두 제거합니다.</li>\n<li>의도를 명확히 표현하려면 조건문을 캡슐화해야 합니다. 즉, 조건문을 메서드로 뽑아내 적절한 이름을 붙입니다.</li>\n<li>이름은 명확하게 붙입니다.</li>\n<li>부정문은 <code class=\"language-text\">긍정문</code>보다 이해하기 약간 더 어렵습니다.</li>\n<li>새 함수에서 마지막 두 줄은 변수를 반환하지만 첫째 줄과 둘째 줄은 반환값이 없습니다. 함수 사용방식이 일관적이어야 합니다.</li>\n<li>숨겨진 시간적인 결합(hiddentemporalcoupling)을 찾아 없애야 합니다.</li>\n<li>모듈은 일련의 분석 함수와 일련의 조합 함수로 나뉩니다. 전체 함수는 위상적으로 정렬했으므로 각 함수가 사용된 직후에 정의됩니다. 분석 함수가 먼저 나오고 조합 함수가 그 뒤를 이어서 나옵니다.</li>\n<li>코드를 주의 깊게 살핀다면 결정 일부를 번복할 수 있다는 사실을 알 수 있습니다. 흔히 생기는 일입니다. 코드를 리팩터링 하다 보면 원래 했던 변경을 되돌리는 경우가 흔합니다. 리팩터링은 코드가 어느 수준에 이를 때까지 수많은 시행착오를 반복하는 작업이기 때문입니다.</li>\n</ul>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<ul>\n<li>보이스카우트 규칙도 지켰습니다. 모듈은 처음보다 조금 더 깨끗해졌습니다. 원래 깨끗하지 못했다는 말은 아닙니다. 저자들은 우수한 모듈을 만들었습니다. 하지만 세상에 개선이 불필요한 모듈은 없습니다. 코드를 처음보다 조금 더 깨끗하게 만드는 책임은 우리 모두에게 있습니다.</li>\n</ul>\n<h2 id=\"16장-serialdate-리팩터링\" style=\"position:relative;\"><a href=\"#16%EC%9E%A5-serialdate-%EB%A6%AC%ED%8C%A9%ED%84%B0%EB%A7%81\" aria-label=\"16장 serialdate 리팩터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>16장 SerialDate 리팩터링</h2>\n<h3 id=\"첫째，돌려보자\" style=\"position:relative;\"><a href=\"#%EC%B2%AB%EC%A7%B8%EF%BC%8C%EB%8F%8C%EB%A0%A4%EB%B3%B4%EC%9E%90\" aria-label=\"첫째，돌려보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫째，돌려보자</h3>\n<h3 id=\"둘째，고쳐보자\" style=\"position:relative;\"><a href=\"#%EB%91%98%EC%A7%B8%EF%BC%8C%EA%B3%A0%EC%B3%90%EB%B3%B4%EC%9E%90\" aria-label=\"둘째，고쳐보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>둘째，고쳐보자</h3>\n<h3 id=\"결론-1\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0-1\" aria-label=\"결론 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<ul>\n<li>보이스카우트 규칙을 따랐습니다. 체크아웃한 코드보다 좀 더 깨 끗한 코드를 체크인하게 되었습니다. 시간은 걸렸지만 가치 있는 작업입니다. 테스트 커버리지가 증가했으며, 버그 몇 개를 고쳤으며, 코드 크기가 줄었고, 코드가 명확해졌습니다. 다음 사람은 우리보다 코드를 좀 더 쉽게 이해할 것입니다. 그래서 우리 보다 코드를 좀 더 쉽게 개선할 수 있습니다.</li>\n</ul>","frontmatter":{"title":"clean code 15장 16장","date":"April 02, 2020"}}},"pageContext":{"slug":"/clean code/clean-code-15장-16장/","previous":{"fields":{"slug":"/develop/node-https-적용/"},"frontmatter":{"title":"node https 적용","category":"develop","draft":false}},"next":{"fields":{"slug":"/clean code/clean-code-부록a-동시성2/"},"frontmatter":{"title":"clean code 부록A 동시성2","category":"clean code","draft":false}}}}}