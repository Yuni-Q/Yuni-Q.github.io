{"componentChunkName":"component---src-templates-blog-post-js","path":"/clean architecture/6장-함수형-프로그래밍/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"f3723755-2670-504d-82b7-8ee9a21c5966","excerpt":"불변성과 아키텍처 경합(race) 조건, 교착상태(deadlock) 조건, 동시성 업데이트(concurrent update) 문제가 모두 가변 변수로 인해 발생하기 때문에 아키텍트는 변수의 가변성을 염려합니다. 가변성의 분리 불변성과 관련하여 가장 중요한 타협 중 하나는 애플리케이션 내부에서 가변과 불변을 분리하는 것입니다. 이벤트 소싱 상태가 아닌 트랜젝션을 저장하자는 전략 결과적으로 애플리케이션을 CRUD가 아니라 그저 CR…","html":"<h2 id=\"불변성과-아키텍처\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1%EA%B3%BC-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"불변성과 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불변성과 아키텍처</h2>\n<ul>\n<li>경합(race) 조건, 교착상태(deadlock) 조건, 동시성 업데이트(concurrent update) 문제가 모두 가변 변수로 인해 발생하기 때문에 아키텍트는 변수의 가변성을 염려합니다.</li>\n</ul>\n<h2 id=\"가변성의-분리\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B3%80%EC%84%B1%EC%9D%98-%EB%B6%84%EB%A6%AC\" aria-label=\"가변성의 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가변성의 분리</h2>\n<ul>\n<li>불변성과 관련하여 가장 중요한 타협 중 하나는 애플리케이션 내부에서 가변과 불변을 분리하는 것입니다.</li>\n</ul>\n<h2 id=\"이벤트-소싱\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%86%8C%EC%8B%B1\" aria-label=\"이벤트 소싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 소싱</h2>\n<ul>\n<li>상태가 아닌 트랜젝션을 저장하자는 전략</li>\n<li>결과적으로 애플리케이션을 CRUD가 아니라 그저 CR만 수행합니다.</li>\n<li>데이터 저장소에서 변경과 삭제가 전혀 발생하지 않으므로 동시업데이트 문제 또한 일어나지 않습니다.</li>\n<li>이 방식은 소스코드 버전 관리 시스템이 정확히 이 방식으로 동작합니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/clean-architecture/3\">6장 함수형 프로그래밍</a></li>\n</ul>","frontmatter":{"title":"6장 함수형 프로그래밍","date":"May 04, 2020"}}},"pageContext":{"slug":"/clean architecture/6장-함수형-프로그래밍/","previous":{"fields":{"slug":"/clean architecture/클린-아키텍처-일부-요약/"},"frontmatter":{"title":"클린 아키텍처 일부 요약","category":"clean architecture","draft":false}},"next":{"fields":{"slug":"/clean architecture/5장-객체-지향-프로그래밍/"},"frontmatter":{"title":"5장 객체 지향 프로그래밍","category":"clean architecture","draft":false}}}}}