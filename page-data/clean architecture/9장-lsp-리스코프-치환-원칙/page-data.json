{"componentChunkName":"component---src-templates-blog-post-js","path":"/clean architecture/9장-lsp-리스코프-치환-원칙/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni-q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"aad4c4ea-d688-5078-916c-410bee2e6a22","excerpt":"LSP: 리스코프 치환 원칙 (Liskov Substitution Principle) S타입의 객체 o1 각각에 대응하는 T타입 객체 o2가 있고, T타입을 이용해서 정의한 모든 프로그램 P에 o2의 자리에 o1을 치환하더라도 P의 행위가 변하지 않는다면, S는 T의 하위타입 입니다. LSP는 아키텍처 수준까지 확장할 수 있고, 반드시 확장 해야만 합니다. 치환 가능성을 조금이라도 위배하면 시스템 아키텍처가 오염되어 상당량의 별도 메커니즘을 추가해야 할 수 있기 때문입니다. 참고 9장 LSP…","html":"<h2 id=\"lsp-리스코프-치환-원칙-liskov-substitution-principle\" style=\"position:relative;\"><a href=\"#lsp-%EB%A6%AC%EC%8A%A4%EC%BD%94%ED%94%84-%EC%B9%98%ED%99%98-%EC%9B%90%EC%B9%99-liskov-substitution-principle\" aria-label=\"lsp 리스코프 치환 원칙 liskov substitution principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LSP: 리스코프 치환 원칙 (Liskov Substitution Principle)</h2>\n<ul>\n<li>S타입의 객체 o1 각각에 대응하는 T타입 객체 o2가 있고, T타입을 이용해서 정의한 모든 프로그램 P에 o2의 자리에 o1을 치환하더라도 P의 행위가 변하지 않는다면, S는 T의 하위타입 입니다.</li>\n<li>LSP는 아키텍처 수준까지 확장할 수 있고, 반드시 확장 해야만 합니다. 치환 가능성을 조금이라도 위배하면 시스템 아키텍처가 오염되어 상당량의 별도 메커니즘을 추가해야 할 수 있기 때문입니다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/clean-architecture/9-lsp\">9장 LSP 리스코프 치환 원칙</a></li>\n</ul>","frontmatter":{"title":"9장 LSP 리스코프 치환 원칙","date":"May 04, 2020"}}},"pageContext":{"slug":"/clean architecture/9장-lsp-리스코프-치환-원칙/","previous":{"fields":{"slug":"/실용주의 프론트 엔드 개발/object/"},"frontmatter":{"title":"Object","category":"실용주의 프론트 엔드 개발","draft":false}},"next":{"fields":{"slug":"/clean architecture/8장-ocp-개방-폐쇄-원칙/"},"frontmatter":{"title":"8장 OCP 개방 폐쇄 원칙","category":"clean architecture","draft":false}}}}}