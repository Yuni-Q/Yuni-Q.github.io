{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/javascript/javascript-call-by-reference가-존재하는가/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"","utterances":"Yuni-Q/blog"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"2f5f2542-33f8-5f74-81bd-4a098a5cc33c","excerpt":"Call by reference란 무엇인가? Call by reference를 알기 위해 평가 전략(컴퓨터 프로그래밍)을 먼저 보겠습니다. 평가 전략(Evaluation Strategy)은 프로그래밍 언어에서 함수 호출의 아규먼트(argument)의 순서를 언제 결정하고 함수에 어떤 종류의 값을 통과시킬지 결정하는 것입니다. 람다 대수에서 축소 전략(reduction strategy)과 유사하지만 다릅니다. 근래의 대부분의 프로그래밍 언어들은 값에 의한 호출(call-by-value…","html":"<h2 id=\"call-by-reference란-무엇인가\" style=\"position:relative;\"><a href=\"#call-by-reference%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"call by reference란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call by reference란 무엇인가?</h2>\n<h3 id=\"call-by-reference를-알기-위해-평가-전략컴퓨터-프로그래밍을-먼저-보겠습니다\" style=\"position:relative;\"><a href=\"#call-by-reference%EB%A5%BC-%EC%95%8C%EA%B8%B0-%EC%9C%84%ED%95%B4-%ED%8F%89%EA%B0%80-%EC%A0%84%EB%9E%B5%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%84-%EB%A8%BC%EC%A0%80-%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"call by reference를 알기 위해 평가 전략컴퓨터 프로그래밍을 먼저 보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call by reference를 알기 위해 평가 전략(컴퓨터 프로그래밍)을 먼저 보겠습니다.</h3>\n<ul>\n<li>평가 전략(Evaluation Strategy)은 프로그래밍 언어에서 함수 호출의 아규먼트(argument)의 순서를 언제 결정하고 함수에 어떤 종류의 값을 통과시킬지 결정하는 것입니다.</li>\n<li>람다 대수에서 축소 전략(reduction strategy)과 유사하지만 다릅니다.</li>\n<li>근래의 대부분의 프로그래밍 언어들은 값에 의한 호출(call-by-value)과 참조에 의한 전달(pass-by-reference)가 통합되고 있습니다.</li>\n</ul>\n<h3 id=\"call-by-value에-대해서도-짚어보고-가겠습니다\" style=\"position:relative;\"><a href=\"#call-by-value%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C%EB%8F%84-%EC%A7%9A%EC%96%B4%EB%B3%B4%EA%B3%A0-%EA%B0%80%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"call by value에 대해서도 짚어보고 가겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>call-by-value에 대해서도 짚어보고 가겠습니다.</h3>\n<ul>\n<li>값이 넘어올 때 복사된 값이 넘어옵니다.</li>\n<li>caller(호출하는 녀석)가 인자를 복사해서 넘겨줬으므로 callee(호출당한 녀석)에서 해당 인자를 지지고 볶아도 caller는 영향을 받지 않습니다.</li>\n<li>기본적으로 자바스크립트는 원시값을 arguments로 넘겨주면 call by value의 형태로 작동합니다.</li>\n</ul>\n<h3 id=\"이제-본격적으로-call-by-reference에-대해-알아보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-%EB%B3%B8%EA%B2%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-call-by-reference%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"이제 본격적으로 call by reference에 대해 알아보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 본격적으로 call by reference에 대해 알아보겠습니다.</h3>\n<ul>\n<li>arguments로 <code class=\"language-text\">reference(값에 대한 참조 주소, 메모리 주소를 담고있는 변수)</code>를 넘겨줍니다.</li>\n<li>reference를 넘기다 보니 해당 reference가 가리기는 값을 복사하지는 않습니다.</li>\n<li>caller(호출하는 녀석)가 인자를 복사해서 넘기지 않았으므로 callee(호출당한 녀석)에서 해당 인자를 지지고 볶으면 caller는 영향을 받습니다.</li>\n<li><code class=\"language-text\">자바스크립트는 참조 타입을 arguments로 넘겨주면 call by reference의 형태로 작동한다라고 오해를 많이합니다.</code></li>\n</ul>\n<h2 id=\"자바스크립트에서-참조값을-넘기면-어떻게-되는가\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EC%B0%B8%EC%A1%B0%EA%B0%92%EC%9D%84-%EB%84%98%EA%B8%B0%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%90%98%EB%8A%94%EA%B0%80\" aria-label=\"자바스크립트에서 참조값을 넘기면 어떻게 되는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트에서 참조값을 넘기면 어떻게 되는가?</h2>\n<h3 id=\"call-by-sharing이란\" style=\"position:relative;\"><a href=\"#call-by-sharing%EC%9D%B4%EB%9E%80\" aria-label=\"call by sharing이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>call by sharing이란?</h3>\n<ul>\n<li>자바스크립트에서는 무조건 call by value로 작동합니다.</li>\n<li>자바스크립트(자바, 루비, 파이썬 등등도 마찬가지)에서는 참조 타입을 인자로 넘기면 참조값에 대한 복사본을 만들어서 넘깁니다.</li>\n<li>C++을 배웠던 사람이라면 알고있던 call by value와는 다르단 느낌에 매우 혼동을 하게 됩니다. 따라서 이런 혼동을 줄이고자 call by sharing이 등장한 것 같습니다.</li>\n</ul>\n<hr>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://perfectacle.github.io/2017/10/30/js-014-call-by-value-vs-call-by-reference/\">(자알쓰) call by value vs call by reference</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%ED%8F%89%EA%B0%80_%EC%A0%84%EB%9E%B5_(%EC%BB%B4%ED%93%A8%ED%84%B0_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)\">평가 전략 (컴퓨터 프로그래밍)</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#call-by-reference%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\">Call by reference란 무엇인가?</a></p>\n<ul>\n<li><a href=\"#call-by-reference%EB%A5%BC-%EC%95%8C%EA%B8%B0-%EC%9C%84%ED%95%B4-%ED%8F%89%EA%B0%80-%EC%A0%84%EB%9E%B5%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%84-%EB%A8%BC%EC%A0%80-%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">Call by reference를 알기 위해 평가 전략(컴퓨터 프로그래밍)을 먼저 보겠습니다.</a></li>\n<li><a href=\"#call-by-value%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C%EB%8F%84-%EC%A7%9A%EC%96%B4%EB%B3%B4%EA%B3%A0-%EA%B0%80%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">call-by-value에 대해서도 짚어보고 가겠습니다.</a></li>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-%EB%B3%B8%EA%B2%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-call-by-reference%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">이제 본격적으로 call by reference에 대해 알아보겠습니다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EC%B0%B8%EC%A1%B0%EA%B0%92%EC%9D%84-%EB%84%98%EA%B8%B0%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%90%98%EB%8A%94%EA%B0%80\">자바스크립트에서 참조값을 넘기면 어떻게 되는가?</a></p>\n<ul>\n<li><a href=\"#call-by-sharing%EC%9D%B4%EB%9E%80\">call by sharing이란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>","frontmatter":{"title":"javascript call by reference가 존재하는가","date":"July 26, 2021"}}},"pageContext":{"slug":"/javascript/javascript-call-by-reference가-존재하는가/","previous":{"fields":{"slug":"/design pattern/dependency-injection-pattern/"},"frontmatter":{"title":"dependency injection pattern","category":"design pattern","tags":["design pattern"],"draft":false}},"next":{"fields":{"slug":"/javascript/타입스크립트의-오버로드/"},"frontmatter":{"title":"타입스크립트의 오버로드","category":"javascript","tags":[],"draft":false}},"tag":[]}},"staticQueryHashes":["3128451518","96099027"],"slicesMap":{}}