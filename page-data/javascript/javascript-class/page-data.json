{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-class/","result":{"data":{"site":{"siteMetadata":{"title":"yuniq 블로그","author":"yuniq","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuniq","utterances":"yuniq"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"a3bee2c4-917b-5865-b176-d875f22e224a","excerpt":"ES2015(ES6)에서 자바스크립트에 클래스(Class)가 도입되었습니다. 자바스크립트는 기본적으로 프로토타입 기반의 언어입니다. 프로토타입 기반으로 객체 지향적으로 설계하는 것이 복잡하여 클래스라는 sugar syntax 문법이 도입된 것입니다. Java에서의 클래스와 똑같은 기능을 한다고 생각 할 수 있지만 여전히 객체 지향을 흉내내고 있고 그 내부는 여전히 프로토타입으로 구성되어 있는 것입니다. 하지만 이전 ES5와는 전혀 다르게 구현되어 있기 때문에 마냥 ‘sugar syntax…","html":"<ul>\n<li>ES2015(ES6)에서 자바스크립트에 클래스(Class)가 도입되었습니다.</li>\n<li>자바스크립트는 기본적으로 프로토타입 기반의 언어입니다.</li>\n<li>\n<p>프로토타입 기반으로 객체 지향적으로 설계하는 것이 복잡하여 클래스라는 sugar syntax 문법이 도입된 것입니다.</p>\n<ul>\n<li>Java에서의 클래스와 똑같은 기능을 한다고 생각 할 수 있지만 여전히 객체 지향을 흉내내고 있고 그 내부는 여전히 프로토타입으로 구성되어 있는 것입니다.</li>\n<li>하지만 이전 ES5와는 전혀 다르게 구현되어 있기 때문에 마냥 ‘sugar syntax로 되어 있다’ 혹은 프로토타입으로 모든 것이 구현되어 있다고 보는 것 또한 옳지 않습니다.</li>\n</ul>\n</li>\n<li>클래스는 선언문 또는 표현식으로 선언할 수 있습니다.</li>\n<li>클래스의 선언부는 let과 const와 마찬가지로 호이스팅은 되지만 temporary dead zone이 형성됩니다.</li>\n<li>클래스의 코드는 ‘use strict’를 선언하지 않아도 strict 모드에서 실행됩니다.</li>\n<li>\n<p>자바스크립트에서는 프로토타입을 사용해서 클래스 밖에서도 메서드를 추가할 수 있습니다. 이미 생성된 인스턴스에 메서드를 추가하게 되면, 이전에 생성되었던 인스턴스들이 새로 추가된 메서드들을 공유해야하기 때문에 부하가 걸리지만 코드가 유연해진다는 장점도 존재한다.</p>\n<ul>\n<li>Java에서는 해당 기능을 사용할 수 없습니다.</li>\n</ul>\n</li>\n<li>슈퍼 클래스의 메소드를 오버라이딩(Overriding)할 수 있습니다. 하지만 오버로딩(Overloading)을 사용 할 수 없습니다.</li>\n<li>자바스크립트 클래스에서 static 키워드를 사용하면 정적 메소드를 정의할 수 있습니다. 정적 메소드라 함은 인스턴스를 생성하지 않고 사용할 수 있는 메소드를 말합니다. 정적 메소드는 인스턴스를 생성하지 않고도 호출할 수 있지만 인스턴스에서는 호출할 수 없습니다.</li>\n<li>new.target을 이용하면 슈퍼 클래스에서 서브 클래스의 static method에 접근할 수 있다.</li>\n</ul>\n<h2 id=\"typescript의-class\" style=\"position:relative;\"><a href=\"#typescript%EC%9D%98-class\" aria-label=\"typescript의 class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript의 Class</h2>\n<ul>\n<li>type과 Access Modifier가 추가 되었습니다.</li>\n<li>\n<p>Access Modifier</p>\n<ul>\n<li>public</li>\n<li>private</li>\n<li>protected</li>\n<li>readonly</li>\n<li>static</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"JavaScript Class","date":"February 03, 2020"}}},"pageContext":{"slug":"/javascript/javascript-class/","previous":{"fields":{"slug":"/react/react-hook/"},"frontmatter":{"title":"React Hook","category":"react","draft":false}},"next":{"fields":{"slug":"/frontend/마진-병합/"},"frontmatter":{"title":"마진 병합","category":"frontend","draft":false}}}}}