{"componentChunkName":"component---src-templates-blog-post-js","path":"/함수형 자바스크립트 | 마이클 포거스/9.-클래스를-이용하지-않는-프로그래밍/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"772b8d23-b7fb-52b0-bfce-16f65130b637","excerpt":"믹스인 믹스인은 기능에 기존 기능 또는 새로운 기능을 섞어서 확장하는 기법입니다. 함수를 조립해서 새로운 함수를 만든다는 개념과 일맥상통합니다. 인자로 받은 객체를 문자열 표현으로 반환하는 polyToString이라는 함수가 있다고 가정합니다. 객체의 종류를 확인하는 여러 if문을 이용해서 polyToString을 구현할 수 있습니다. 그러나 더 다양한 객체를 처리하려면 polyToString 바디에 if문을 새로 추가해야 하는 데, 이는 바람직한 접근 방식이 아닙니다. 이번에는 dispatch…","html":"<h2 id=\"믹스인\" style=\"position:relative;\"><a href=\"#%EB%AF%B9%EC%8A%A4%EC%9D%B8\" aria-label=\"믹스인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>믹스인</h2>\n<ul>\n<li>믹스인은 기능에 기존 기능 또는 새로운 기능을 섞어서 확장하는 기법입니다. 함수를 조립해서 새로운 함수를 만든다는 개념과 일맥상통합니다.</li>\n<li>인자로 받은 객체를 문자열 표현으로 반환하는 polyToString이라는 함수가 있다고 가정합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">polyToString</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">obj</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">stringifyArray</span><span class=\"token punctuation\">(</span>Obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>객체의 종류를 확인하는 여러 if문을 이용해서 polyToString을 구현할 수 있습니다. 그러나 더 다양한 객체를 처리하려면 polyToString 바디에 if문을 새로 추가해야 하는 데, 이는 바람직한 접근 방식이 아닙니다.</li>\n<li>이번에는 dispatch를 이용해서 객체의 종류를 확인했습니다. 객체의 종류를 확인하는 기능을 함수로 추상화했으므로 나중에 쉽게 확장할 수 있는 가능성이 열렸습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> polyToString <span class=\"token operator\">=</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">isString</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> s <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">stringifyArray</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/or-1\">함수형 자바스크립트 | 마이클 포거스</a></li>\n</ul>","frontmatter":{"title":"9. 클래스를 이용하지 않는 프로그래밍","date":"June 30, 2020"}}},"pageContext":{"slug":"/함수형 자바스크립트 | 마이클 포거스/9.-클래스를-이용하지-않는-프로그래밍/","previous":{"fields":{"slug":"/함수형 자바스크립트 | 마이클 포거스/7.-순수성,-불변성,-변경-정책/"},"frontmatter":{"title":"7. 순수성, 불변성, 변경 정책","category":"함수형 자바스크립트 | 마이클 포거스","draft":false}},"next":{"fields":{"slug":"/함수형 자바스크립트 | 마이클 포거스/6.-재귀/"},"frontmatter":{"title":"6. 재귀","category":"함수형 자바스크립트 | 마이클 포거스","draft":false}}}}}