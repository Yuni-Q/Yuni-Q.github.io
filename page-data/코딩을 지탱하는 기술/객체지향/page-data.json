{"componentChunkName":"component---src-templates-blog-post-js","path":"/코딩을 지탱하는 기술/객체지향/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"317a5ba2-2c38-5330-967e-100754f48129","excerpt":"현실 세계의 사물을 컴퓨터에서 조작하기 위한 모델의 개념으로 생각하는 것이 객체지향의 목적입니다. Alan Kay(객체 지향 발명가, Smallback 설계자) 형/상속은 고생하고 좋지 않습니다. 객체지향은 상태를 가진 객체가 메세지를 주고 받아서 커뮤니케이션 하는 것이다.라고 설명합니다. Bjarne Stroustrup(C++ 설계자) 객체지향은 사용자 정의형과 상속을 사용한 프로그래밍입니다. Class는 사용자 정의형을 만들기 위한 도구입니다. Simula…","html":"<ul>\n<li>\n<p>현실 세계의 사물을 컴퓨터에서 조작하기 위한 모델의 개념으로 생각하는 것이 객체지향의 목적입니다.</p>\n<ul>\n<li>Alan Kay(객체 지향 발명가, Smallback 설계자)</li>\n<li>형/상속은 고생하고 좋지 않습니다.</li>\n<li>객체지향은 상태를 가진 객체가 메세지를 주고 받아서 커뮤니케이션 하는 것이다.라고 설명합니다.</li>\n<li>Bjarne Stroustrup(C++ 설계자)</li>\n<li>객체지향은 사용자 정의형과 상속을 사용한 프로그래밍입니다.</li>\n<li>Class는 사용자 정의형을 만들기 위한 도구입니다.</li>\n<li>Simula의 상속 구조가 문제 해결의 키입니다.</li>\n<li>사물은 객체(Object), 모형은 모델(Model)이라 칭합니다.</li>\n<li>모형으로 사물을 만들듯이, 모델로 객체를 만듭니다.</li>\n<li>모형 : 모양이 같은 물건을 만들기 위한 틀입니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"모형을-만드는-방법\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%ED%98%95%EC%9D%84-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"모형을 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모형을 만드는 방법</h2>\n<ol>\n<li>Class 사용(C++, java)</li>\n<li>현실 세계 사물을 Class로 분류</li>\n<li>세분화된 종류는 subclass로 정의</li>\n<li>Module 또는 Package</li>\n<li>함수를 하나로 모아두기 위한 기능</li>\n<li>Hash에 함수/변수를 정의</li>\n<li>\n<p>first-class citizen 을 사용합니다.</p>\n<ul>\n<li>변수나 데이터 구조안에 담을 수 있습니다.</li>\n<li>파라미터로 전달 할 수 있습니다.</li>\n<li>반환값(return value)으로 사용할 수 있습니다.</li>\n<li>할당에 사용된 이름과 관계없이 고유한 구별이 가능합니다.</li>\n<li>동적으로 프로퍼티 할당이 가능합니다.</li>\n</ul>\n</li>\n<li>javascript로 예를 들면 { fn: () => {}, data: 1 } 이러한 형태입니다.</li>\n<li>Closure</li>\n<li>함수 실행시의 이름 공간의 변수를 하나로 묶기 위해 사용하는 방법입니다.</li>\n<li>함수형 프로그래밍에서 사용하는 방법입니다.</li>\n<li>\n<p>Closure 라고 불리는 이유는?</p>\n<ul>\n<li>[1987 Ake Wikstrom] 자유 변수를 포함한 식을 ‘열린 식’이라고 부르고, 그 자유 변수의 바인딩을 조합함으로서 해당식을 닫고 있기 때문입니다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/undefined-5#race-condition\">코딩을 지탱하는 기술</a></li>\n</ul>","frontmatter":{"title":"객체지향","date":"July 01, 2020"}}},"pageContext":{"slug":"/코딩을 지탱하는 기술/객체지향/","previous":{"fields":{"slug":"/코딩을 지탱하는 기술/에러처리/"},"frontmatter":{"title":"에러처리","category":"코딩을 지탱하는 기술","draft":false}},"next":{"fields":{"slug":"/읽기 좋은 코드가 좋은 코드다/intro/"},"frontmatter":{"title":"Intro","category":"읽기 좋은 코드가 좋은 코드다","draft":false}}}}}