{"componentChunkName":"component---src-templates-blog-post-js","path":"/코딩을 지탱하는 기술/병행처리/","result":{"data":{"site":{"siteMetadata":{"title":"yuni-q 블로그","author":"yuni-q","siteUrl":"https://yuni-q.github.io","comment":{"disqusShortName":"yuni-q","utterances":"yuni_q"},"sponsor":{"buyMeACoffeeId":"yuniq"}}},"markdownRemark":{"id":"6d1b7338-23d6-5d9a-8f7b-7925bf6f3c3d","excerpt":"한 CPU에서 여러 개를 동시에 처리하는 방법은 사람이 눈치 챌 수 없는 만큼의 시간만큼의 짧은 시간에 복수의 처리를 변경해가며 실행합니다. 방법 협력적 멀티 테스크 타이밍이 좋은 시점에 교대합니다. 자발적인 처리 교대하는 방법입니다. 선점적 멀티 테스크 일정 시간에 교대합니다. 강제적으로 중단 시켜 다른 프로그램 시작합니다. 경합 상태(Race Condition) 이 상태를 Thread safe가 아니다 라고도 하며 발생경우는 아래와 같습니다.…","html":"<ul>\n<li>한 CPU에서 여러 개를 동시에 처리하는 방법은 사람이 눈치 챌 수 없는 만큼의 시간만큼의 짧은 시간에 복수의 처리를 변경해가며 실행합니다.</li>\n</ul>\n<h2 id=\"방법\" style=\"position:relative;\"><a href=\"#%EB%B0%A9%EB%B2%95\" aria-label=\"방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법</h2>\n<ol>\n<li>협력적 멀티 테스크</li>\n<li>타이밍이 좋은 시점에 교대합니다.</li>\n<li>자발적인 처리 교대하는 방법입니다.</li>\n<li>선점적 멀티 테스크</li>\n<li>일정 시간에 교대합니다.</li>\n<li>강제적으로 중단 시켜 다른 프로그램 시작합니다.</li>\n</ol>\n<h2 id=\"경합-상태race-condition\" style=\"position:relative;\"><a href=\"#%EA%B2%BD%ED%95%A9-%EC%83%81%ED%83%9Crace-condition\" aria-label=\"경합 상태race condition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>경합 상태(Race Condition)</h2>\n<ul>\n<li>이 상태를 Thread safe가 아니다 라고도 하며 발생경우는 아래와 같습니다.</li>\n<li>2가지 처리가 변수를 공유하고 있습니다.</li>\n<li>적어도 하나의 처리가 그 변수를 변경합니다.</li>\n<li>한쪽 처리가 한 단락 마무리 되기 전에, 다른 한쪽의 처리가 끼어들 가능성있습니다.</li>\n</ul>\n<h3 id=\"1번-해결방안\" style=\"position:relative;\"><a href=\"#1%EB%B2%88-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88\" aria-label=\"1번 해결방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1번 해결방안</h3>\n<h4 id=\"프로세스\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\" aria-label=\"프로세스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스</h4>\n<ul>\n<li>UNIX에서는 실행중인 프로그램을 이야기합니다.</li>\n<li>메모리를 공유하지 않습니다.</li>\n<li>메모리 영역을 지정해서 사용합니다.</li>\n</ul>\n<h4 id=\"스레드\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C\" aria-label=\"스레드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드</h4>\n<ul>\n<li>메모리를 공유하는 경량 프로세스입니다.</li>\n<li>UNIX 출시 10년 후 메모리를 공유하는 기능이 필요하여 만들어졌습니다.</li>\n</ul>\n<h4 id=\"액터\" style=\"position:relative;\"><a href=\"#%EC%95%A1%ED%84%B0\" aria-label=\"액터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액터</h4>\n<ul>\n<li>메모리를 공유하지 않습니다.</li>\n<li>메세지를 보내 데이터를 공유합니다.</li>\n</ul>\n<h3 id=\"2번-해결방안\" style=\"position:relative;\"><a href=\"#2%EB%B2%88-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88\" aria-label=\"2번 해결방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2번 해결방안</h3>\n<h4 id=\"immutable-const\" style=\"position:relative;\"><a href=\"#immutable-const\" aria-label=\"immutable const permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Immutable, const</h4>\n<ul>\n<li>메모리를 공유해도 변경을 하지 않으면 문제가 없습니다.</li>\n<li>getter는 있으나, setter가 없습니다.</li>\n</ul>\n<h3 id=\"3번-해결방안\" style=\"position:relative;\"><a href=\"#3%EB%B2%88-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88\" aria-label=\"3번 해결방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3번 해결방안</h3>\n<h4 id=\"코루틴\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%A3%A8%ED%8B%B4\" aria-label=\"코루틴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코루틴</h4>\n<ul>\n<li>끼어들지 않게 협력적 스레드를 만듭니다.</li>\n</ul>\n<h4 id=\"락\" style=\"position:relative;\"><a href=\"#%EB%9D%BD\" aria-label=\"락 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>락</h4>\n<ul>\n<li>지금 끼어들면 곤란해 라는 표식으로 사용중이라는 표식입니다.</li>\n<li>\n<p>[문제점] 2개의 명령이 a,b의 unlock과 lock을 교차 요청하면 무한이 상대방 락이 풀리는 것을 기대하는 Deadlock(교착상태)가 발생합니다.</p>\n<ul>\n<li>[해결방안] 트렌젝션 메모리 접근법을 착용합니다.</li>\n<li>트렌젝션 메모리는 실험적으로 해보고, 실패하면 처음부터 다시 고쳐서하고 성공하면 변경을 공유하는 기법입니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://peter-cho.gitbook.io/book/11/undefined-5#race-condition\">코딩을 지탱하는 기술</a></li>\n</ul>","frontmatter":{"title":"병행처리","date":"July 01, 2020"}}},"pageContext":{"slug":"/코딩을 지탱하는 기술/병행처리/","previous":{"fields":{"slug":"/코딩을 지탱하는 기술/문법의-역사/"},"frontmatter":{"title":"문법의 역사","category":"코딩을 지탱하는 기술","draft":false}},"next":{"fields":{"slug":"/코딩을 지탱하는 기술/에러처리/"},"frontmatter":{"title":"에러처리","category":"코딩을 지탱하는 기술","draft":false}}}}}