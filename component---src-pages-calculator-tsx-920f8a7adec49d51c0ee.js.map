{"version":3,"file":"component---src-pages-calculator-tsx-920f8a7adec49d51c0ee.js","mappings":"oIAEA,MAAMA,E,QAAmBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,+HAuJnC,UA3I8BK,KAC5B,MAAM,EAACC,EAAM,EAAEC,IAAaC,EAAAA,EAAAA,UAAS,KAC/B,EAACC,EAAM,EAAEC,IAAaF,EAAAA,EAAAA,UAAS,KAC/B,EAACG,EAAQ,EAAEC,IAAeJ,EAAAA,EAAAA,UAAS,IACnCK,GAAgBC,EAAAA,EAAAA,cACnBC,IACC,MAAMC,EAAaD,EAAEE,OAA6BD,UAC9CL,EACFD,GAAWQ,GAAWA,EAASF,IAE/BT,GAAWW,GAAWA,EAASF,GACjC,GAEF,CAACL,IAEGQ,EAAmBJ,IACvB,MAAMK,EAAQT,IACZ,MAAMU,EAAYC,OAAOhB,GACnBiB,EAAYD,OAAOb,GACzB,OAAQE,GACN,IAAK,IAAK,CACR,MAAMa,GAAUH,EAAYE,GAAWE,WAGvC,OAFAlB,EAAUiB,QACVd,EAAU,GAEZ,CACA,IAAK,IAAK,CACR,MAAMc,GAAUH,EAAYE,GAAWE,WAGvC,OAFAlB,EAAUiB,QACVd,EAAU,GAEZ,CACA,IAAK,IAAK,CACR,MAAMc,GAAUH,EAAYE,GAAWE,WAGvC,OAFAlB,EAAUiB,QACVd,EAAU,GAEZ,CACA,IAAK,IAAK,CACR,MAAMc,GAAUH,EAAYE,GAAWE,WAGvC,OAFAlB,EAAUiB,QACVd,EAAU,GAEZ,CACA,QAAS,CACP,MAAMc,GAAUH,EAAYE,GAAWE,WACvClB,EAAUiB,GACVd,EAAU,GACZ,EACF,EAGIM,EAAaD,EAAEE,OAA6BD,UAClD,IAAKV,GAAqB,MAAXA,EACb,MAAkB,MAAdU,GAAsBL,OAI1Be,MAAM,qBAHJnB,EAAU,KAOd,GAAkB,MAAdS,EAIF,OAHAT,EAAU,IACVG,EAAU,SACVE,EAAY,IAId,GAAkB,MAAdI,EAAmB,CACrB,IAAKP,EAEH,YADAiB,MAAM,gBAGRN,EAAKT,EACP,CAEIF,GACFW,EAAKJ,GAGPJ,EAAaG,EAAEE,OAA6BD,UAAU,EAExD,OACEW,EAAAA,cAAC5B,EAAgB,KACf4B,EAAAA,cAAA,WACEA,EAAAA,cAAA,SACEC,MAAO,CAAEC,MAAO,GAAIC,UAAW,UAC/BC,UAAQ,EACRC,KAAK,OACLC,MAAOtB,IAETgB,EAAAA,cAAA,SACEC,MAAO,CAAEC,MAAO,IAAKC,UAAW,SAChCC,UAAQ,EACRC,KAAK,OACLC,MAAOxB,GAAUH,KAGrBqB,EAAAA,cAAA,WACG,CAAC,EAAG,EAAG,GAAGO,KAAKC,GAEZR,EAAAA,cAAA,UAAQS,IAAKD,EAAKE,QAASxB,GACxBsB,KAIPR,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,MAEpCQ,EAAAA,cAAA,WACG,CAAC,EAAG,EAAG,GAAGO,KAAKC,GAEZR,EAAAA,cAAA,UAAQS,IAAKD,EAAKE,QAASxB,GACxBsB,KAIPR,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,MAEpCQ,EAAAA,cAAA,WACG,CAAC,EAAG,EAAG,GAAGO,KAAKC,GAEZR,EAAAA,cAAA,UAAQS,IAAKD,EAAKE,QAASxB,GACxBsB,KAIPR,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,MAEpCQ,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,KAClCQ,EAAAA,cAAA,UAAQU,QAASxB,GAAe,KAChCc,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,KAClCQ,EAAAA,cAAA,UAAQU,QAASlB,GAAiB,MAEnB,C","sources":["webpack://yuni-q-blog/./src/pages/calculator.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nconst StyledCalculator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  button {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nconst Calculator: React.VFC = () => {\n  const [numOne, setNumOne] = useState('');\n  const [numTwo, setNumTwo] = useState('');\n  const [operator, setOperator] = useState('');\n  const onClickNumber = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      const innerText = (e.target as HTMLButtonElement).innerText;\n      if (operator) {\n        setNumTwo((number) => number + innerText);\n      } else {\n        setNumOne((number) => number + innerText);\n      }\n    },\n    [operator],\n  );\n  const onClickOperator = (e) => {\n    const calc = (operator: string) => {\n      const newNumOne = Number(numOne);\n      const newNumTwo = Number(numTwo);\n      switch (operator) {\n        case '+': {\n          const result = (newNumOne + newNumTwo).toString();\n          setNumOne(result);\n          setNumTwo('');\n          return;\n        }\n        case '-': {\n          const result = (newNumOne - newNumTwo).toString();\n          setNumOne(result);\n          setNumTwo('');\n          return;\n        }\n        case 'x': {\n          const result = (newNumOne * newNumTwo).toString();\n          setNumOne(result);\n          setNumTwo('');\n          return;\n        }\n        case '/': {\n          const result = (newNumOne / newNumTwo).toString();\n          setNumOne(result);\n          setNumTwo('');\n          return;\n        }\n        default: {\n          const result = (newNumOne + newNumTwo).toString();\n          setNumOne(result);\n          setNumTwo('');\n        }\n      }\n    };\n\n    const innerText = (e.target as HTMLButtonElement).innerText;\n    if (!numOne || numOne === '-') {\n      if (innerText === '-' && !operator) {\n        setNumOne('-');\n        return;\n      }\n      alert('숫자를 먼저 입력하세요');\n      return;\n    }\n\n    if (innerText === 'C') {\n      setNumOne('');\n      setNumTwo('');\n      setOperator('');\n      return;\n    }\n\n    if (innerText === '=') {\n      if (!numTwo) {\n        alert('숫자를 먼저 입력하세요');\n        return;\n      }\n      calc(operator);\n    }\n\n    if (numTwo) {\n      calc(innerText);\n    }\n\n    setOperator((e.target as HTMLButtonElement).innerText);\n  };\n  return (\n    <StyledCalculator>\n      <div>\n        <input\n          style={{ width: 50, textAlign: 'center' }}\n          readOnly\n          type=\"text\"\n          value={operator}\n        />\n        <input\n          style={{ width: 150, textAlign: 'right' }}\n          readOnly\n          type=\"text\"\n          value={numTwo || numOne}\n        />\n      </div>\n      <div>\n        {[7, 8, 9].map((num) => {\n          return (\n            <button key={num} onClick={onClickNumber}>\n              {num}\n            </button>\n          );\n        })}\n        <button onClick={onClickOperator}>+</button>\n      </div>\n      <div>\n        {[4, 5, 6].map((num) => {\n          return (\n            <button key={num} onClick={onClickNumber}>\n              {num}\n            </button>\n          );\n        })}\n        <button onClick={onClickOperator}>-</button>\n      </div>\n      <div>\n        {[1, 2, 3].map((num) => {\n          return (\n            <button key={num} onClick={onClickNumber}>\n              {num}\n            </button>\n          );\n        })}\n        <button onClick={onClickOperator}>/</button>\n      </div>\n      <div>\n        <button onClick={onClickOperator}>C</button>\n        <button onClick={onClickNumber}>0</button>\n        <button onClick={onClickOperator}>=</button>\n        <button onClick={onClickOperator}>x</button>\n      </div>\n    </StyledCalculator>\n  );\n};\n\nexport default Calculator;\n"],"names":["StyledCalculator","styled","div","withConfig","displayName","componentId","Calculator","numOne","setNumOne","useState","numTwo","setNumTwo","operator","setOperator","onClickNumber","useCallback","e","innerText","target","number","onClickOperator","calc","newNumOne","Number","newNumTwo","result","toString","alert","React","style","width","textAlign","readOnly","type","value","map","num","key","onClick"],"sourceRoot":""}