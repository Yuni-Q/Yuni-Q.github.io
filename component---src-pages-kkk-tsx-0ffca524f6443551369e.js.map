{"version":3,"sources":["webpack:///./src/pages/kkk.tsx"],"names":["KKK","useState","end","setEnd","words","setWords","index","setIndex","text","setText","point","setPoint","seconds","setSeconds","secondsArray","setSecondsArray","date","setDate","count","setCount","requestAnimationFrameId","useRef","useEffect","clearInterval","current","requestAnimationFrame","timer","newData","Date","getTime","diffDate","Math","floor","wordsSecond","second","length","a","axios","data","getWords","reduce","prev","curr","onClick","StrictMode","onSubmit","event","preventDefault","prevSecondsArray","type","value","onChange","target"],"mappings":"8LAiIeA,UA5HQ,WAAM,MAC3B,EAAsBC,oBAAS,GAAxBC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,mBAAgB,IAAnCG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,oBAAU,GAA7BK,EAAP,KAAcC,EAAd,KACA,EAAwBN,mBAAS,IAA1BO,EAAP,KAAaC,EAAb,KACA,EAA0BR,mBAAS,GAA5BS,EAAP,KAAcC,EAAd,KACA,EAA8BV,mBAAS,GAAhCW,EAAP,KAAgBC,EAAhB,KACA,EAAwCZ,mBAAmB,IAApDa,EAAP,KAAqBC,EAArB,KACA,EAAwBd,mBAAS,GAA1Be,EAAP,KAAaC,EAAb,KACA,EAA0BhB,mBAAS,GAA5BiB,EAAP,KAAcC,EAAd,KACMC,EAA0BC,iBAAO,GA6CvC,OA3CAC,qBAAU,WACQ,IAAZV,GAA2B,IAAVF,IACnBC,GAAS,SAACD,GAAD,OAAWA,EAAQ,KAC5BH,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAiB9B,OAFAiB,cAAcH,EAAwBI,SACtCJ,EAAwBI,QAAUC,uBAdpB,SAARC,IACJ,IAAMC,GAAU,IAAIC,MAAOC,UACrBC,EAAWC,KAAKC,OAAOL,EAAUX,GAAQ,KACzCiB,EAAc7B,EAAME,GAAO4B,OAC7BD,EAAcH,GAAY,IACxBlB,IAAYqB,EAAcH,EAC5BjB,EAAWoB,EAAcH,IAEzBP,cAAcH,EAAwBI,SACtCJ,EAAwBI,QAAUC,sBAAsBC,QAMvD,kBAAMH,cAAcH,EAAwBI,YAClD,CAACZ,IAEJU,qBAAU,WAAM,MACd,GAAIlB,EAAM+B,OAAS,GAAK7B,EAAQF,EAAM+B,OAAS,EAC7C,OAAOhC,GAAO,IAEhB,UAAIC,EAAME,UAAV,OAAI,EAAc4B,SAChBrB,EAAWT,EAAME,GAAO4B,QACxBjB,GAAQ,IAAIW,MAAOC,YAEA,IAAjBzB,EAAM+B,SACM,uCAAG,8BAAAC,EAAA,sEACyBC,IACtC,mEAFa,gBACPC,EADO,EACPA,KAGRjC,EAASiC,GACT3B,EAAS2B,EAAKH,QACdpB,EAAgB,IAND,2CAAH,oDAQdwB,KAED,CAACjC,EAAOF,IACPF,EAEA,6BACE,kDACA,wCAAcQ,EAAd,SACA,6CACgB,IACbI,EAAa0B,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GAAKxB,EAFzD,SAKA,4BACEyB,QAAS,WACPxC,GAAO,GACPI,EAAS,KAHb,UAYJ,kBAAC,IAAMqC,WAAP,KACE,6BACE,0BACEC,SAAU,SAACC,GACTA,EAAMC,iBACFzC,GAAS,GAAKA,EAAQF,EAAM+B,QAC1B3B,IAASJ,EAAME,GAAOE,OACxBD,GAAS,SAACD,GAAD,OAAWA,EAAQ,KAC5BG,EAAQ,IACRM,GAAgB,SAACiC,GAAD,4BACXA,GADW,CAEd5C,EAAME,GAAO4B,OAAStB,OAExBO,GAAS,SAACD,GAAD,OAAWA,EAAQ,QAKlC,wCAAcN,GAAW,EAAzB,KACA,qCAAWF,EAAX,KACA,8BAAM,UAAAN,EAAME,UAAN,eAAcE,OAAQ,SAC5B,6BACE,2BACEyC,KAAK,OACLC,MAAO1C,EACP2C,SAAU,SAACL,GACTrC,EAAQqC,EAAMM,OAAOF,WAI3B,4BAAQD,KAAK,UAAb,OAEF,4BACEN,QAAS,WACPpC,EAAS,GACLD,EAAQ,GACVC,GAAU,KAIbD,EAAQ,EAAI,KAAO","file":"component---src-pages-kkk-tsx-0ffca524f6443551369e.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype Words = { second: number; text: string }[];\n\nconst KKK: React.VFC = () => {\n  const [end, setEnd] = useState(false);\n  const [words, setWords] = useState<Words>([]);\n  const [index, setIndex] = useState(-1);\n  const [text, setText] = useState('');\n  const [point, setPoint] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [secondsArray, setSecondsArray] = useState<number[]>([]);\n  const [date, setDate] = useState(0);\n  const [count, setCount] = useState(0);\n  const requestAnimationFrameId = useRef(0);\n\n  useEffect(() => {\n    if (seconds === 0 && point !== 0) {\n      setPoint((point) => point - 1);\n      setIndex((index) => index + 1);\n    }\n    const timer = () => {\n      const newData = new Date().getTime();\n      const diffDate = Math.floor((newData - date) / 1000);\n      const wordsSecond = words[index].second;\n      if (wordsSecond - diffDate >= 0) {\n        if (seconds !== wordsSecond - diffDate) {\n          setSeconds(wordsSecond - diffDate);\n        } else {\n          clearInterval(requestAnimationFrameId.current);\n          requestAnimationFrameId.current = requestAnimationFrame(timer);\n        }\n      }\n    };\n    clearInterval(requestAnimationFrameId.current);\n    requestAnimationFrameId.current = requestAnimationFrame(timer);\n    return () => clearInterval(requestAnimationFrameId.current);\n  }, [seconds]);\n\n  useEffect(() => {\n    if (words.length > 0 && index > words.length - 1) {\n      return setEnd(true);\n    }\n    if (words[index]?.second) {\n      setSeconds(words[index].second);\n      setDate(new Date().getTime());\n    }\n    if (words.length === 0) {\n      const getWords = async () => {\n        const { data }: { data: Words } = await axios(\n          'https://my-json-server.typicode.com/kakaopay-fe/resources/words',\n        );\n        setWords(data);\n        setPoint(data.length);\n        setSecondsArray([]);\n      };\n      getWords();\n    }\n  }, [index, words]);\n  if (end) {\n    return (\n      <div>\n        <div>Mission Complete!</div>\n        <div>당신의 점수는 {point}점입니다.</div>\n        <div>\n          단어당 평균 답변 시작은{' '}\n          {secondsArray.reduce((prev, curr) => prev + curr, 0) / count}\n          초입니다.\n        </div>\n        <button\n          onClick={() => {\n            setEnd(false);\n            setIndex(0);\n          }}\n        >\n          다시 시작\n        </button>\n      </div>\n    );\n  }\n  return (\n    <React.StrictMode>\n      <div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (index >= 0 && index < words.length) {\n              if (text === words[index].text) {\n                setIndex((index) => index + 1);\n                setText('');\n                setSecondsArray((prevSecondsArray) => [\n                  ...prevSecondsArray,\n                  words[index].second - seconds,\n                ]);\n                setCount((count) => count + 1);\n              }\n            }\n          }}\n        >\n          <div>남은 시간 : {seconds || 0}초</div>\n          <div>점수 : {point}점</div>\n          <div>{words[index]?.text || '문제 단어'}</div>\n          <div>\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(event) => {\n                setText(event.target.value);\n              }}\n            />\n          </div>\n          <button type=\"submit\">입력</button>\n        </form>\n        <button\n          onClick={() => {\n            setIndex(0);\n            if (index > 0) {\n              setIndex(-1);\n            }\n          }}\n        >\n          {index < 0 ? '시작' : '초기화'}\n        </button>\n      </div>\n    </React.StrictMode>\n  );\n};\n\nexport default KKK;\n"],"sourceRoot":""}