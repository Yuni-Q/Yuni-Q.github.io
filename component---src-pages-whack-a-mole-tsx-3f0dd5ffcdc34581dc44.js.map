{"version":3,"file":"component---src-pages-whack-a-mole-tsx-3f0dd5ffcdc34581dc44.js","mappings":"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","sources":["webpack://yuni-q-blog/./src/pages/whack-a-mole.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Row = styled.div`\n  width: 600px;\n`;\n\nconst Cell = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background: 'yellow';\n  overflow: hidden;\n`;\n\nconst Base = styled.div<{ hidden: boolean; hit: boolean }>`\n  display: block;\n  width: 200px;\n  height: 200px;\n  bottom: -200px;\n  bottom: ${({ hidden }) => hidden && 0};\n  position: absolute;\n  transition: bottom 1s;\n`;\n\nconst Gopher = styled(Base)`\n  background: url('/images/whack-a-mole/gopher.png') center center no-repeat;\n  background-size: 200px 200px;\n  ${({ hit }) =>\n    hit &&\n    css`\n      background-image: url('/images/whack-a-mole/dead_gopher.png');\n    `}\n`;\n\nconst Bomb = styled(Base)`\n  background: url('/images/whack-a-mole/bomb.png') center center no-repeat;\n  background-size: 200px 200px;\n  ${({ hit }) =>\n    hit &&\n    css`\n      background-image: url('/images/whack-a-mole/explode.png');\n    `}\n`;\nconst Hole = styled.div`\n  width: 200px;\n  height: 150px;\n  position: absolute;\n  bottom: 0;\n  background: url('/images/whack-a-mole/mole-hole.png') center center no-repeat;\n  background-size: 200px 150px;\n`;\nconst HoleFront = styled.div`\n  width: 200px;\n  height: 30px;\n  position: absolute;\n  bottom: 0;\n  background: url('/images/whack-a-mole/mole-hole-front.png') center center\n    no-repeat;\n  background-size: 200px 30px;\n`;\n\nconst WhackAMole: React.VFC = () => {\n  const [holes, setHoles] = useState<number[]>(Array(9).fill(0));\n  const start = useRef(null);\n  const [score, setScore] = useState(0);\n  const [time, setTime] = useState(0);\n  const [life, setLife] = useState(3);\n  const timeoutId = useRef(null);\n  useEffect(() => {\n    if (life < 1) {\n      start.current = null;\n      setTimeout(() => {\n        alert('게임 종료');\n      }, 1000);\n    }\n  }, [life]);\n  useEffect(() => {\n    setTime(() => {\n      const endTime = new Date().getTime();\n      const time = Math.floor((endTime - start.current) / 1000);\n      const totalTime = 60;\n      if (totalTime - time < 1) {\n        start.current = null;\n        clearInterval(timeoutId.current);\n        return 0;\n      }\n      return totalTime - time;\n    });\n  }, [holes]);\n  useEffect(() => {\n    if (!start.current) {\n      clearInterval(timeoutId.current);\n      setHoles(Array(9).fill(0));\n    }\n    if (start.current) {\n      timeoutId.current = setInterval(() => {\n        setHoles((holes) => {\n          const newHoles = [...holes];\n          const goherPercent = 0.3;\n          const bombPercent = 0.5;\n          holes.forEach((hole, idx) => {\n            const randomValue = Math.random();\n            if (hole > 0 && hole < 5) {\n              newHoles[idx] = newHoles[idx] * -1;\n            } else if (hole !== 0) {\n              newHoles[idx] = 0;\n            } else if (randomValue < goherPercent) {\n              newHoles[idx] = 1;\n            } else if (randomValue < bombPercent) {\n              newHoles[idx] = 2;\n            }\n          });\n          return newHoles;\n        });\n      }, 1000);\n      return () => {\n        clearInterval(timeoutId.current);\n      };\n    }\n  }, [start.current]);\n  return (\n    <div>\n      <div>\n        {time}초 {score}점 생명{life}\n        <button\n          onClick={() => {\n            start.current = new Date().getTime();\n            setTime(60);\n            setHoles(Array(9).fill(0));\n            setLife(3);\n            setScore(0);\n          }}\n        >\n          시작\n        </button>\n      </div>\n      <Row>\n        {holes.map((hole: number, idx) => {\n          return (\n            <Cell\n              key={idx}\n              onClick={() => {\n                setHoles((holes) => {\n                  const newHoles = [...holes];\n                  if (Math.abs(holes[idx]) === 1) {\n                    setScore((score) => score + 1);\n                    newHoles[idx] = 3;\n                  }\n                  if (Math.abs(holes[idx]) === 2) {\n                    setLife((life) => life - 1);\n                    newHoles[idx] = 4;\n                  }\n                  return newHoles;\n                });\n              }}\n            >\n              <Hole />\n              <Gopher hidden={hole === 1} hit={hole === 3 || hole === -3} />\n              <Bomb hidden={hole === 2} hit={hole === 4 || hole === -4} />\n              <HoleFront />\n            </Cell>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\nexport default WhackAMole;\n"],"names":["Row","styled","div","withConfig","displayName","componentId","Cell","Base","_ref","hidden","Gopher","_ref2","hit","css","Bomb","_ref3","Hole","HoleFront","WhackAMole","holes","setHoles","useState","Array","fill","start","useRef","score","setScore","time","setTime","life","setLife","timeoutId","useEffect","current","setTimeout","alert","endTime","Date","getTime","Math","floor","clearInterval","setInterval","newHoles","_toConsumableArray","forEach","hole","idx","randomValue","random","React","onClick","map","key","abs"],"sourceRoot":""}