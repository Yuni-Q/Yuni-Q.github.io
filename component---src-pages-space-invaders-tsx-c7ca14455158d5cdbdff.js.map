{"version":3,"sources":["webpack:///./src/pages/space-invaders.tsx"],"names":["Grid","styled","div","SpaceInvaders","ref","useRef","useEffect","grid","current","resultDisplay","document","querySelector","currentShooterIndex","direction","invadersId","goingRight","aliensRemoved","results","i","square","createElement","appendChild","squares","Array","from","querySelectorAll","alienInvaders","draw","length","includes","classList","add","addEventListener","e","remove","key","width","setInterval","leftEdge","rightEdge","contains","console","log","innerHTML","clearInterval","laserId","currentLaserIndex","setTimeout","alienRemoved","indexOf","push","toString","className"],"mappings":"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","file":"component---src-pages-space-invaders-tsx-c7ca14455158d5cdbdff.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Grid = styled.div`\n  width: 302px;\n  height: 300px;\n  border: 1px solid black;\n  display: flex;\n  flex-wrap: wrap;\n\n  > div {\n    width: 20px;\n    height: 20px;\n    &.invader {\n      background-color: purple;\n      border-radius: 10px;\n    }\n    &.shooter {\n      background-color: green;\n    }\n    &.laser {\n      background-color: orange;\n    }\n    &.boom {\n      background-color: red;\n    }\n  }\n`;\n\nconst SpaceInvaders = () => {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const grid = ref.current as HTMLDivElement;\n    const resultDisplay = document.querySelector('.results');\n    let currentShooterIndex = 202;\n    const width = 15;\n    let direction = 1;\n    let invadersId = null;\n    let goingRight = true;\n    const aliensRemoved = [];\n    let results = 0;\n\n    for (let i = 0; i < 255; i++) {\n      const square = document.createElement('div');\n      grid.appendChild(square);\n    }\n\n    const squares = Array.from(document.querySelectorAll('.grid div'));\n\n    const alienInvaders = [\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      30,\n      31,\n      32,\n      33,\n      34,\n      35,\n      36,\n      37,\n      38,\n      39,\n    ];\n\n    const draw = () => {\n      for (let i = 0; i < alienInvaders.length; i++) {\n        if (!aliensRemoved.includes(i)) {\n          squares[alienInvaders[i]].classList.add('invader');\n        }\n      }\n    };\n    draw();\n\n    const remove = () => {\n      for (let i = 0; i < alienInvaders.length; i++) {\n        squares[alienInvaders[i]].classList.remove('invader');\n      }\n    };\n\n    squares[currentShooterIndex].classList.add('shooter');\n\n    const moveShooter = (e) => {\n      squares[currentShooterIndex].classList.remove('shooter');\n      switch (e.key) {\n        case 'ArrowLeft':\n          if (currentShooterIndex % width !== 0) currentShooterIndex -= 1;\n          break;\n        case 'ArrowRight':\n          if (currentShooterIndex % width < width - 1) currentShooterIndex += 1;\n          break;\n      }\n      squares[currentShooterIndex].classList.add('shooter');\n    };\n    document.addEventListener('keydown', moveShooter);\n\n    const moveInvaders = () => {\n      const leftEdge = alienInvaders[0] % width === 0;\n      const rightEdge =\n        alienInvaders[alienInvaders.length - 1] % width === width - 1;\n      remove();\n\n      if (rightEdge && goingRight) {\n        for (let i = 0; i < alienInvaders.length; i++) {\n          alienInvaders[i] += width + 1;\n          direction = -1;\n          goingRight = false;\n        }\n      }\n\n      if (leftEdge && !goingRight) {\n        for (let i = 0; i < alienInvaders.length; i++) {\n          alienInvaders[i] += width - 1;\n          direction = 1;\n          goingRight = true;\n        }\n      }\n\n      for (let i = 0; i < alienInvaders.length; i++) {\n        alienInvaders[i] += direction;\n      }\n\n      draw();\n\n      if (squares[currentShooterIndex].classList.contains('invader')) {\n        console.log('game over');\n        resultDisplay.innerHTML = 'GAVE OVER';\n        clearInterval(invadersId);\n      }\n\n      for (let i = 0; i < alienInvaders.length; i++) {\n        if (alienInvaders[i] > squares.length) {\n          resultDisplay.innerHTML = 'GAVE OVER';\n          clearInterval(invadersId);\n        }\n      }\n\n      if (aliensRemoved.length == alienInvaders.length) {\n        resultDisplay.innerHTML = 'You Win';\n        clearInterval(invadersId);\n      }\n    };\n\n    invadersId = setInterval(moveInvaders, 300);\n\n    const shoot = (e) => {\n      let laserId;\n      let currentLaserIndex = currentShooterIndex;\n      const moveLaser = () => {\n        squares[currentLaserIndex].classList.remove('laser');\n        currentLaserIndex -= width;\n        squares[currentLaserIndex].classList.add('laser');\n\n        if (squares[currentLaserIndex].classList.contains('invader')) {\n          squares[currentLaserIndex].classList.remove('laser');\n          squares[currentLaserIndex].classList.remove('invader');\n          squares[currentLaserIndex].classList.add('boom');\n\n          setTimeout(\n            () => squares[currentLaserIndex].classList.remove('boom'),\n            300,\n          );\n          clearInterval(laserId);\n          const alienRemoved = alienInvaders.indexOf(currentLaserIndex);\n          aliensRemoved.push(alienRemoved);\n          results++;\n          resultDisplay.innerHTML = results.toString();\n        }\n      };\n      switch (e.key) {\n        case 'ArrowUp':\n          laserId = setInterval(moveLaser, 100);\n      }\n    };\n    document.addEventListener('keydown', shoot);\n  }, []);\n  return (\n    <>\n      <h1 className=\"results\"></h1>\n      <Grid className=\"grid\" ref={ref}></Grid>\n    </>\n  );\n};\n\nexport default SpaceInvaders;\n"],"sourceRoot":""}