{"version":3,"file":"component---src-pages-search-tsx-617b64557e098bff855c.js","mappings":"0MAUA,MAAMA,EAAUC,IACd,MAEM,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,aAAc,GACdC,MAJiB,MA8BnBC,EAAAA,EAAAA,YAAU,KACRC,EAAAA,IAAgB,GACf,CAACN,IAEJ,MAAM,KAAEO,GAASR,GACX,aAAES,GAAiBD,EAAKE,MACxB,MAAEL,EAAK,aAAED,GAAiBH,EAE1BU,EADmBP,GArCN,KAqCsBC,EACRD,EAAe,GAEhD,OACEQ,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAI,CAACC,MAAOC,EAAAA,GAAYC,SAAUR,EAAaQ,WAChDL,EAAAA,cAAA,SACEM,UAAU,yCACVC,KAAK,OACLC,YAAY,SACZ,aAAW,SACXC,SAzCqBC,IACzB,MAAMjB,EAAQiB,EAAMC,OAAOC,OACrB,KAAEhB,GAASR,EAGXI,GAFQI,EAAKiB,kBAAkBC,OAAS,IAEnBC,QAAQC,IACjC,MAAM,KAAEC,EAAI,YAAEC,GAAgBF,EAAKG,MAC7B,SAAEC,EAAQ,MAAEjB,EAAK,KAAEkB,EAAI,MAAEC,GAAUJ,EAEzC,OACGD,GAAQA,EAAKM,cAAcC,SAAS/B,EAAM8B,gBAC1CH,GAAYA,EAASG,cAAcC,SAAS/B,EAAM8B,gBAClDpB,GAASA,EAAMoB,cAAcC,SAAS/B,EAAM8B,gBAC5CF,GAAQA,EAAKI,KAAK,IAAIF,cAAcC,SAAS/B,EAAO,IAIzDH,EAAS,CACPG,QACAD,gBACA,IAuBAQ,EAAAA,cAAA,OAAK0B,MAAO,CAAEC,aAAc,KAC1B3B,EAAAA,cAAC4B,EAAAA,IAAG,CACFtB,UAAU,cACV,iBAAe,0BACf,eAAa,aACb,iBAAe,OACf,6BAA2B,UAGb,IAAjBP,EAAM8B,QAAgB7B,EAAAA,cAAA,WAAK,gBAC3BD,EAAM8B,OAAS,GACd7B,EAAAA,cAAC8B,EAAAA,EAAQ,CACP/B,MAAOA,EACPgC,mBAAoBhC,EAAM8B,OAC1BG,MAAOjC,EAAM8B,OACbT,SAAUa,EAAAA,GAAcC,MAGrB,EAIb,UAAgB9C,GACdY,EAAAA,cAACmC,EAAAA,YAAW,CACV1C,MAAK,aAoCL2C,OAASxC,GAASI,EAAAA,cAACb,EAAMkD,OAAAC,OAAA,CAAC1C,KAAMA,GAAUR,K","sources":["webpack://yuni-q-blog/./src/pages/search.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport { Layout } from '../layout/index';\nimport { Head } from '../components/head/index';\nimport { CATEGORY_TYPE, HOME_TITLE } from '../constants/index';\nimport { Bio } from '../components/bio/index';\nimport { Ins } from './index';\nimport { Contents } from '../components/contents/index';\nimport * as IOManager from '../utils/visible';\n\nconst Search = (props) => {\n  const emptyQuery = '';\n\n  const [state, setState] = useState({\n    filteredData: [],\n    query: emptyQuery,\n  });\n\n  const handleInputChange = (event) => {\n    const query = event.target.value;\n    const { data } = props;\n    const posts = data.allMarkdownRemark.edges || [];\n\n    const filteredData = posts.filter((post) => {\n      const { html, frontmatter } = post.node;\n      const { category, title, tags, draft } = frontmatter;\n\n      return (\n        (html && html.toLowerCase().includes(query.toLowerCase())) ||\n        (category && category.toLowerCase().includes(query.toLowerCase())) ||\n        (title && title.toLowerCase().includes(query.toLowerCase())) ||\n        (tags && tags.join('').toLowerCase().includes(query))\n      );\n    });\n\n    setState({\n      query,\n      filteredData,\n    });\n  };\n\n  useEffect(() => {\n    IOManager.init();\n  }, [state]);\n\n  const { data } = props;\n  const { siteMetadata } = data.site;\n  const { query, filteredData } = state;\n  const hasSearchResults = filteredData && query !== emptyQuery;\n  const posts = hasSearchResults ? filteredData : [];\n\n  return (\n    <Layout>\n      <Head title={HOME_TITLE} keywords={siteMetadata.keywords} />\n      <input\n        className=\"form-control form-control-sm ml-3 w-75\"\n        type=\"text\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={handleInputChange}\n      />\n      <div style={{ marginBottom: 24 }}>\n        <Ins\n          className=\"adsbygoogle\"\n          data-ad-client=\"ca-pub-2667251850399676\"\n          data-ad-slot=\"4831328462\"\n          data-ad-format=\"auto\"\n          data-full-width-responsive=\"true\"\n        ></Ins>\n      </div>\n      {posts.length === 0 && <div>검색 결과가 없습니다.</div>}\n      {posts.length > 0 && (\n        <Contents\n          posts={posts}\n          countOfInitialPost={posts.length}\n          count={posts.length}\n          category={CATEGORY_TYPE.ALL}\n        />\n      )}\n    </Layout>\n  );\n};\n\nexport default (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            keywords\n            title\n            configs {\n              countOfInitialPost\n            }\n          }\n        }\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: {\n            frontmatter: { category: { ne: null }, draft: { eq: false } }\n          }\n        ) {\n          edges {\n            node {\n              html\n              excerpt(pruneLength: 200, truncate: true)\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                category\n                tags\n                draft\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Search data={data} {...props} />}\n  />\n);\n"],"names":["Search","props","state","setState","useState","filteredData","query","useEffect","IOManager","data","siteMetadata","site","posts","React","Layout","Head","title","HOME_TITLE","keywords","className","type","placeholder","onChange","event","target","value","allMarkdownRemark","edges","filter","post","html","frontmatter","node","category","tags","draft","toLowerCase","includes","join","style","marginBottom","Ins","length","Contents","countOfInitialPost","count","CATEGORY_TYPE","ALL","StaticQuery","render","Object","assign"],"sourceRoot":""}