{"version":3,"file":"component---src-pages-2048-tsx-0ff81543081427ebcd36.js","mappings":"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","sources":["webpack://yuni-q-blog/./src/pages/2048.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  td {\n    border: 10px solid #bbada0;\n    width: 116px;\n    height: 128px;\n    font-size: 50px;\n    font-weight: bold;\n    text-align: center;\n  }\n`;\nconst Wrapper = styled.div`\n  user-select: none;\n\n  .color-2 {\n    background-color: #eee4da;\n    color: #776e65;\n  }\n  .color-4 {\n    background-color: #eee1c9;\n    color: #776e65;\n  }\n  .color-8 {\n    background-color: #f3b27a;\n    color: 'white';\n  }\n  .color-16 {\n    background-color: #f69664;\n    color: 'white';\n  }\n  .color-32 {\n    background-color: #f77c5f;\n    color: 'white';\n  }\n  .color-64 {\n    background-color: #f75f3b;\n    color: 'white';\n  }\n  .color-128 {\n    background-color: #edd073;\n    color: #776e65;\n  }\n  .color-256 {\n    background-color: #edcc62;\n    color: #776e65;\n  }\n  .color-512 {\n    background-color: #edc950;\n    color: #776e65;\n  }\n  .color-1024 {\n    background-color: #edc53f;\n    color: #776e65;\n  }\n  .color-2048 {\n    background-color: #edc22e;\n    color: #776e65;\n  }\n`;\nconst Game2048: React.VFC = () => {\n  const [data, setData] = useState<number[][]>([]);\n  const [score, setScore] = useState(0);\n  const add2 = useRef(false);\n  const isEnd = useRef(false);\n  const startCoords = useRef([0, 0]);\n  const prevData = useRef<{ data: number[][]; score: number[] }>({\n    data: [[]],\n    score: [0, 0],\n  });\n  const put2ToRandomCell = useCallback(() => {\n    const emptyCells = [];\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((cellData, cellIndex) => {\n        if (!cellData) {\n          emptyCells.push([rowIndex, cellIndex]);\n        }\n      });\n    });\n    if (!emptyCells.length) {\n      return;\n    }\n    const randomCell =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    setData((data) => {\n      const newData = [...data];\n      newData[randomCell[0]][randomCell[1]] = 2;\n      return newData;\n    });\n  }, [data]);\n  const moveLeft = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((cellData) => {\n        if (cellData) {\n          const currentRow = tempData[rowIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === cellData) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[rowIndex].push(cellData);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[rowIndex][cellIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveRight = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((_, cellIndex) => {\n        if (rowData[3 - cellIndex]) {\n          const currentRow = tempData[rowIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === rowData[3 - cellIndex]) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[rowIndex].push(rowData[3 - cellIndex]);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[rowIndex][3 - cellIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveUp = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData) => {\n      rowData.forEach((cellData, cellIndex) => {\n        if (cellData) {\n          const currentRow = tempData[cellIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === cellData) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[cellIndex].push(cellData);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[cellIndex][rowIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveDown = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((_, cellIndex) => {\n        if (data[3 - rowIndex][cellIndex]) {\n          const currentRow = tempData[cellIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === data[3 - rowIndex][cellIndex]) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[cellIndex].push(data[3 - rowIndex][cellIndex]);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[3 - cellIndex][rowIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveCells = useCallback(\n    (direction: 'up' | 'down' | 'left' | 'right') => {\n      console.log(2222);\n      if (!data?.[0]) {\n        return data;\n      }\n      let result = { newData: data, score: 0 };\n      switch (direction) {\n        case 'left':\n          result = moveLeft(data);\n          break;\n        case 'right':\n          result = moveRight(data);\n          break;\n        case 'up':\n          result = moveUp(data);\n          break;\n        case 'down':\n          result = moveDown(data);\n          break;\n        default:\n          result = { newData: data, score: 0 };\n      }\n\n      if (JSON.stringify(data) !== JSON.stringify(result.newData)) {\n        prevData.current.data = data;\n        add2.current = true;\n        setScore((score) => score + result.score);\n      }\n      setData(result.newData);\n    },\n    [data],\n  );\n\n  const checkLoose = useCallback(() => {\n    if (!data?.[0]) {\n      return false;\n    }\n    let count = 0;\n    if (JSON.stringify(data) === JSON.stringify(moveLeft(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveRight(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveUp(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveDown(data).newData)) {\n      count += 1;\n    }\n    if (count >= 4) {\n      return true;\n    }\n  }, [data]);\n\n  const startGame = useCallback(() => {\n    const newData = [\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      // [1024, 2, 4, 2],\n      // [2, 1024, 8, 4],\n      // [1024, 2, 4, 2],\n      // [2, 1024, 16, 32],\n    ];\n    setData(newData);\n    add2.current = true;\n  }, []);\n  useEffect(() => {\n    startGame();\n  }, []);\n  useEffect(() => {\n    const keyDownEvent = (event) => {\n      if (event.key === 'ArrowUp') {\n        moveCells('up');\n      }\n      if (event.key === 'ArrowDown') {\n        moveCells('down');\n      }\n      if (event.key === 'ArrowLeft') {\n        moveCells('left');\n      }\n      if (event.key === 'ArrowRight') {\n        moveCells('right');\n      }\n    };\n    const mouseDownEvent = (event) => {\n      startCoords.current = [event.clientX, event.clientY];\n    };\n    const mouseUpEvent = (event) => {\n      const endCoords = [event.clientX, event.clientY];\n      const diffX = endCoords[0] - startCoords.current[0];\n      const diffY = endCoords[1] - startCoords.current[1];\n      if (diffX < 0 && Math.abs(diffX) > Math.abs(diffY)) {\n        moveCells('left');\n      }\n\n      if (diffX > 0 && Math.abs(diffX) > Math.abs(diffY)) {\n        moveCells('right');\n      }\n\n      if (diffY > 0 && Math.abs(diffX) <= Math.abs(diffY)) {\n        moveCells('down');\n      }\n\n      if (diffY < 0 && Math.abs(diffX) <= Math.abs(diffY)) {\n        moveCells('up');\n      }\n    };\n    window.addEventListener('keydown', keyDownEvent);\n    window.addEventListener('mousedown', mouseDownEvent);\n    window.addEventListener('mouseup', mouseUpEvent);\n    return () => {\n      window.removeEventListener('keydown', keyDownEvent);\n      window.removeEventListener('mousedown', mouseDownEvent);\n      window.removeEventListener('mouseup', mouseUpEvent);\n    };\n  }, [data]);\n\n  useEffect(() => {\n    if (\n      data?.length > 3 &&\n      !data.flat().every((d) => d === 0) &&\n      checkLoose()\n    ) {\n      setTimeout(() => {\n        alert('패배했습니다...');\n      }, 500);\n    }\n    if (!isEnd.current && data.flat().includes(2048)) {\n      isEnd.current = true;\n      setTimeout(() => {\n        alert('축하합니다. 2048을 만들었습니다.');\n      }, 500);\n    }\n    if (data.length > 0 && add2.current) {\n      put2ToRandomCell();\n      add2.current = false;\n    }\n  }, [data]);\n  useEffect(() => {\n    if (score === prevData.current.score[1]) {\n      prevData.current.score = [score, score];\n    }\n    prevData.current.score.unshift(score);\n    prevData.current.score.length = 2;\n  }, [score]);\n  return (\n    <Wrapper>\n      <Table>\n        <tbody>\n          {data.map((tr, idx) => {\n            return (\n              <tr key={`${tr}-${idx}`}>\n                {tr.map((td, idx) => {\n                  return (\n                    <td className={`color-${td}`} key={`${td}-${idx}`}>\n                      {!!td && td}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      <div>\n        <span>{score}</span>\n        <button\n          onClick={(event) => {\n            event.stopPropagation();\n            setData(prevData.current.data);\n            setScore(prevData.current.score[1]);\n          }}\n        >\n          되돌리기\n        </button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Game2048;\n"],"names":["Table","styled","table","withConfig","displayName","componentId","Wrapper","div","Game2048","data","setData","useState","score","setScore","add2","useRef","isEnd","startCoords","prevData","put2ToRandomCell","useCallback","emptyCells","forEach","rowData","rowIndex","cellData","cellIndex","push","length","randomCell","Math","floor","random","newData","_toConsumableArray","moveLeft","tempData","currentRow","abs","Array","fill","_","moveRight","moveUp","moveDown","moveCells","direction","console","log","result","JSON","stringify","current","checkLoose","count","startGame","useEffect","keyDownEvent","event","key","mouseDownEvent","clientX","clientY","mouseUpEvent","endCoords","diffX","diffY","window","addEventListener","removeEventListener","flat","every","d","setTimeout","alert","includes","unshift","React","map","tr","idx","td","className","onClick","stopPropagation"],"sourceRoot":""}