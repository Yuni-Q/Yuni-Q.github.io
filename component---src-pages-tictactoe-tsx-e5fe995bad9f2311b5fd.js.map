{"version":3,"file":"component---src-pages-tictactoe-tsx-e5fe995bad9f2311b5fd.js","mappings":"+IAGA,MAAMA,E,QAAQC,QAAOC,MAAKC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAZJ,CAAY,gMA2I1B,UAxH6BK,KAC3B,MAAM,EAACC,EAAM,EAAEC,IAAaC,EAAAA,EAAAA,UAAS,KAC/B,EAACC,EAAI,EAAEC,IAAWF,EAAAA,EAAAA,UAAS,CAC/BG,MAAM,GAAGC,KAAK,MACdD,MAAM,GAAGC,KAAK,MACdD,MAAM,GAAGC,KAAK,SAEV,EAACC,EAAI,EAAEC,IAAWN,EAAAA,EAAAA,UAAS,KAC3BO,GAAUC,EAAAA,EAAAA,QAAO,MA6DvB,OA3DAC,EAAAA,EAAAA,YAAU,KACJX,IAGJG,EAAKS,SAAQ,CAACC,EAAIC,KAChBC,QAAQC,IAAI,GAAIH,EAAG,KAAOA,EAAG,GAAIA,EAAG,KAAOA,EAAG,IACxCA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAAMA,EAAG,KAAOA,EAAG,IAC7CZ,EAAUY,EAAG,IAGXV,EAAK,GAAGW,IACVX,EAAK,GAAGW,KAASX,EAAK,GAAGW,IACzBX,EAAK,GAAGW,KAASX,EAAK,GAAGW,IAEzBb,EAAUE,EAAK,GAAGW,GACpB,IAGEX,EAAK,GAAG,IACVA,EAAK,GAAG,KAAOA,EAAK,GAAG,IACvBA,EAAK,GAAG,KAAOA,EAAK,GAAG,IAEvBF,EAAUE,EAAK,GAAG,IAGhBA,EAAK,GAAG,IACVA,EAAK,GAAG,KAAOA,EAAK,GAAG,IACvBA,EAAK,GAAG,KAAOA,EAAK,GAAG,IAEvBF,EAAUE,EAAK,GAAG,IAEfA,EAAKc,OAAOC,SAAS,OACxBjB,EAAU,SACZ,GACC,CAACE,KAEJQ,EAAAA,EAAAA,YAAU,KACR,GAAa,MAATJ,GAAgBJ,EAAKc,OAAOC,SAAS,MAAO,CAC9C,MAAMC,EAAWA,KACf,IAAIC,EAAU,EACVC,EAAU,EACd,GACED,EAAUE,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1BH,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,gBACnBrB,EAAKiB,GAASC,IAEvBjB,GAASD,IACP,MAAMsB,GAAOC,EAAAA,EAAAA,GAAOvB,GAEpB,OADAsB,EAAQL,GAASC,GAAWd,EACrBkB,CAAO,IAEhBjB,EAAQ,IAAI,EAEdC,EAAQkB,QAAUC,WAAWT,EAAU,IACzC,IACC,CAACZ,KACJI,EAAAA,EAAAA,YAAU,KACRkB,aAAapB,EAAQkB,QAAQ,GAC5B,CAAC3B,EAAQS,IAEVqB,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,UAGVN,EAAAA,cAACrC,EAAK,CACJ4C,QAAUC,IACR,GAAItC,GAAmB,MAATO,EACZ,OAEF,MAAMgC,EAASD,EAAMC,OACfnB,EAAUmB,EAAOC,QAAQ3B,GACzBQ,EAAUkB,EAAOC,QAAQC,GAE1BrB,GAAYC,IAAWlB,EAAKiB,GAASC,KAG1CjB,GAASD,IACP,MAAMsB,GAAOC,EAAAA,EAAAA,GAAOvB,GAEpB,OADAsB,EAAQL,GAASC,GAAWd,EACrBkB,CAAO,IAEhBjB,EAAQ,KAAI,GAGdsB,EAAAA,cAAA,aACG3B,EAAKuC,KAAI,CAAC7B,EAAIO,IAEXU,EAAAA,cAAA,MAAIa,IAAKvB,GACNP,EAAG6B,KAAI,CAACD,EAAIpB,IAETS,EAAAA,cAAA,MAAI,UAASV,EAAS,UAASC,EAASsB,IAAKtB,GAC1CoB,UASjBX,EAAAA,cAAA,WAAM9B,GAAU,OAAOA,KACnB,C","sources":["webpack://yuni-q-blog/./src/pages/tictactoe.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  tbody {\n    text-align: center;\n  }\n  tr {\n    width: 120px;\n  }\n  td {\n    border: 1px solid black;\n    width: 40px;\n    height: 40px;\n    font-size: 24px;\n    text-align: center;\n    display: inline-block;\n    padding: 5px 0 0;\n  }\n`;\n\nconst Tictactoe: React.VFC = () => {\n  const [winner, setWinner] = useState('');\n  const [data, setData] = useState([\n    Array(3).fill(null),\n    Array(3).fill(null),\n    Array(3).fill(null),\n  ]);\n  const [turn, setTurn] = useState('O');\n  const timerId = useRef(null);\n\n  useEffect(() => {\n    if (winner) {\n      return;\n    }\n    data.forEach((tr, idx) => {\n      console.log(11, tr[0] === tr[1], tr[1] === tr[2]);\n      if (!!tr[0] && tr[0] === tr[1] && tr[1] === tr[2]) {\n        setWinner(tr[0]);\n      }\n      if (\n        !!data[0][idx] &&\n        data[0][idx] === data[1][idx] &&\n        data[1][idx] === data[2][idx]\n      ) {\n        setWinner(data[0][idx]);\n      }\n    });\n    if (\n      !!data[0][0] &&\n      data[0][0] === data[1][1] &&\n      data[1][1] === data[2][2]\n    ) {\n      setWinner(data[0][0]);\n    }\n    if (\n      !!data[0][2] &&\n      data[0][2] === data[1][1] &&\n      data[1][1] === data[2][0]\n    ) {\n      setWinner(data[0][2]);\n    }\n    if (!data.flat().includes(null)) {\n      setWinner('없습니다.');\n    }\n  }, [data]);\n  // 인공지능을 위한 로직\n  useEffect(() => {\n    if (turn === 'X' && data.flat().includes(null)) {\n      const computer = () => {\n        let trIndex = 0;\n        let tdIndex = 0;\n        do {\n          trIndex = Math.floor(Math.random() * 3);\n          tdIndex = Math.floor(Math.random() * 3);\n        } while (data[trIndex][tdIndex]);\n\n        setData((data) => {\n          const newData = [...data];\n          newData[trIndex][tdIndex] = turn;\n          return newData;\n        });\n        setTurn('O');\n      };\n      timerId.current = setTimeout(computer, 1000);\n    }\n  }, [turn]);\n  useEffect(() => {\n    clearTimeout(timerId.current);\n  }, [winner, timerId]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        height: '100vh',\n      }}\n    >\n      <Table\n        onClick={(event) => {\n          if (winner || turn === 'X') {\n            return;\n          }\n          const target = event.target as HTMLTableDataCellElement;\n          const trIndex = target.dataset.tr;\n          const tdIndex = target.dataset.td;\n\n          if (!trIndex || !tdIndex || data[trIndex][tdIndex]) {\n            return;\n          }\n          setData((data) => {\n            const newData = [...data];\n            newData[trIndex][tdIndex] = turn;\n            return newData;\n          });\n          setTurn('X');\n        }}\n      >\n        <tbody>\n          {data.map((tr, trIndex) => {\n            return (\n              <tr key={trIndex}>\n                {tr.map((td, tdIndex) => {\n                  return (\n                    <td data-tr={trIndex} data-td={tdIndex} key={tdIndex}>\n                      {td}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div>{winner && `승리자 ${winner}`}</div>\n    </div>\n  );\n};\n\nexport default Tictactoe;\n"],"names":["Table","styled","table","withConfig","displayName","componentId","Tictactoe","winner","setWinner","useState","data","setData","Array","fill","turn","setTurn","timerId","useRef","useEffect","forEach","tr","idx","console","log","flat","includes","computer","trIndex","tdIndex","Math","floor","random","newData","_toConsumableArray","current","setTimeout","clearTimeout","React","style","display","justifyContent","alignItems","flexDirection","height","onClick","event","target","dataset","td","map","key"],"sourceRoot":""}