{"version":3,"file":"component---src-pages-text-rpg-tsx-7d84d16cef305763c598.js","mappings":"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","sources":["webpack://yuni-q-blog/./src/pages/text-rpg.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\ninterface Hero {\n  name: string;\n  level: number;\n  maxHp: number;\n  hp: number;\n  xp: number;\n  att: number;\n}\nconst initHero = {\n  name: '',\n  level: 1,\n  maxHp: 100,\n  hp: 100,\n  xp: 0,\n  att: 10,\n};\n\ninterface Monster {\n  name: string;\n  hp: number;\n  maxHp: number;\n  att: number;\n  xp: number;\n}\n\nconst monsterList = [\n  {\n    name: '슬라임',\n    hp: 25,\n    maxHp: 25,\n    att: 10,\n    xp: 10,\n  },\n  {\n    name: '스켈레톤',\n    hp: 50,\n    maxHp: 50,\n    att: 15,\n    xp: 20,\n  },\n  {\n    name: '마왕',\n    hp: 150,\n    maxHp: 150,\n    att: 30,\n    xp: 50,\n  },\n];\n\nconst TextRpg: React.VFC = () => {\n  const [isBattle, setIsBattle] = useState(false);\n  const [message, setMessage] = useState('');\n  const [hero, setHero] = useState<Hero>(null);\n  const [monster, setMonster] = useState<Monster>(null);\n  const attack = useCallback(() => {\n    setMonster((monster) => ({ ...monster, hp: monster.hp - hero.att }));\n    setHero((hero) => ({ ...hero, hp: hero.hp - monster.att }));\n    setMessage(\n      `${hero.att}의 데미지를 주고, ${monster.att}의 데미지를 받았습니다.`,\n    );\n  }, [hero, monster]);\n  const heal = useCallback(() => {\n    setHero((hero) => ({\n      ...hero,\n      hp: Math.min(hero.maxHp, hero.hp + 20) - monster.att,\n    }));\n  }, [hero, monster]);\n\n  useEffect(() => {\n    if (hero && hero.hp <= 0) {\n      setMessage(`${hero.level} 레벨에서 전사. 새 주인공을 생성하세요 !`);\n      setHero(null);\n      setMonster(null);\n      setIsBattle(false);\n      return;\n    }\n    if (hero && monster && monster.hp <= 0) {\n      setHero((hero) => ({ ...hero, xp: hero.xp + monster.xp }));\n      setMonster(null);\n      setIsBattle(false);\n      return;\n    }\n    if (hero && hero.xp >= hero.level * 15) {\n      setHero((hero) => {\n        const maxHp = hero.maxHp + 5;\n        return {\n          ...hero,\n          xp: hero.xp - hero.level * 15,\n          level: hero.level + 1,\n          maxHp: maxHp,\n          hp: maxHp,\n          att: hero.att + 5,\n        };\n      });\n      setMessage(`레벨업! 레벨 ${hero.level + 1}`);\n    }\n  }, [hero, monster]);\n  if (!hero?.name) {\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!e.target[0].value) {\n            return alert('이름을 입력해주세요.');\n          }\n          setHero({ ...initHero, name: e.target[0].value });\n        }}\n      >\n        <input type=\"text\" placeholder=\"주인공 이름을 입력하세요!\" />\n        <button type=\"submit\">시작</button>\n        <div>{message}</div>\n      </form>\n    );\n  }\n  return (\n    <div>\n      <div>\n        <button>이름 : {hero.name}</button>\n        <button>레벨 : {hero.level}</button>\n        <button>\n          체력 : {hero.hp}/{hero.maxHp}\n        </button>\n        <button>공격력 :{hero.att}</button>\n        <button>\n          경험치 : {hero.xp}/{hero.level * 15}\n        </button>\n      </div>\n      {!isBattle && (\n        <div>\n          <div>menu</div>\n          <button\n            onClick={() => {\n              const newMonster =\n                monsterList[Math.floor(Math.random() * monsterList.length)];\n              setMonster({\n                ...newMonster,\n              });\n              setIsBattle(true);\n              setMessage(`몬스터와 마주쳤다. ${newMonster.name}인 것 같다!`);\n            }}\n          >\n            1. 모험\n          </button>\n          <button\n            onClick={() => {\n              setHero((hero) => ({\n                ...hero,\n                hp: hero.maxHp,\n              }));\n            }}\n          >\n            2. 휴식\n          </button>\n          <button\n            onClick={() => {\n              setMessage(\n                `${hero.level} 레벨에서 종료. 새 주인공을 생성하세요 !`,\n              );\n              setHero(null);\n            }}\n          >\n            3. 종료\n          </button>\n        </div>\n      )}\n      {isBattle && (\n        <div>\n          <div>battle</div>\n          <button\n            onClick={() => {\n              attack();\n            }}\n          >\n            1. 공격\n          </button>\n          <button\n            onClick={() => {\n              heal();\n            }}\n          >\n            2. 회복\n          </button>\n          <button\n            onClick={() => {\n              setIsBattle(false);\n              setMonster(null);\n              setMessage(`${monster.name}으로부터 도망쳤습니다.`);\n            }}\n          >\n            3. 도망\n          </button>\n        </div>\n      )}\n      <div>{message}</div>\n      {monster && (\n        <div>\n          <button>이름: {monster.name}</button>\n          <button>\n            체력 : {monster.hp}/{monster.maxHp}\n          </button>\n          <button>공격 :{monster.att}</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextRpg;\n"],"names":["initHero","name","level","maxHp","hp","xp","att","monsterList","TextRpg","isBattle","setIsBattle","useState","message","setMessage","hero","setHero","monster","setMonster","attack","useCallback","heal","Math","min","useEffect","React","onClick","newMonster","floor","random","length","onSubmit","e","preventDefault","target","value","alert","type","placeholder"],"sourceRoot":""}