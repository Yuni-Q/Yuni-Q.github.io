{"version":3,"file":"component---src-pages-kkk-tsx-b0a1aec4f2d813ee23c6.js","mappings":"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","sources":["webpack://yuni-q-blog/./src/pages/kkk.tsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype Words = { second: number; text: string }[];\n\nconst KKK: React.FC = () => {\n  const [end, setEnd] = useState(false);\n  const [words, setWords] = useState<Words>([]);\n  const [index, setIndex] = useState(-1);\n  const [text, setText] = useState('');\n  const [point, setPoint] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [secondsArray, setSecondsArray] = useState<number[]>([]);\n  const [date, setDate] = useState(0);\n  const [count, setCount] = useState(0);\n  const requestAnimationFrameId = useRef(0);\n\n  useEffect(() => {\n    if (seconds === 0 && point !== 0) {\n      setPoint((point) => point - 1);\n      setIndex((index) => index + 1);\n    }\n    const timer = () => {\n      const newData = new Date().getTime();\n      const diffDate = Math.floor((newData - date) / 1000);\n      console.log(words[index]);\n      const wordsSecond = words[index]?.second;\n      if (wordsSecond - diffDate >= 0) {\n        if (seconds !== wordsSecond - diffDate) {\n          setSeconds(wordsSecond - diffDate);\n        } else {\n          clearInterval(requestAnimationFrameId.current);\n          requestAnimationFrameId.current = requestAnimationFrame(timer);\n        }\n      }\n    };\n    clearInterval(requestAnimationFrameId.current);\n    requestAnimationFrameId.current = requestAnimationFrame(timer);\n    return () => clearInterval(requestAnimationFrameId.current);\n  }, [seconds]);\n\n  useEffect(() => {\n    if (words.length > 0 && index > words.length - 1) {\n      return setEnd(true);\n    }\n    if (words[index]?.second) {\n      setSeconds(words[index].second);\n      setDate(new Date().getTime());\n    }\n    if (words.length === 0) {\n      const getWords = async () => {\n        const { data }: { data: Words } = await axios(\n          'https://my-json-server.typicode.com/kakaopay-fe/resources/words',\n        );\n        setWords(data);\n        setPoint(data.length);\n        setSecondsArray([]);\n      };\n      getWords();\n    }\n  }, [index, words]);\n  if (end) {\n    return (\n      <div>\n        <div>Mission Complete!</div>\n        <div>당신의 점수는 {point}점입니다.</div>\n        <div>\n          단어당 평균 답변 시작은{' '}\n          {secondsArray.reduce((prev, curr) => prev + curr, 0) / count}\n          초입니다.\n        </div>\n        <button\n          onClick={() => {\n            setEnd(false);\n            setIndex(0);\n          }}\n        >\n          다시 시작\n        </button>\n      </div>\n    );\n  }\n  return (\n    <React.StrictMode>\n      <div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (index >= 0 && index < words.length) {\n              if (text === words[index].text) {\n                setIndex((index) => index + 1);\n                setText('');\n                setSecondsArray((prevSecondsArray) => [\n                  ...prevSecondsArray,\n                  words[index].second - seconds,\n                ]);\n                setCount((count) => count + 1);\n              }\n            }\n          }}\n        >\n          <div>남은 시간 : {seconds || 0}초</div>\n          <div>점수 : {point}점</div>\n          <div>{words[index]?.text || '문제 단어'}</div>\n          <div>\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(event) => {\n                setText(event.target.value);\n              }}\n            />\n          </div>\n          <button type=\"submit\">입력</button>\n        </form>\n        <button\n          onClick={() => {\n            setIndex(0);\n            if (index > 0) {\n              setIndex(-1);\n            }\n          }}\n        >\n          {index < 0 ? '시작' : '초기화'}\n        </button>\n      </div>\n    </React.StrictMode>\n  );\n};\n\nexport default KKK;\n"],"names":["KKK","_words$index3","end","setEnd","useState","words","setWords","index","setIndex","text","setText","point","setPoint","seconds","setSeconds","secondsArray","setSecondsArray","date","setDate","count","setCount","requestAnimationFrameId","useRef","useEffect","timer","_words$index","newData","Date","getTime","diffDate","Math","floor","console","log","wordsSecond","second","clearInterval","current","requestAnimationFrame","_words$index2","length","async","data","axios","getWords","React","reduce","prev","curr","onClick","onSubmit","event","preventDefault","prevSecondsArray","concat","_toConsumableArray","type","value","onChange","target"],"sourceRoot":""}