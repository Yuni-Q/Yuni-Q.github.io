{"version":3,"sources":["webpack:///./src/pages/particle-system.tsx"],"names":["WIDTH","window","innerWidth","HEIGHT","innerHeight","Particle","ctx","this","x","Math","random","y","vx","sinRandom","vy","r","abs","dt","color","randomColor","draw","fillStyle","beginPath","arc","PI","closePath","fill","update","bound","floor","App","particles","pause","addParticles","n","i","particle","push","clearParticles","loop","clearRect","forEach","interact","loopDelegate","bind","requestAnimationFrame","other","dx","dy","d","sqrt","R","dR","ux","uy","ParticleSystem","useEffect","canvas","document","createElement","getContext","body","appendChild","width","height","app"],"mappings":"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","file":"component---src-pages-particle-system-tsx-0f7787fc2d003a400987.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst WIDTH = window.innerWidth;\nconst HEIGHT = window.innerHeight;\n\nclass Particle {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  r: number;\n  dt: number;\n  color: string;\n  ctx: CanvasRenderingContext2D\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.x = Math.random() * WIDTH;\n    this.y = Math.random() * HEIGHT;\n    this.vx = this.sinRandom() * 30;\n    this.vy = this.sinRandom() * 30;\n    this.r = Math.abs(this.sinRandom() * 20) + 5;\n    this.dt = 0.1;\n    this.color = this.randomColor();\n    this.ctx = ctx;\n  }\n\n  sinRandom() {\n    return Math.random() * 2 - 1;\n  }\n\n  draw() {\n    this.ctx.fillStyle = this.color;\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2, false);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n\n  update() {\n    this.x += this.vx * this.dt;\n    this.y += this.vy * this.dt;\n    this.bound();\n  }\n\n  bound() {\n    if (this.x < 0) {\n      this.x = 0;\n      this.vx *= -1;\n    }\n    if (this.y < 0) {\n      this.y = 0;\n      this.vy *= -1;\n    }\n    if (this.x > WIDTH) {\n      this.x = WIDTH;\n      this.vx *= -1;\n    }\n    if (this.y > HEIGHT) {\n      this.y = HEIGHT;\n      this.vy *= -1;\n    }\n  }\n\n  randomColor() {\n    return `hsl(${Math.floor(Math.random() * 360)}, 100%, 50%)`;\n    return `hsl(${Math.floor(Math.random() * 100 + 100)}, 100%, 50%)`;\n    return `hsla(${Math.floor(Math.random() * 100 + 100)}, 100%, 50%, 0.02)`;\n  }\n}\n\nclass App {\n  particles: Particle[] = [];\n  pause: boolean;\n  ctx: CanvasRenderingContext2D;\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.particles = [];\n    this.pause = false;\n    this.ctx = ctx;\n  }\n\n  addParticles(n) {\n    for (let i = 0; i < n; i++) {\n      const particle = new Particle(this.ctx);\n      this.particles.push(particle);\n    }\n  }\n\n  clearParticles() {\n    this.particles = [];\n  }\n\n  loop() {\n    if (!!this.pause) {\n      return;\n    }\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    this.particles.forEach(particle => {\n      this.interact(particle);\n      particle.update();\n      particle.draw();\n    });\n    this.loopDelegate();\n  }\n\n  loopDelegate() {\n    const loop = this.loop.bind(this);\n    requestAnimationFrame(loop);\n  }\n\n  interact(other) {\n    this.particles.forEach(particle => {\n      if (other !== particle) {\n        const dx = other.x - particle.x;\n        const dy = other.y - particle.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        if (d > 0) {\n          const R = other.r + particle.r;\n          if (d < R) {\n            const dR = R - d;\n            const ux = dx / d;\n            const uy = dy / d;\n            other.vx += ux * dR * 0.1;\n            other.vy += uy * dR * 0.1;\n            particle.vx += -ux * dR * 0.1;\n            particle.vy += -uy * dR * 0.1;\n          }\n        }\n      }\n    });\n  }\n}\n\nconst ParticleSystem = () => {\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    document.body.appendChild(canvas);\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    ctx.clearRect(0, 0, 400, 400);\n\n    const app = new App(ctx);\n    app.addParticles(100);\n    app.loopDelegate();\n  }, [])\n\n  return (\n    <></>\n  );\n};\n\nexport default ParticleSystem;"],"sourceRoot":""}