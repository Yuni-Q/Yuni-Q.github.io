{"version":3,"sources":["webpack:///./src/pages/rsp.tsx"],"names":["rspX","scissors","rock","paper","scoreTable","RspBackgroundImage","styled","div","position","Rsp","intervalId","useRef","timeoutId","useState","setPosition","score","setScore","disabled","setDisabled","outCount","setOutcount","onClick","useCallback","event","clearInterval","current","setTimeout","interval","computerChoice","Object","entries","find","arr","myChoice","target","id","diff","includes","console","log","useEffect","clearTimeout","setInterval","style","display","justifyContent","alignItems","flexDirection","height","marginTop"],"mappings":"8FAAA,4CAGMA,EAAO,CACXC,SAAU,GACVC,MAAO,IACPC,OAAQ,KAGJC,EAAa,CACjBF,KAAM,EACND,SAAU,EACVE,OAAQ,GAGJE,EAAqBC,IAAOC,IAAV,0EAAGD,CAAH,kFAElB,gBAAGE,EAAH,EAAGA,SAAH,OAAmBA,GAAsBR,EAAKC,YAsGrCQ,UAhGQ,WACrB,IAAMC,EAAaC,iBAAO,MACpBC,EAAYD,iBAAO,MAFE,EAGKE,mBAASb,EAAKC,UAAvCO,EAHoB,KAGVM,EAHU,OAIDD,mBAAS,GAA5BE,EAJoB,KAIbC,EAJa,OAKKH,oBAAS,GAAlCI,EALoB,KAKVC,EALU,OAMKL,mBAAS,GAAlCM,EANoB,KAMVC,EANU,KAQrBC,EAAUC,uBACd,SAACC,GACCL,GAAY,GACZM,cAAcd,EAAWe,SAEzBb,EAAUa,QAAUC,YAAW,WAC7BF,cAAcd,EAAWe,SACzBP,GAAY,GACZS,MACC,KAEH,IAAMC,EAAiBC,OAAOC,QAAQ9B,GAAM+B,MAAK,SAACC,GAChD,OAAOA,EAAI,KAAOxB,KACjB,GACGyB,EAAYV,EAAMW,OAA6BC,GAI/CC,EADUhC,EAAW6B,GADL7B,EAAWwB,GAGjC,MAAI,CAAC,GAAI,GAAGS,SAASD,IACnBE,QAAQC,IAAI,WACZvB,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAG1B,EAAE,EAAG,GAAGsB,SAASD,IACnBE,QAAQC,IAAI,MACZvB,GAAS,SAACD,GAAD,OAAWA,EAAQ,UAC5BK,GAAY,SAACD,GAAD,OAAcA,EAAW,WAGvCmB,QAAQC,IAAI,SAEd,CAAC/B,IAEHgC,qBAAU,WACJrB,EAAW,IACbD,GAAY,GACZM,cAAcd,EAAWe,SACzBgB,aAAa7B,EAAUa,YAExB,CAACN,IACJ,IAAMQ,EAAWL,uBAAY,WAC3BZ,EAAWe,QAAUiB,aAAY,WAC/B5B,GAAY,SAACN,GACX,OAAIA,IAAaR,EAAKC,SACbD,EAAKE,KAEVM,IAAaR,EAAKE,KACbF,EAAKG,MAEVK,IAAaR,EAAKG,MACbH,EAAKC,cADd,OAID,MACF,IAIH,OAHAuC,qBAAU,WACRb,MACC,IAED,yBACEgB,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,UAGV,kBAAC3C,EAAD,CAAoBG,SAAUA,IAC9B,yBAAKmC,MAAO,CAAEM,UAAW,KACvB,4BAAQd,GAAG,WAAWlB,SAAUA,EAAUI,QAASA,GAAnD,MAGA,4BAAQc,GAAG,OAAOlB,SAAUA,EAAUI,QAASA,GAA/C,MAGA,4BAAQc,GAAG,QAAQlB,SAAUA,EAAUI,QAASA,GAAhD,MAIF,yBAAKsB,MAAO,CAAEM,UAAW,IACtB9B,EAAW,GAAK,SADnB,IAC8BJ,EAD9B","file":"component---src-pages-rsp-tsx-c0040c975b297235d4a4.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst rspX = {\n  scissors: 10,\n  rock: -220,\n  paper: -430,\n};\n\nconst scoreTable = {\n  rock: 0,\n  scissors: 1,\n  paper: -1,\n};\n\nconst RspBackgroundImage = styled.div<{ position?: number }>`\n  background: url(/rsp.png)\n    ${({ position }) => (position ? position : rspX.scissors)}px 0 / cover\n    no-repeat;\n  width: 180px;\n  height: 200px;\n`;\n\nconst Rsp: React.VFC = () => {\n  const intervalId = useRef(null);\n  const timeoutId = useRef(null);\n  const [position, setPosition] = useState(rspX.scissors);\n  const [score, setScore] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const [outCount, setOutcount] = useState(0);\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setDisabled(true);\n      clearInterval(intervalId.current);\n\n      timeoutId.current = setTimeout(() => {\n        clearInterval(intervalId.current);\n        setDisabled(false);\n        interval();\n      }, 1000);\n\n      const computerChoice = Object.entries(rspX).find((arr) => {\n        return arr[1] === position;\n      })[0];\n      const myChoice = (event.target as HTMLButtonElement).id;\n\n      const computerScore = scoreTable[computerChoice];\n      const myScore = scoreTable[myChoice];\n      const diff = myScore - computerScore;\n      if ([2, -1].includes(diff)) {\n        console.log('승리');\n        setScore((score) => score + 1);\n        return;\n      }\n      if ([-2, 1].includes(diff)) {\n        console.log('패배');\n        setScore((score) => score - 1);\n        setOutcount((outCount) => outCount + 1);\n        return;\n      }\n      console.log('무승부');\n    },\n    [position],\n  );\n  useEffect(() => {\n    if (outCount > 2) {\n      setDisabled(true);\n      clearInterval(intervalId.current);\n      clearTimeout(timeoutId.current);\n    }\n  }, [outCount]);\n  const interval = useCallback(() => {\n    intervalId.current = setInterval(() => {\n      setPosition((position) => {\n        if (position === rspX.scissors) {\n          return rspX.rock;\n        }\n        if (position === rspX.rock) {\n          return rspX.paper;\n        }\n        if (position === rspX.paper) {\n          return rspX.scissors;\n        }\n      });\n    }, 50);\n  }, []);\n  useEffect(() => {\n    interval();\n  }, []);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        height: '100vh',\n      }}\n    >\n      <RspBackgroundImage position={position} />\n      <div style={{ marginTop: 24 }}>\n        <button id=\"scissors\" disabled={disabled} onClick={onClick}>\n          가위\n        </button>\n        <button id=\"rock\" disabled={disabled} onClick={onClick}>\n          바위\n        </button>\n        <button id=\"paper\" disabled={disabled} onClick={onClick}>\n          보\n        </button>\n      </div>\n      <div style={{ marginTop: 8 }}>\n        {outCount > 2 && '최종 점수는'} {score}점\n      </div>\n    </div>\n  );\n};\n\nexport default Rsp;\n"],"sourceRoot":""}