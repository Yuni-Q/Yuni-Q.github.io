{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","Object","defineProperty","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","contains","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","FORGE_DOMAIN_RE","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","protocol","query","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","random","successor","keyAsInt","i_1","source","sourcePlusOne","predecessor","repeat","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","map","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","TransactionStatus","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","p","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","cached","Promise","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","startTransaction","transactionUpdate","applyLocally","watchRef","Reference","transaction","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","parentPath","getRoot","databaseProp","database","promiseComplete","setPriority","thennablePushRef","pushRef","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-691b483679214868268a.js","sourcesContent":["import \"core-js/modules/es.array.reduce.js\";\nimport firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\n\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} varArgs\r\n */\n\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n      }\n    } else {\n      assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    return this.repo.getValue(this);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n    var newParams = this.queryParams_.startAfter(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' + 'or equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n    var newParams = this.queryParams_.endBefore(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === Change.CHILD_ADDED || type === Change.CHILD_CHANGED || type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.delete(childKey);\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey === '.priority') {\n          assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} varArgs\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    var pathString = query.path.toString();\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = path.getFront();\n\n    while (next !== null) {\n      var childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * A connection to a single data repository.\r\n */\n\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.app = app;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  Repo.prototype.start = function () {\n    var _this = this;\n\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = this.app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    }); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  };\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n  /**\r\n   * The purpose of `getValue` is to return the latest known value\r\n   * satisfying `query`.\r\n   *\r\n   * This method will first check for in-memory cached values\r\n   * belonging to active listeners. If they are found, such values\r\n   * are considered to be the most up-to-date.\r\n   *\r\n   * If the client is not connected, this method will try to\r\n   * establish a connection and request the value for `query`. If\r\n   * the client is not able to retrieve the query result, it reports\r\n   * an error.\r\n   *\r\n   * @param query - The query to surface a value for.\r\n   */\n\n\n  Repo.prototype.getValue = function (query) {\n    var _this = this; // Only active queries are cached. There is no persisted cache.\n\n\n    var cached = this.serverSyncTree_.calcCompleteEventCache(query.path);\n\n    if (!cached.isEmpty()) {\n      return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\n    }\n\n    return this.server_.get(query).then(function (payload) {\n      var node = nodeFromJSON$1(payload);\n\n      var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\n\n      _this.eventQueue_.raiseEventsAtPath(query.path, events);\n\n      return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\n    }, function (err) {\n      _this.log_('get for query ' + stringify(query) + ' failed: ' + err);\n\n      return Promise.reject(new Error(err));\n    });\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Creates a new transaction, adds it to the transactions we're tracking, and\r\n   * sends it to the server if possible.\r\n   *\r\n   * @param path Path at which to do transaction.\r\n   * @param transactionUpdate Update callback.\r\n   * @param onComplete Completion callback.\r\n   * @param  applyLocally Whether or not to make intermediate results visible\r\n   */\n\n  Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n    var valueCallback = function valueCallback() {};\n\n    var watchRef = new Reference(this, path);\n    watchRef.on('value', valueCallback);\n\n    var unwatcher = function unwatcher() {\n      watchRef.off('value', valueCallback);\n    }; // Initialize transaction.\n\n\n    var transaction = {\n      path: path,\n      update: transactionUpdate,\n      onComplete: onComplete,\n      // One of TransactionStatus enums.\n      status: null,\n      // Used when combining transactions at different locations to figure out\n      // which one goes first.\n      order: LUIDGenerator(),\n      // Whether to raise local events for this transaction.\n      applyLocally: applyLocally,\n      // Count of how many times we've retried the transaction.\n      retryCount: 0,\n      // Function to call to clean up our .on() listener.\n      unwatcher: unwatcher,\n      // Stores why a transaction was aborted.\n      abortReason: null,\n      currentWriteId: null,\n      currentInputSnapshot: null,\n      currentOutputSnapshotRaw: null,\n      currentOutputSnapshotResolved: null\n    }; // Run transaction initially.\n\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n\n    if (newVal === undefined) {\n      // Abort transaction.\n      transaction.unwatcher();\n      transaction.currentOutputSnapshotRaw = null;\n      transaction.currentOutputSnapshotResolved = null;\n\n      if (transaction.onComplete) {\n        // We just set the input snapshot, so this cast should be safe\n        var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n        transaction.onComplete(null, false, snapshot);\n      }\n    } else {\n      validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n      transaction.status = TransactionStatus.RUN;\n      var queueNode = this.transactionQueueTree_.subTree(path);\n      var nodeQueue = queueNode.getValue() || [];\n      nodeQueue.push(transaction);\n      queueNode.setValue(nodeQueue); // Update visibleData and raise events\n      // Note: We intentionally raise events after updating all of our\n      // transaction state, since the user could start new transactions from the\n      // event callbacks.\n\n      var priorityForNode = void 0;\n\n      if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        priorityForNode = safeGet(newVal, '.priority');\n        assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n      } else {\n        var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n        priorityForNode = currentNode.getPriority().val();\n      }\n\n      var serverValues = this.generateServerValues();\n      var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n      var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n      transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n      transaction.currentOutputSnapshotResolved = newNode;\n      transaction.currentWriteId = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n      this.eventQueue_.raiseEventsForChangedPath(path, events);\n      this.sendReadyTransactions_();\n    }\n  };\n  /**\r\n   * @param excludeSets A specific set to exclude\r\n   */\n\n\n  Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n  };\n  /**\r\n   * Sends any already-run transactions that aren't waiting for outstanding\r\n   * transactions to complete.\r\n   *\r\n   * Externally it's called with no arguments, but it calls itself recursively\r\n   * with a particular transactionQueueTree node to recurse through the tree.\r\n   *\r\n   * @param node transactionQueueTree node to start at.\r\n   */\n\n\n  Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n\n    if (node === void 0) {\n      node = this.transactionQueueTree_;\n    } // Before recursing, make sure any completed transactions are removed.\n\n\n    if (!node) {\n      this.pruneCompletedTransactionsBelowNode_(node);\n    }\n\n    if (node.getValue() !== null) {\n      var queue = this.buildTransactionQueue_(node);\n      assert(queue.length > 0, 'Sending zero length transaction queue');\n      var allRun = queue.every(function (transaction) {\n        return transaction.status === TransactionStatus.RUN;\n      }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n      if (allRun) {\n        this.sendTransactionQueue_(node.path(), queue);\n      }\n    } else if (node.hasChildren()) {\n      node.forEachChild(function (childNode) {\n        _this.sendReadyTransactions_(childNode);\n      });\n    }\n  };\n  /**\r\n   * Given a list of run transactions, send them to the server and then handle\r\n   * the result (success or failure).\r\n   *\r\n   * @param path The location of the queue.\r\n   * @param queue Queue of transactions under the specified location.\r\n   */\n\n\n  Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this; // Mark transactions as sent and increment retry count!\n\n\n    var setsToIgnore = queue.map(function (txn) {\n      return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n\n    for (var i = 0; i < queue.length; i++) {\n      var txn = queue[i];\n      assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n      txn.status = TransactionStatus.SENT;\n      txn.retryCount++;\n      var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n      snapToSend = snapToSend.updateChild(relativePath\n      /** @type {!Node} */\n      , txn.currentOutputSnapshotRaw);\n    }\n\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path; // Send the put.\n\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n      _this.log_('transaction put response', {\n        path: pathToSend.toString(),\n        status: status\n      });\n\n      var events = [];\n\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        var callbacks = [];\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            var node = queue[i].currentOutputSnapshotResolved;\n            var ref = new Reference(_this, queue[i].path);\n            var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n          }\n\n          queue[i].unwatcher();\n        } // Now remove the completed transactions.\n\n\n        _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n        _this.sendReadyTransactions_();\n\n        _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n        for (var i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n          for (var i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        _this.rerunTransactions_(path);\n      }\n    }, latestHash);\n  };\n  /**\r\n   * Finds all transactions dependent on the data at changedPath and reruns them.\r\n   *\r\n   * Should be called any time cached data changes.\r\n   *\r\n   * Return the highest path that was affected by rerunning transactions. This\r\n   * is the path at which events need to be raised for.\r\n   *\r\n   * @param changedPath The path in mergedData that changed.\r\n   * @return The rootmost path that was affected by rerunning transactions.\r\n   */\n\n\n  Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n  };\n  /**\r\n   * Does all the work of rerunning transactions (as well as cleans up aborted\r\n   * transactions and whatnot).\r\n   *\r\n   * @param queue The queue of transactions to run.\r\n   * @param path The path the queue is for.\r\n   */\n\n\n  Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n      return; // Nothing to do!\n    } // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions or\n    // sets.\n\n\n    var callbacks = [];\n    var events = []; // Ignore all of the sets we're going to re-run.\n\n    var txnsToRerun = queue.filter(function (q) {\n      return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n      return q.currentWriteId;\n    });\n\n    for (var i = 0; i < queue.length; i++) {\n      var transaction = queue[i];\n      var relativePath = Path.relativePath(path, transaction.path);\n      var abortTransaction = false,\n          abortReason = void 0;\n      assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n      if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else if (transaction.status === TransactionStatus.RUN) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = this.generateServerValues();\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n          }\n        }\n      }\n\n      this.eventQueue_.raiseEventsForChangedPath(path, events);\n      events = [];\n\n      if (abortTransaction) {\n        // Abort.\n        queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with\n        // mergedData/visibleData (as it prunes data). So defer the unwatcher\n        // until we're done.\n\n        (function (unwatcher) {\n          setTimeout(unwatcher, Math.floor(0));\n        })(queue[i].unwatcher);\n\n        if (queue[i].onComplete) {\n          if (abortReason === 'nodata') {\n            var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n            var lastInput\n            /** @type {!Node} */\n            = queue[i].currentInputSnapshot;\n            var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n          } else {\n            callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n          }\n        }\n      }\n    } // Clean up completed transactions.\n\n\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    } // Try to send the transaction result to the server.\n\n\n    this.sendReadyTransactions_();\n  };\n  /**\r\n   * Returns the rootmost ancestor node of the specified path that has a pending\r\n   * transaction on it, or just returns the node for the given path if there are\r\n   * no pending transactions on any ancestor.\r\n   *\r\n   * @param path The location to start at.\r\n   * @return The rootmost node with a transaction.\r\n   */\n\n\n  Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front; // Start at the root and walk deeper into the tree towards path until we\n    // find a node with pending transactions.\n\n    var transactionNode = this.transactionQueueTree_;\n    front = path.getFront();\n\n    while (front !== null && transactionNode.getValue() === null) {\n      transactionNode = transactionNode.subTree(front);\n      path = path.popFront();\n      front = path.getFront();\n    }\n\n    return transactionNode;\n  };\n  /**\r\n   * Builds the queue of all transactions at or below the specified\r\n   * transactionNode.\r\n   *\r\n   * @param transactionNode\r\n   * @return The generated queue.\r\n   */\n\n\n  Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n    transactionQueue.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    return transactionQueue;\n  };\n\n  Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n\n    var nodeQueue = node.getValue();\n\n    if (nodeQueue !== null) {\n      for (var i = 0; i < nodeQueue.length; i++) {\n        queue.push(nodeQueue[i]);\n      }\n    }\n\n    node.forEachChild(function (child) {\n      _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n  };\n  /**\r\n   * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n   */\n\n\n  Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n\n    var queue = node.getValue();\n\n    if (queue) {\n      var to = 0;\n\n      for (var from = 0; from < queue.length; from++) {\n        if (queue[from].status !== TransactionStatus.COMPLETED) {\n          queue[to] = queue[from];\n          to++;\n        }\n      }\n\n      queue.length = to;\n      node.setValue(queue.length > 0 ? queue : null);\n    }\n\n    node.forEachChild(function (childNode) {\n      _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n  };\n  /**\r\n   * Aborts all transactions on ancestors or descendants of the specified path.\r\n   * Called when doing a set() or update() since we consider them incompatible\r\n   * with transactions.\r\n   *\r\n   * @param path Path for which we want to abort related transactions.\r\n   */\n\n\n  Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n  };\n  /**\r\n   * Abort transactions stored in this transaction queue node.\r\n   *\r\n   * @param node Node to abort transactions for.\r\n   */\n\n\n  Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n\n    if (queue !== null) {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more transactions\n      // or sets.\n      var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n      // abort, while the unsent ones can be immediately aborted and removed.\n\n      var events = [];\n      var lastSent = -1;\n\n      for (var i = 0; i < queue.length; i++) {\n        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n          queue[i].abortReason = 'set';\n        } else {\n          assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n          queue[i].unwatcher();\n          events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n          if (queue[i].onComplete) {\n            var snapshot = null;\n            callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n          }\n        }\n      }\n\n      if (lastSent === -1) {\n        // We're not waiting for any sent transactions.  We can clear the queue.\n        node.setValue(null);\n      } else {\n        // Remove the transactions we aborted.\n        queue.length = lastSent + 1;\n      } // Now fire the callbacks.\n\n\n      this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    }\n  };\n\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n\n  QueryParams.prototype.startAfter = function (indexValue, key) {\n    var params;\n\n    if (this.index_ === KEY_INDEX) {\n      if (typeof indexValue === 'string') {\n        indexValue = successor(indexValue);\n      }\n\n      params = this.startAt(indexValue, key);\n    } else {\n      var childKey = void 0;\n\n      if (key == null) {\n        childKey = MAX_NAME;\n      } else {\n        childKey = successor(key);\n      }\n\n      params = this.startAt(indexValue, childKey);\n    }\n\n    params.startAfterSet_ = true;\n    return params;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n\n  QueryParams.prototype.endBefore = function (indexValue, key) {\n    var childKey;\n    var params;\n\n    if (this.index_ === KEY_INDEX) {\n      if (typeof indexValue === 'string') {\n        indexValue = predecessor(indexValue);\n      }\n\n      params = this.endAt(indexValue, key);\n    } else {\n      if (key == null) {\n        childKey = MIN_NAME;\n      } else {\n        childKey = predecessor(key);\n      }\n\n      params = this.endAt(indexValue, childKey);\n    }\n\n    params.endBeforeSet_ = true;\n    return params;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * Update an existing repo in place to point to a new host/port.\r\n   */\n\n\n  RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n    /* secure= */\n    false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.key];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repoInternal_\r\n   */\n  function Database(repoInternal_) {\n    var _this = this;\n\n    this.repoInternal_ = repoInternal_;\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this.instanceStarted_ = false;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.checkDeleted_('delete');\n            RepoManager.getInstance().deleteRepo(this.repo_);\n            this.repoInternal_ = null;\n            this.rootInternal_ = null;\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }\n    };\n\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n  }\n\n  Object.defineProperty(Database.prototype, \"repo_\", {\n    get: function get() {\n      if (!this.instanceStarted_) {\n        this.repoInternal_.start();\n        this.instanceStarted_ = true;\n      }\n\n      return this.repoInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"root_\", {\n    get: function get() {\n      if (!this.rootInternal_) {\n        this.rootInternal_ = new Reference(this.repo_, Path.Empty);\n      }\n\n      return this.rootInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host the emulator host (ex: localhost)\r\n   * @param port the emulator port (ex: 8080)\r\n   */\n\n  Database.prototype.useEmulator = function (host, port) {\n    this.checkDeleted_('useEmulator');\n\n    if (this.instanceStarted_) {\n      fatal('Cannot call useEmulator() after instance has already been initialized.');\n      return;\n    } // Modify the repo to apply emulator settings\n\n\n    RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (!this.repo_.repoInfo_.isCustomHost() && repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.9.2\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}