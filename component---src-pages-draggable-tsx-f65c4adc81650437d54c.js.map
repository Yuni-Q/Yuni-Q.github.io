{"version":3,"sources":["webpack:///./src/pages/draggable.tsx"],"names":["Wrapper","styled","div","Draggable","useEffect","initialPosition","finalPosition","slides","document","querySelector","allSlides","querySelectorAll","slidesLength","length","slideWidth","offsetWidth","index","posX1","posX2","canISlide","prev","next","firstSlide","lastSlide","cloneFirstSlide","cloneNode","cloneLastSlide","dragMove","e","type","touches","clientX","style","left","offsetLeft","addEventListener","dragEnd","switchSlide","onmouseup","onmousemove","dragStart","preventDefault","appendChild","insertBefore","classList","remove","arg","arg2","add","className","src","alt","href"],"mappings":"4FAAA,gCAGMA,EAHN,UAGgBC,EAAOC,IAAV,yEAAGD,CAAH,igBA0MEE,UAvJQ,WA+GrB,OA9GAC,qBAAU,WACR,IAQIC,EACAC,EATEC,EAASC,SAASC,cAAc,WAChCC,EAAYF,SAASG,iBAAiB,UACtCC,EAAeF,EAAUG,OACzBC,EAAcJ,EAAU,GAAsBK,YAEhDC,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EAGRC,GAAY,EAEVC,EAAOZ,SAASC,cAAc,SAC9BY,EAAOb,SAASC,cAAc,SAE9Ba,EAAaZ,EAAU,GACvBa,EAAYb,EAAUA,EAAUG,OAAS,GAEzCW,EAAkBF,EAAWG,WAAU,GACvCC,EAAiBH,EAAUE,WAAU,GAErCE,EAAW,SAACC,GACD,cAAXA,EAAEC,MACJX,EAAQD,EAAQW,EAAEE,QAAQ,GAAGC,QAC7Bb,EAAQU,EAAEE,QAAQ,GAAGC,UAErBb,EAAQD,EAAQW,EAAEG,QAClBd,EAAQW,EAAEG,SAGXxB,EAA0ByB,MAAMC,KAC9B1B,EAA0B2B,WAAahB,EAD1C,MAIFX,EAAO4B,iBAAiB,YAAaR,GACrC,IAAMS,EAAU,YACd9B,EAAiBC,EAA0B2B,YACvB7B,GAAmB,IACrCgC,EAAY,OAAQ,YACX/B,EAAgBD,EAAkB,IAC3CgC,EAAY,OAAQ,YAEnB9B,EAA0ByB,MAAMC,KAAU5B,EAA3C,KAEFG,SAAS8B,UAAY,KACrB9B,SAAS+B,YAAc,MAEzBhC,EAAO4B,iBAAiB,WAAYC,GAEpC,IAAMI,EAAY,SAACZ,GACjBA,EAAEa,iBACFpC,EAAmBE,EAA0B2B,WAE/B,cAAVN,EAAEC,KACJZ,EAASW,EAAiBE,QAAQ,GAAGC,SAErCd,EAASW,EAAiBG,QAE1BvB,SAAS8B,UAAYF,EACrB5B,SAAS+B,YAAcZ,IAG3BpB,EAAO4B,iBAAiB,YAAaK,GACrCjC,EAAO4B,iBAAiB,aAAcK,GAEtCjC,EAAOmC,YAAYlB,GACnBjB,EAAOoC,aAAajB,EAAgBJ,GAiBpCf,EAAO4B,iBAAiB,iBAfL,WACjB5B,EAAOqC,UAAUC,OAAO,cACpB7B,IAAU,IACXT,EAA0ByB,MAAMC,MAC/BrB,EAAeE,EADjB,KAGAE,EAAQJ,EAAe,GAErBI,GAASJ,IACVL,EAA0ByB,MAAMC,MAAY,EAAInB,EAAjD,KACAE,EAAQ,GAEVG,GAAY,KAKd,IAAMkB,EAAc,SAACS,EAAaC,GAChCxC,EAAOqC,UAAUI,IAAI,cACjB7B,IACG4B,IACH1C,EAAmBE,EAA0B2B,YAEnC,SAARY,GACDvC,EAA0ByB,MAAMC,KAC/B5B,EAAkBS,EADpB,KAGAE,MAECT,EAA0ByB,MAAMC,KAC/B5B,EAAkBS,EADpB,KAGAE,MAGJG,GAAY,GAGdC,EAAKe,iBAAiB,SAAS,kBAAME,EAAY,WACjDhB,EAAKc,iBAAiB,SAAS,kBAAME,EAAY,cAGjD,kBAACrC,EAAD,KACE,yBAAKiD,UAAU,UACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,yBACEC,IAAI,+EACJC,IAAI,MAGR,0BAAMF,UAAU,SACd,yBACEC,IAAI,oMACJC,IAAI,MAGR,0BAAMF,UAAU,SACd,yBACEC,IAAI,uDACJC,IAAI,MAGR,0BAAMF,UAAU,SACd,yBACEC,IAAI,gFACJC,IAAI,OAIV,uBAAGC,KAAK,IAAIH,UAAU,QACpB,kCAEF,uBAAGG,KAAK,IAAIH,UAAU,QACpB","file":"component---src-pages-draggable-tsx-f65c4adc81650437d54c.js","sourcesContent":["import React, { useEffect, VFC } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n  .slider {\n    overflow: hidden;\n    position: relative;\n    width: 992px;\n    height: 768px;\n  }\n  .slides {\n    width: 10000px;\n    position: absolute;\n    top: 0;\n    left: -992px;\n    &.transition {\n      transition: all 0.3s ease-in-out;\n    }\n    cursor: pointer;\n    display: flex;\n  }\n  .slide {\n    width: 992px;\n    height: 768px;\n  }\n  .prev,\n  .next {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    color: red;\n    font-size: 4rem;\n  }\n  .prev:active,\n  .next:active {\n    color: #888;\n  }\n  .prev {\n    left: 4rem;\n  }\n  .next {\n    right: 4rem;\n  }\n`;\n\nconst Draggable: VFC = () => {\n  useEffect(() => {\n    const slides = document.querySelector('.slides');\n    const allSlides = document.querySelectorAll('.slide');\n    const slidesLength = allSlides.length;\n    const slideWidth = (allSlides[0] as HTMLDivElement).offsetWidth;\n\n    let index = 0;\n    let posX1 = 0;\n    let posX2 = 0;\n    let initialPosition;\n    let finalPosition;\n    let canISlide = true;\n\n    const prev = document.querySelector('.prev');\n    const next = document.querySelector('.next');\n\n    const firstSlide = allSlides[0];\n    const lastSlide = allSlides[allSlides.length - 1];\n\n    const cloneFirstSlide = firstSlide.cloneNode(true);\n    const cloneLastSlide = lastSlide.cloneNode(true);\n\n    const dragMove = (e) => {\n      if (e.type === 'touchmove') {\n        posX2 = posX1 - e.touches[0].clientX;\n        posX2 = e.touches[0].clientX;\n      } else {\n        posX2 = posX1 - e.clientX;\n        posX1 = e.clientX;\n      }\n\n      (slides as HTMLDivElement).style.left = `${\n        (slides as HTMLDivElement).offsetLeft - posX2\n      }px`;\n    };\n    slides.addEventListener('touchmove', dragMove);\n    const dragEnd = () => {\n      finalPosition = (slides as HTMLDivElement).offsetLeft;\n      if (finalPosition - initialPosition < -496) {\n        switchSlide('next', 'dragging');\n      } else if (finalPosition - initialPosition > 400) {\n        switchSlide('prev', 'dragging');\n      } else {\n        (slides as HTMLDivElement).style.left = `${initialPosition}px`;\n      }\n      document.onmouseup = null;\n      document.onmousemove = null;\n    };\n    slides.addEventListener('touchend', dragEnd);\n\n    const dragStart = (e: Event) => {\n      e.preventDefault();\n      initialPosition = (slides as HTMLDivElement).offsetLeft;\n\n      if (e.type == 'touchstart') {\n        posX1 = (e as TouchEvent).touches[0].clientX;\n      } else {\n        posX1 = (e as MouseEvent).clientX;\n\n        document.onmouseup = dragEnd;\n        document.onmousemove = dragMove;\n      }\n    };\n    slides.addEventListener('mousedown', dragStart);\n    slides.addEventListener('touchstart', dragStart);\n\n    slides.appendChild(cloneFirstSlide);\n    slides.insertBefore(cloneLastSlide, firstSlide);\n\n    const checkIndex = () => {\n      slides.classList.remove('transition');\n      if (index <= -1) {\n        (slides as HTMLDivElement).style.left = `${-(\n          slidesLength * slideWidth\n        )}px`;\n        index = slidesLength - 1;\n      }\n      if (index >= slidesLength) {\n        (slides as HTMLDivElement).style.left = `${-(1 * slideWidth)}px`;\n        index = 0;\n      }\n      canISlide = true;\n    };\n\n    slides.addEventListener('transitionend', checkIndex);\n\n    const switchSlide = (arg: string, arg2?: string) => {\n      slides.classList.add('transition');\n      if (canISlide) {\n        if (!arg2) {\n          initialPosition = (slides as HTMLDivElement).offsetLeft;\n        }\n        if (arg === 'next') {\n          (slides as HTMLDivElement).style.left = `${\n            initialPosition - slideWidth\n          }px`;\n          index++;\n        } else {\n          (slides as HTMLDivElement).style.left = `${\n            initialPosition + slideWidth\n          }px`;\n          index--;\n        }\n      }\n      canISlide = false;\n    };\n\n    prev.addEventListener('click', () => switchSlide('prev'));\n    next.addEventListener('click', () => switchSlide('next'));\n  });\n  return (\n    <Wrapper>\n      <div className=\"slider\">\n        <div className=\"slides\">\n          <div className=\"slide\">\n            <img\n              src=\"https://i.pinimg.com/originals/7f/21/3f/7f213f8a3e039d2b66ab88a2ec2ccf87.png\"\n              alt=\"\"\n            />\n          </div>\n          <span className=\"slide\">\n            <img\n              src=\"https://mblogthumb-phinf.pstatic.net/MjAxOTEwMTVfMTA1/MDAxNTcxMTQ0MjEzMzg3.AOysbEufWTaVwL4ePNbClBBlDKSvkm71V_1SxuNWNWMg.JlNebzXUQhtiznXUyztqicALU6M_d6YP9lvbfNDCWfgg.PNG.azzi_01/01.png?type=w800\"\n              alt=\"\"\n            />\n          </span>\n          <span className=\"slide\">\n            <img\n              src=\"https://i.ytimg.com/vi/VVZrp1ooCYs/maxresdefault.jpg\"\n              alt=\"\"\n            />\n          </span>\n          <span className=\"slide\">\n            <img\n              src=\"https://blog.kakaocdn.net/dn/LpVNO/btqBEBYnF30/AiHoDAkCKCT2XdeiRjCmB1/img.png\"\n              alt=\"\"\n            />\n          </span>\n        </div>\n        <a href=\"#\" className=\"prev\">\n          <i>&lt; </i>\n        </a>\n        <a href=\"#\" className=\"next\">\n          <i>&gt; </i>\n        </a>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Draggable;\n"],"sourceRoot":""}