{"version":3,"sources":["webpack:///./src/pages/2048.tsx"],"names":["Table","styled","table","Wrapper","div","Game2048","useState","data","setData","score","setScore","add2","useRef","isEnd","startCoords","prevData","put2ToRandomCell","useCallback","emptyCells","forEach","rowData","rowIndex","cellData","cellIndex","push","length","randomCell","Math","floor","random","newData","moveLeft","tempData","currentRow","abs","Array","fill","_","moveRight","moveUp","moveDown","moveCells","direction","console","log","result","JSON","stringify","current","checkLoose","count","startGame","useEffect","keyDownEvent","event","key","mouseDownEvent","clientX","clientY","mouseUpEvent","endCoords","diffX","diffY","window","addEventListener","removeEventListener","flat","every","d","setTimeout","alert","includes","unshift","map","tr","idx","td","className","onClick","stopPropagation"],"mappings":"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","file":"component---src-pages-2048-tsx-c71afad077d9a6ec4025.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  td {\n    border: 10px solid #bbada0;\n    width: 116px;\n    height: 128px;\n    font-size: 50px;\n    font-weight: bold;\n    text-align: center;\n  }\n`;\nconst Wrapper = styled.div`\n  user-select: none;\n\n  .color-2 {\n    background-color: #eee4da;\n    color: #776e65;\n  }\n  .color-4 {\n    background-color: #eee1c9;\n    color: #776e65;\n  }\n  .color-8 {\n    background-color: #f3b27a;\n    color: 'white';\n  }\n  .color-16 {\n    background-color: #f69664;\n    color: 'white';\n  }\n  .color-32 {\n    background-color: #f77c5f;\n    color: 'white';\n  }\n  .color-64 {\n    background-color: #f75f3b;\n    color: 'white';\n  }\n  .color-128 {\n    background-color: #edd073;\n    color: #776e65;\n  }\n  .color-256 {\n    background-color: #edcc62;\n    color: #776e65;\n  }\n  .color-512 {\n    background-color: #edc950;\n    color: #776e65;\n  }\n  .color-1024 {\n    background-color: #edc53f;\n    color: #776e65;\n  }\n  .color-2048 {\n    background-color: #edc22e;\n    color: #776e65;\n  }\n`;\nconst Game2048: React.VFC = () => {\n  const [data, setData] = useState<number[][]>([]);\n  const [score, setScore] = useState(0);\n  const add2 = useRef(false);\n  const isEnd = useRef(false);\n  const startCoords = useRef([0, 0]);\n  const prevData = useRef<{ data: number[][]; score: number[] }>({\n    data: [[]],\n    score: [0, 0],\n  });\n  const put2ToRandomCell = useCallback(() => {\n    const emptyCells = [];\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((cellData, cellIndex) => {\n        if (!cellData) {\n          emptyCells.push([rowIndex, cellIndex]);\n        }\n      });\n    });\n    if (!emptyCells.length) {\n      return;\n    }\n    const randomCell =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    setData((data) => {\n      const newData = [...data];\n      newData[randomCell[0]][randomCell[1]] = 2;\n      return newData;\n    });\n  }, [data]);\n  const moveLeft = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((cellData) => {\n        if (cellData) {\n          const currentRow = tempData[rowIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === cellData) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[rowIndex].push(cellData);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[rowIndex][cellIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveRight = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((_, cellIndex) => {\n        if (rowData[3 - cellIndex]) {\n          const currentRow = tempData[rowIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === rowData[3 - cellIndex]) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[rowIndex].push(rowData[3 - cellIndex]);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[rowIndex][3 - cellIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveUp = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData) => {\n      rowData.forEach((cellData, cellIndex) => {\n        if (cellData) {\n          const currentRow = tempData[cellIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === cellData) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[cellIndex].push(cellData);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[cellIndex][rowIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveDown = useCallback((data: number[][]) => {\n    const newData: number[][] = [[], [], [], []];\n    const tempData: number[][] = [[], [], [], []];\n    let score = 0;\n    data.forEach((rowData, rowIndex) => {\n      rowData.forEach((_, cellIndex) => {\n        if (data[3 - rowIndex][cellIndex]) {\n          const currentRow = tempData[cellIndex];\n          const prevData = currentRow[currentRow.length - 1];\n          if (prevData === data[3 - rowIndex][cellIndex]) {\n            currentRow[currentRow.length - 1] *= -2;\n            score = score + Math.abs(currentRow[currentRow.length - 1]);\n          } else {\n            tempData[cellIndex].push(data[3 - rowIndex][cellIndex]);\n          }\n        }\n      });\n    });\n    Array(4)\n      .fill(0)\n      .forEach((_, rowIndex) => {\n        Array(4)\n          .fill(0)\n          .forEach((_, cellIndex) => {\n            newData[3 - cellIndex][rowIndex] =\n              Math.abs(tempData[rowIndex][cellIndex]) || 0;\n          });\n      });\n    return { newData, score };\n  }, []);\n  const moveCells = useCallback(\n    (direction: 'up' | 'down' | 'left' | 'right') => {\n      console.log(2222);\n      if (!data?.[0]) {\n        return data;\n      }\n      let result = { newData: data, score: 0 };\n      switch (direction) {\n        case 'left':\n          result = moveLeft(data);\n          break;\n        case 'right':\n          result = moveRight(data);\n          break;\n        case 'up':\n          result = moveUp(data);\n          break;\n        case 'down':\n          result = moveDown(data);\n          break;\n        default:\n          result = { newData: data, score: 0 };\n      }\n\n      if (JSON.stringify(data) !== JSON.stringify(result.newData)) {\n        prevData.current.data = data;\n        add2.current = true;\n        setScore((score) => score + result.score);\n      }\n      setData(result.newData);\n    },\n    [data],\n  );\n\n  const checkLoose = useCallback(() => {\n    if (!data?.[0]) {\n      return false;\n    }\n    let count = 0;\n    if (JSON.stringify(data) === JSON.stringify(moveLeft(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveRight(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveUp(data).newData)) {\n      count += 1;\n    }\n    if (JSON.stringify(data) === JSON.stringify(moveDown(data).newData)) {\n      count += 1;\n    }\n    if (count >= 4) {\n      return true;\n    }\n  }, [data]);\n\n  const startGame = useCallback(() => {\n    const newData = [\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      new Array(4).fill(0),\n      // [1024, 2, 4, 2],\n      // [2, 1024, 8, 4],\n      // [1024, 2, 4, 2],\n      // [2, 1024, 16, 32],\n    ];\n    setData(newData);\n    add2.current = true;\n  }, []);\n  useEffect(() => {\n    startGame();\n  }, []);\n  useEffect(() => {\n    const keyDownEvent = (event) => {\n      if (event.key === 'ArrowUp') {\n        moveCells('up');\n      }\n      if (event.key === 'ArrowDown') {\n        moveCells('down');\n      }\n      if (event.key === 'ArrowLeft') {\n        moveCells('left');\n      }\n      if (event.key === 'ArrowRight') {\n        moveCells('right');\n      }\n    };\n    const mouseDownEvent = (event) => {\n      startCoords.current = [event.clientX, event.clientY];\n    };\n    const mouseUpEvent = (event) => {\n      const endCoords = [event.clientX, event.clientY];\n      const diffX = endCoords[0] - startCoords.current[0];\n      const diffY = endCoords[1] - startCoords.current[1];\n      if (diffX < 0 && Math.abs(diffX) > Math.abs(diffY)) {\n        moveCells('left');\n      }\n\n      if (diffX > 0 && Math.abs(diffX) > Math.abs(diffY)) {\n        moveCells('right');\n      }\n\n      if (diffY > 0 && Math.abs(diffX) <= Math.abs(diffY)) {\n        moveCells('down');\n      }\n\n      if (diffY < 0 && Math.abs(diffX) <= Math.abs(diffY)) {\n        moveCells('up');\n      }\n    };\n    window.addEventListener('keydown', keyDownEvent);\n    window.addEventListener('mousedown', mouseDownEvent);\n    window.addEventListener('mouseup', mouseUpEvent);\n    return () => {\n      window.removeEventListener('keydown', keyDownEvent);\n      window.removeEventListener('mousedown', mouseDownEvent);\n      window.removeEventListener('mouseup', mouseUpEvent);\n    };\n  }, [data]);\n\n  useEffect(() => {\n    if (\n      data?.length > 3 &&\n      !data.flat().every((d) => d === 0) &&\n      checkLoose()\n    ) {\n      setTimeout(() => {\n        alert('패배했습니다...');\n      }, 500);\n    }\n    if (!isEnd.current && data.flat().includes(2048)) {\n      isEnd.current = true;\n      setTimeout(() => {\n        alert('축하합니다. 2048을 만들었습니다.');\n      }, 500);\n    }\n    if (data.length > 0 && add2.current) {\n      put2ToRandomCell();\n      add2.current = false;\n    }\n  }, [data]);\n  useEffect(() => {\n    if (score === prevData.current.score[1]) {\n      prevData.current.score = [score, score];\n    }\n    prevData.current.score.unshift(score);\n    prevData.current.score.length = 2;\n  }, [score]);\n  return (\n    <Wrapper>\n      <Table>\n        <tbody>\n          {data.map((tr, idx) => {\n            return (\n              <tr key={`${tr}-${idx}`}>\n                {tr.map((td, idx) => {\n                  return (\n                    <td className={`color-${td}`} key={`${td}-${idx}`}>\n                      {!!td && td}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      <div>\n        <span>{score}</span>\n        <button\n          onClick={(event) => {\n            event.stopPropagation();\n            setData(prevData.current.data);\n            setScore(prevData.current.score[1]);\n          }}\n        >\n          되돌리기\n        </button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Game2048;\n"],"sourceRoot":""}