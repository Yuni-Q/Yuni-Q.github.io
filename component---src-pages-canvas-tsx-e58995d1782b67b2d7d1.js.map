{"version":3,"file":"component---src-pages-canvas-tsx-e58995d1782b67b2d7d1.js","mappings":"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","sources":["webpack://yuni-q-blog/./src/pages/canvas.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst Canvas: React.FC = () => {\n  useEffect(() => {\n    const canvas = document.getElementById('myCanvas') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d');\n    const ballRadius = 10;\n    let x = canvas.width / 2;\n    let y = canvas.height - 30;\n    let dx = 3;\n    let dy = 3;\n    const paddleHeight = 10;\n    const paddleWidth = 75;\n    let paddleX = (canvas.width - paddleWidth) / 2;\n    let rightPressed = false;\n    let leftPressed = false;\n    const brickRowCount = 5;\n    const brickColumnCount = 3;\n    const brickWidth = 75;\n    const brickHeight = 20;\n    const brickPadding = 10;\n    const brickOffsetTop = 30;\n    const brickOffsetLeft = 30;\n    let score = 0;\n    let lives = 3;\n    let isWidth = false;\n    let isHeight = false;\n\n    const bricks = [];\n    for (let c = 0; c < brickColumnCount; c++) {\n      bricks[c] = [];\n      for (let r = 0; r < brickRowCount; r++) {\n        bricks[c][r] = { x: 0, y: 0, status: 3 - c };\n      }\n    }\n\n    document.addEventListener('keydown', keyDownHandler, false);\n    document.addEventListener('keyup', keyUpHandler, false);\n    document.addEventListener('mousemove', mouseMoveHandler, false);\n\n    function keyDownHandler(e) {\n      if (e.key == 'Right' || e.key == 'ArrowRight') {\n        rightPressed = true;\n      } else if (e.key == 'Left' || e.key == 'ArrowLeft') {\n        leftPressed = true;\n      }\n    }\n\n    function keyUpHandler(e) {\n      if (e.key == 'Right' || e.key == 'ArrowRight') {\n        rightPressed = false;\n      } else if (e.key == 'Left' || e.key == 'ArrowLeft') {\n        leftPressed = false;\n      }\n    }\n\n    function mouseMoveHandler(e) {\n      const relativeX = e.clientX - canvas.offsetLeft;\n      if (relativeX > 0 && relativeX < canvas.width) {\n        paddleX = relativeX - paddleWidth / 2;\n      }\n    }\n    function collisionDetection() {\n      for (let c = 0; c < brickColumnCount; c++) {\n        for (let r = 0; r < brickRowCount; r++) {\n          const b = bricks[c][r];\n          if (\n            x > b.x &&\n            x < b.x + brickWidth &&\n            y > b.y &&\n            y < b.y + brickHeight\n          ) {\n            if (b.status > 0) {\n              if (b.status === 1) {\n                b.status = 0;\n                score++;\n                if (score == brickRowCount * brickColumnCount) {\n                  alert('YOU WIN, CONGRATS!');\n                  document.location.reload();\n                }\n              }\n              if (isWidth && !isHeight) {\n                if (Math.abs(b.y - y) > Math.abs(b.y + brickWidth - y)) {\n                  console.log('1');\n                  dx = -dx;\n                } else {\n                  console.log('2');\n                  dx = -dx;\n                }\n              } else if (isHeight && !isWidth) {\n                if (Math.abs(b.x - x) > Math.abs(b.x + brickWidth - x)) {\n                  console.log('3');\n                  dy = -dy;\n                } else {\n                  console.log('4');\n                  dy = -dy;\n                }\n              }\n              b.status -= 1;\n              isWidth = false;\n              isHeight = false;\n            }\n          } else {\n            if (!isHeight && !isWidth) {\n              if (x > b.x && x < b.x + brickWidth) {\n                isWidth = true;\n              } else if (y > b.y && y < b.y + brickHeight) {\n                isHeight = true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    function drawBall() {\n      ctx.beginPath();\n      ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\n      ctx.fillStyle = '#0095DD';\n      ctx.fill();\n      ctx.closePath();\n    }\n    function drawPaddle() {\n      ctx.beginPath();\n      ctx.rect(\n        paddleX,\n        canvas.height - paddleHeight,\n        paddleWidth,\n        paddleHeight,\n      );\n      ctx.fillStyle = '#0095DD';\n      ctx.fill();\n      ctx.closePath();\n    }\n    function drawBricks() {\n      for (let c = 0; c < brickColumnCount; c++) {\n        for (let r = 0; r < brickRowCount; r++) {\n          if (bricks[c][r].status > 0) {\n            const brickX = r * (brickWidth + brickPadding) + brickOffsetLeft;\n            const brickY = c * (brickHeight + brickPadding) + brickOffsetTop;\n            bricks[c][r].x = brickX;\n            bricks[c][r].y = brickY;\n            ctx.beginPath();\n            ctx.rect(brickX, brickY, brickWidth, brickHeight);\n            ctx.fillStyle =\n              bricks[c][r].status === 3\n                ? 'black'\n                : bricks[c][r].status === 2\n                ? 'red'\n                : '#0095DD';\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n    function drawScore() {\n      ctx.font = '16px Arial';\n      ctx.fillStyle = '#0095DD';\n      ctx.fillText('Score: ' + score, 8, 20);\n    }\n    function drawLives() {\n      ctx.font = '16px Arial';\n      ctx.fillStyle = '#0095DD';\n      ctx.fillText('Lives: ' + lives, canvas.width - 65, 20);\n    }\n\n    function draw() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBricks();\n      drawBall();\n      drawPaddle();\n      drawScore();\n      drawLives();\n      collisionDetection();\n\n      if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\n        dx = -dx;\n      }\n      if (y + dy < ballRadius) {\n        dy = -dy;\n      } else if (y + dy > canvas.height - ballRadius) {\n        if (x > paddleX && x < paddleX + paddleWidth) {\n          dy = -dy;\n        } else {\n          lives--;\n          if (!lives) {\n            alert('GAME OVER');\n            document.location.reload();\n          } else {\n            x = canvas.width / 2;\n            y = canvas.height - 30;\n            dx = 3;\n            dy = -3;\n            paddleX = (canvas.width - paddleWidth) / 2;\n          }\n        }\n      }\n\n      if (rightPressed && paddleX < canvas.width - paddleWidth) {\n        paddleX += 7;\n      } else if (leftPressed && paddleX > 0) {\n        paddleX -= 7;\n      }\n\n      x += dx;\n      y += dy;\n      requestAnimationFrame(draw);\n    }\n\n    draw();\n  }, []);\n  const a = (\n    <div>\n      <canvas id=\"myCanvas\" width=\"480\" height=\"320\"></canvas>\n    </div>\n  );\n  return a;\n};\n\nexport default Canvas;\n"],"names":["Canvas","useEffect","canvas","document","getElementById","ctx","getContext","x","width","y","height","dx","dy","paddleWidth","paddleX","rightPressed","leftPressed","brickWidth","score","lives","isWidth","isHeight","bricks","c","r","status","addEventListener","e","key","relativeX","clientX","offsetLeft","draw","clearRect","brickX","brickY","beginPath","rect","fillStyle","fill","closePath","drawBricks","arc","Math","PI","font","fillText","b","brickRowCount","alert","location","reload","abs","console","log","collisionDetection","requestAnimationFrame","React","id"],"sourceRoot":""}